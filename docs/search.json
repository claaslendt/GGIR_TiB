[{"path":[]},{"path":"/articles/CutPoints.html","id":"considerations","dir":"Articles","previous_headings":"","what":"Considerations","title":"Published cut-points and how to use them in GGIR","text":"physical activity research field used called cut-points segment accelerometer time series based level intensity. vignette compiled list published cut-points instructions use GGIR. newer cut-points frequently published list may date. Please let us know aware published cut-points missed!","code":""},{"path":"/articles/CutPoints.html","id":"cut-points-expressed-in-gravitational-units-this-vignette","dir":"Articles","previous_headings":"Considerations","what":"Cut-points expressed in gravitational units (this vignette)","title":"Published cut-points and how to use them in GGIR","text":"vignette focuses cut-points metrics attempt quantify average acceleration per epoch gravitational units. strength metrics values affected sampling rate epoch length improving comparability across studies.","code":""},{"path":"/articles/CutPoints.html","id":"cut-points-not-expressed-in-gravitational-units-not-in-this-vignette","dir":"Articles","previous_headings":"Considerations","what":"Cut-points NOT expressed in gravitational units (not in this vignette)","title":"Published cut-points and how to use them in GGIR","text":"However, GGIR also facilitates metrics whose values expressed gravitational units historically used. example, metric described Neishabouri (see GGIR argument .neishabouricounts) reflects indicator accumulated body movement time, referred counts, calculated ActiLife software ActiGraph accelerometer brand. Cut-points counts corresponding ActiGraph brand recurrently proposed literature, example, see systematic review stratification age group. Note cut-points ActiGraph counts proposed introduction multiday raw data collection likely hardware-based calculations may perfectly align ActiGraph software-based (Actilife) calculations counts Neishabouri described. result, older cut-points may need used caution. cut-points find literature ActiGraph counts applied Neishabouri counts directly epoch length specific. cut-points literature need corrected conversion factor. conversion factor calculated epoch length new study (e.g. 5 seconds) divided epoch length original study (e.g. 60 seconds). Note correction differences sampling rate needed Neishabouri counts already account via -sampling. want use cut-point “100 counts per minute” literature 5 second epoch data, GGIR function call look like :","code":"GGIR([...],      mode = 1:5,      windowsizes = c(5, 900, 3600),      do.neishabouricounts = TRUE,      acc.metric = \"NeishabouriCount_y\",      threshold.in = 100 * (5/60),      [...])"},{"path":"/articles/CutPoints.html","id":"relevant-arguments-to-use-cut-points-in-ggir","dir":"Articles","previous_headings":"","what":"Relevant arguments to use cut-points in GGIR","title":"Published cut-points and how to use them in GGIR","text":"argument mvpathreshold used part 2 quantify time accumulated user-specified threshold moderate--vigorous intensity expected occur. mvpathreshold applied metrics extracted part 1 arguments .metric (e.g., .enmo, .mad, .neishabouricounts). part 5, threshold.lig, threshold.mod, threshold.vig used indicate thresholds separate inactivity light, light moderate, moderate vigorous, respectively.thresholds applied metric defined acc.metric (default = “ENMO”). summary table parameters definition calculate acceleration metrics previously used calibration cut-points define used physical activity intensity classification cut-points.","code":""},{"path":[]},{"path":"/articles/CutPoints.html","id":"cut-points-for-preschoolers","dir":"Articles","previous_headings":"Summary of published cut-points","what":"Cut-points for preschoolers","title":"Published cut-points and how to use them in GGIR","text":"*publications used acceleration metrics sum values per epoch rather average per epoch like GGIR . , use cut-point GGIR, provide scaled version cut-points presented paper : (CutPointFromPaper_in_gsecs/85.7) * 1000. Note sample frequency 87.5 reported publication incorrect based correspondence authors replaced 85.7.","code":""},{"path":"/articles/CutPoints.html","id":"cut-points-for-childrenadolescents","dir":"Articles","previous_headings":"Summary of published cut-points","what":"Cut-points for children/adolescents","title":"Published cut-points and how to use them in GGIR","text":"*publications used acceleration metrics sum values per epoch rather average per epoch like GGIR . , use cut-point GGIR, provide scaled version cut-points presented paper : (CutPointFromPaper_in_gmins/(sampleRateFromPaper * EpochLengthInSecondsPaper)) * 1000 ** publication used acceleration metrics expressed cut-points g units. , use cut-point GGIR, provide cut-point multiplied 1000.","code":""},{"path":"/articles/CutPoints.html","id":"cut-points-for-adults","dir":"Articles","previous_headings":"Summary of published cut-points","what":"Cut-points for adults","title":"Published cut-points and how to use them in GGIR","text":"*publications used acceleration metrics sum values per epoch rather average per epoch like GGIR . , use cut-point GGIR, provide scaled version cut-points presented paper : (CutPointFromPaper_in_gmins/(sampleRateFromPaper * EpochLengthInSecondsPaper)) * 1000 † publication, cut-point based data sampled 30 Hz 100 Hz. scaling cut-points specified (*), resulting thresholds virtually (ones presented table).","code":""},{"path":"/articles/CutPoints.html","id":"cut-points-for-older-adults","dir":"Articles","previous_headings":"Summary of published cut-points","what":"Cut-points for older adults","title":"Published cut-points and how to use them in GGIR","text":"*Cut-points derived applying Youden index ROC curves. ** Cut-points derived increasing Sensitivity Specificity light vice versa moderate ROC curves (see paper details).† publications used acceleration metrics sum values per epoch rather average per epoch like GGIR . , use cut-point GGIR, provide scaled version cut-points presented paper : (CutPointFromPaper_in_gmins/(sampleRateFromPaper * EpochLengthInSecondsPaper)) * 1000 ‡ cut-points excluding data aided walking washing activities can found publication.","code":""},{"path":"/articles/CutPoints.html","id":"notes-on-cut-point-validity","dir":"Articles","previous_headings":"","what":"Notes on cut-point validity","title":"Published cut-points and how to use them in GGIR","text":"Sensor calibration studies , excluding Hildebrand et al. 2016, effort made calibrate acceleration sensors relative gravitational acceleration prior cut-point development. Theoretically can expected cause bias cut-point estimates proportional calibration error device, especially cut-points based acceleration metrics rely assumption accurate calibration metrics: ENMO, EN, ENMOa, also metric SVMgs used studies Esliger 2011, Phillips 2013, Dibben 2020. Idle sleep mode ActiGraph discussed main package vignette, studies using ActiGraph sensor often forget clarify whether idle sleep mode used , accounted data processing. criticism towards cut-point methods? elaborate reflection limitations cut-points motivation cut-points still value GGIR see: https://www.accelting.com/updates/--ggir-facilitate-cut-points/","code":""},{"path":"/articles/CutPoints.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Published cut-points and how to use them in GGIR","text":"Esliger 2011: https://journals.lww.com/acsm-msse/Fulltext/2011/06000/Validation_of_the_GENEA_Accelerometer.22.aspx Phillips 2013: https://doi.org/10.1016/j.jsams.2012.05.013 Schaefer 2014: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3960318/ Hildebrand 2014: https://journals.lww.com/acsm-msse/Fulltext/2014/09000/Age_Group_Comparability_of_Raw_Accelerometer.17.aspx Hildebrand 2016: https://doi.org/10.1111/sms.12795 Vähä-Ypyä 2015: https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0134813 Aittasalo 2015: https://bmcsportsscimedrehabil.biomedcentral.com/articles/10.1186/s13102-015-0010-0 Roscoe 2017: https://link.springer.com/article/10.1007/s00431-017-2948-2 Sanders 2018: https://doi.org/10.1080/02640414.2018.1555904 Migueles 2021: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8150960/ Fraysse 2020: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7843957/ Dibben 2020: https://bmcsportsscimedrehabil.biomedcentral.com/articles/10.1186/s13102-020-00196-7 Dillon 2016: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4858250/","code":""},{"path":"/articles/ExternalFunction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Embedding external functions in GGIR","text":"like GGIR want use algorithms raw data included GGIR external function embedding feature can solution. example, may want pilot new machine learned classifiction algorithm want write data cleaning aggregation steps needed analysis real life ‘lab’ acceleormeter data. works: Internally GGIR loads raw accelerometer data memory blocks 24 hours. data memory, corrected calibration error, resampled sample rate required function, GGIR applies default algorithms well external function provided (Python R). external function expected take input: three-column matrix acceleration data corresponding three acceleration axes, optional parameters argument can R format (character, list, vector, data.frame, etc). output external function expected produce matrix data.frame one multiple columns corresponding output external function.","code":""},{"path":"/articles/ExternalFunction.html","id":"example-with-external-r-function","dir":"Articles","previous_headings":"","what":"Example with external R function","title":"Embedding external functions in GGIR","text":"example apply function counts() R package activityCounts raw data, produces estimate Actigraph counts per second.","code":""},{"path":"/articles/ExternalFunction.html","id":"write-external-function","dir":"Articles","previous_headings":"Example with external R function","what":"Write external function","title":"Embedding external functions in GGIR","text":"Create file calculateCounts.R insert following code:","code":"calculateCounts = function(data=c(), parameters=c()) {   # data: 3 column matrix with acc data   # parameters: the sample rate of data   library(\"activityCounts\")   if (ncol(data) == 4) data= data[,2:4]   mycounts = counts(data=data, hertz=parameters,                      x_axis=1, y_axis=2, z_axis=3,                     start_time = Sys.time())   mycounts = mycounts[,2:4] #Note: do not provide timestamps to GGIR   return(mycounts) }"},{"path":"/articles/ExternalFunction.html","id":"provide-external-function-to-ggir","dir":"Articles","previous_headings":"Example with external R function","what":"Provide external function to GGIR","title":"Embedding external functions in GGIR","text":"Create new .R file running GGIR analysis, e.g. named myscript.R, insert following code. forget update filepath first line point calculateCounts.R file. code creates object myfun type list expected come following elements: FUN character string specifying location external function want apply. parameters parameters used function, can stored format (vector, matrix, list, data.frame). user make sure external function can handle object. expected_sample_rate Expected sample rate, inputdata difference sample rate, data resampled. expected_unit Expected unit acceleration external function: “mg”, “g” “ms2”. input data different converted. colnames Character vector names columns produced external function. outputres resolution (seconds) output produced external function. Note, needs equal multitude short epoch size g.part1 output (5 seconds) short epoch size multitude resolution. way GGIR can aggregate repeat external function output used inside GGIR. minlength minimum length (seconds) input data needed, typically window per output provided. outputtype Character indicate type external function output. Set “numeric” data stored numbers (numeric format), “character” character string. aggfunction data needs aggregated match short epoch size g.part1 output (5 seconds) element specifies function used aggregation, e.g. mean, sum, median. timestamp Boolean indicated whether timestamps (seconds since 1-1-1970) passed external function first columm data matrix.. reporttype Character indicate type reporting GGIR: “scalar” averaged per day, “event” summed per day, “type” categorical variable can aggregated per day tabulating . Next, add call GGIR function GGIR myfun provided one arguments: Please see  information function GGIR.","code":"source(\"~/calculateCounts.R\") myfun =  list(FUN=calculateCounts,               parameters= 30,               expected_sample_rate= 30,               expected_unit=\"g\",               colnames = c(\"countsX\",\"countsY\",\"countsZ\"),               outputres = 1,               minlength = 1,               outputtype=\"numeric\",               aggfunction = sum,               timestamp=F,               reporttype=\"scalar\") library(GGIR) GGIR(datadir=\"~/myaccelerometerdata\",              outputdir=\"~/myresults\",              mode=1:2,              epochvalues2csv = TRUE,              do.report=2,              myfun=myfun) #<= this is where object myfun is provided to GGIR"},{"path":"/articles/ExternalFunction.html","id":"example-with-external-python-function","dir":"Articles","previous_headings":"","what":"Example with external Python function","title":"Embedding external functions in GGIR","text":"example use external Python function estimate dominant signal frequency per acceleration axis. Note can also done R, shows even Python functions can provided.","code":""},{"path":"/articles/ExternalFunction.html","id":"write-external-function-1","dir":"Articles","previous_headings":"Example with external Python function","what":"Write external function","title":"Embedding external functions in GGIR","text":"Create dominant_frequency.py insert code shown : Create dominant_frequency.R calls python function insert following code:","code":"import numpy  def dominant_frequency(x, sf):   # x: vector with data values   # sf: sample frequency   fourier = numpy.fft.fft(x)   frequencies = numpy.fft.fftfreq(len(x), 1/sf)   magnitudes = abs(fourier[numpy.where(frequencies > 0)])   peak_frequency = frequencies[numpy.argmax(magnitudes)]   return peak_frequency dominant_frequency = function(data=c(), parameters=c()) {   # data: 3 column matrix with acc data   # parameters: the sample rate of data   source_python(\"dominant_frequency.py\")   sf=parameters   N = nrow(data)   ws = 5 # windowsize   if (ncol(data) == 4) data= data[,2:4]   data = data.frame(t= floor(seq(0,(N-1)/sf,by=1/sf)/ws),                     x=data[,1], y=data[,2], z=data[,3])   df = aggregate(data, by = list(data$t),                   FUN=function(x) {return(dominant_frequency(x,sf))})   df = df[,-c(1:2)]   return(df) } }"},{"path":"/articles/ExternalFunction.html","id":"provide-external-function-to-ggir-1","dir":"Articles","previous_headings":"Example with external Python function","what":"Provide external function to GGIR","title":"Embedding external functions in GGIR","text":"Create new .R file running GGIR analysis, e.g. named myscript.R, insert following blocks code. Specification Python environment use, can also conda environment docker container (see documentation R package  details). Make sure Python environment required dependencies external function, need numpy. Specify myfun object explained R example. forget update filepath \"~/dominant_frequency.R\" file. Add call function GGIR myfun provided argument. Note , .parallel set FALSE. Unfortunately Python embedding R package reticulate multi-threading R package foreach used GGIR combine well.","code":"library(\"reticulate\")   use_virtualenv(\"~/myvenv\", required = TRUE) # Local Python environment   py_install(\"numpy\", pip = TRUE) source(\"~/dominant_frequency.R\") myfun =  list(FUN=dominant_frequency,               parameters= 30,               expected_sample_rate= 30,               expected_unit=\"g\",               colnames = c(\"domfreqX\", \"domfreqY\", \"domfreqZ\"),               minlength = 5,               outputres = 5,               outputtype=\"numeric\",               aggfunction = median               timestamp=F,               reporttype=\"scalar\") library(GGIR) GGIR(datadir=\"~/myaccelerometerdata\",              outputdir=\"~/myresults\",              mode=1:2,              epochvalues2csv = TRUE,              do.report=2,              myfun=myfun,              do.parallel = FALSE)"},{"path":[]},{"path":"/articles/ExternalFunction.html","id":"part-1","dir":"Articles","previous_headings":"Integration in GGIR output","what":"Part 1","title":"Embedding external functions in GGIR","text":"external function output included time series produced function GGIR function g.part1 stored RData-file /output_nameofstudy/meta/basic. resolution output GGIR set GGIR argument windowsizes, c(5,900,3600) default. , first element 5 specifies short epoch size seconds. output external function less resolution aggregated function specificied aggfunction myfun object. count example used sum dominant frequency example used median.","code":""},{"path":"/articles/ExternalFunction.html","id":"part-2","dir":"Articles","previous_headings":"Integration in GGIR output","what":"Part 2","title":"Embedding external functions in GGIR","text":"Next, part2 GGIR aims detect non-wear periods imputes . impute time series can found part 2 milestone data folder: /output_nameofstudy/meta/ms2.. want directly stored csv file set argument epochvalues2csv = TRUE.","code":""},{"path":"/articles/ExternalFunction.html","id":"external-functions-released-by-ggir-collaborators","dir":"Articles","previous_headings":"","what":"External functions released by GGIR collaborators:","title":"Embedding external functions in GGIR","text":"Wrist-based step detection algorithm: https://github.com/ShimmerEngineering/Verisense-Toolbox/tree/master/Verisense_step_algorithm Wrist-based sleep classification described Sundararajan et al. 2021 link paper, corresponding code : https://github.com/wadpac/SleepStageClassification/tree/master/ggir_ext","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"what-is-ggir","dir":"Articles","previous_headings":"Introduction","what":"What is GGIR?","title":"Accelerometer data processing with GGIR","text":"GGIR R-package process multi-day raw accelerometer data physical activity sleep research. term raw refers data expressed m/s2 gravitational acceleration opposed previous generation accelerometers stored data accelerometer brand specific units. signal processing includes automatic calibration, detection sustained abnormally high values, detection non-wear calculation average magnitude dynamic acceleration based variety metrics. Next, GGIR uses information describe data per recording, per day measurement, (optionally) per segment day measurement, including estimates physical activity, inactivity sleep. published overview paper GGIR 2019 link. vignette provides general introduction use GGIR interpret output, additionally can find introduction video mini-tutorial YouTube. want use algorithms raw data GGIR facilitates ’s external function embedding feature, documented separate vignette: Embedding external functions GGIR. GGIR increasingly used research groups across world. non-exhaustive overview academic publications related GGIR can found . R package GGIR possible without support contributors listed author list GGIR, specific code contributions time since April 2016 (GGIR development moved GitHub) shown . Cite GGIR: use GGIR publications forget cite properly makes research reproducible gives credit ’s developers. See paragraph Citing GGIR details.","code":""},{"path":"/articles/GGIR.html","id":"contributing-support-and-keeping-up-to-date","dir":"Articles","previous_headings":"Introduction","what":"Contributing, Support, and Keeping up to date","title":"Accelerometer data processing with GGIR","text":"contribute code? development version GGIR can found github, also find guidance contribute. can get service support? GGIR open source software come service support guarantees. However, user-community can help via GGIR google group GitHub issue tracker. Please use public platform rather private e-mails users can learn conversations. need dedicated support use GGIR need someone adapt GGIR needs Vincent van Hees available independent consultant. Training R essentials GGIR offer frequent online GGIR training courses. Check dedicated training website details option book training. questions training booking process? hesitate contact us via: training@accelting.com. Also interest may brief free R introduction tutorial. Change log log main changes GGIR time can found .","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"install-r-and-rstudio","dir":"Articles","previous_headings":"Setting up your work environment","what":"Install R and RStudio","title":"Accelerometer data processing with GGIR","text":"Download install R Download install RStudio Install GGIR dependencies CRAN. can one command console command line: Alternatively, install latest development version latest bug fixes use instead: Additionally, use-cases need install one multiple additional packages: working Axivity, GENEActiv, GENEA files, install GGIRread package install.packages(\"GGIRread\") working ActiGraph gt3x files, install read.gt3x package install.packages(\"read.gt3x\") want derive Neishabouricounts (.neishabouricounts = TRUE), install actilifecounts package install.packages(\"actilifecounts\") want derive circadian rhythm indicators using Cosinor analysis Extended Cosinor analysis (cosinor = TRUE), install ActCR package install.packages(\"ActCR\")","code":"install.packages(\"GGIR\", dependencies = TRUE) install.packages(\"remotes\") remotes::install_github(\"wadpac/GGIR\")"},{"path":"/articles/GGIR.html","id":"prepare-folder-structure","dir":"Articles","previous_headings":"Setting up your work environment","what":"Prepare folder structure","title":"Accelerometer data processing with GGIR","text":"GENEActiv .bin Axivity AX3 AX6 .cwa ActiGraph .csv .gt3x (.gt3x newer format generated firmware versions 2.5.0. Serial numbers start “NEO” “MRA” firmware version 2.5.0 earlier use older format .gt3x file). Note Actigraph users: want work .csv exports via commercial ActiLife software note option export data timestamps. Please causes memory issues GGIR. cope absence timestamps GGIR calculate timestamps sample frequency, start time start date presented file header. Movisens data stored folders. accelerometer brand generates csv output, see documentation functions read.myacc.csv argument rmc.noise GGIR function documentation (pdf). Note functionality following file formats part GGIR deprecated required significant maintenance effort without clear use case community support: (1) .bin Genea monitor Unilever Discover, accelerometer used studies 2007 2012) .bin, (2) .wav files can exported Axivity Ltd OMGUI software. Please contact us think data formats facilitated GGIR interested supporting ongoing maintenance. accelerometer data needs analysed stored one folder, subfolders folder. Give folder appropriate name, preferable reference study project related rather just ‘data’, name folder used later identifier dataset.","code":""},{"path":"/articles/GGIR.html","id":"ggir-shell-function","dir":"Articles","previous_headings":"Setting up your work environment","what":"GGIR shell function","title":"Accelerometer data processing with GGIR","text":"GGIR comes large number functions optional settings (arguments) per functions. ease interacting GGIR one central function, named GGIR, talk functions. past function called g.shell.GGIR, decided shorten GGIR convenience. can still use g.shell.GGIR g.shell.GGIR become wrapper function around GGIR passing arguments GGIR providing identical functionality. paragraph guide main arguments GGIR relevant 99% research. First , important understand GGIR package structured two ways. Firstly, computational structure five parts applied sequentially data, GGIR controls parts: Part 1: Loads data stores derived features (aggregations) needed parts. time-consuming part. done, parts 2-5 can run (re-run different parameters parts 2-5) relatively quickly. Part 2: Data quality analyses low-level description signal features per day per file. point day defined midnight midnight Part 3: Estimation sustained inactivity sleep periods, needed input Part 4 sleep detection Part 4: Labels sustained inactive periods detected Part 3 sleep, daytime sustained inactivity, per night per file Part 5: Derives sleep physical activity characteristics re-using information derived part 2, 3 4. Total time intensity categories, number bouts, time spent bouts average acceleration (overall activity) calculated. reason split parts avoids re-analysis want make small change downstream parts. specific order content parts grown historical computational reasons. Secondly, function arguments refer input parameters structured thematically independently five parts used : params_rawdata: parameters related handling raw data resampling calibrating params_metrics: parameters related aggregating raw data epoch level summary metrics params_sleep: parameters related sleep detection params_physact: parameters related physical activity params_247: parameters related 24/7 behaviours fall typical sleep physical activity research category. params_output: parameters relating whether output stored. params_general: general parameters covered categories structure introduced GGIR version 2.5-6 make GGIR code documentation easier navigate. see parameters parameter category default values : interested one specific category like sleep: interested parameter “HASIB.algo” sleep_params object: Documentation arguments parameter objects can found vignette: GGIR configuration parameters. arguments accepted argument function GGIR, GGIR shell around GGIR functionality. However, params_ objects can provided input GGIR.","code":"library(GGIR) print(load_params()) library(GGIR) print(load_params()$params_sleep) library(GGIR) print(load_params()$params_sleep[[\"HASIB.algo\"]])"},{"path":"/articles/GGIR.html","id":"key-general-arguments","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Key general arguments","title":"Accelerometer data processing with GGIR","text":"probably never need think arguments listed , lot arguments included facilitate methodological studies researchers want control every little detail. See previous paragraph links documentation find default value parameter. bare minimum input needed GGIR : Argument datadir allows specify stored accelerometer data outputdir allows specify like output analyses stored. equal datadir. copy paste code new R script (file ending .R) Source R(Studio) dataset processed output stored specified output directory. highlighted key arguments may want aware . giving detailed explanation, please see package manual . mode - part GGIR run, GGIR constructed five parts. overwrite - whether overwrite previously produced milestone output. GGIR part, GGIR stores milestone output ease re-running parts pipeline. idloc - tells GGIR find participant ID (default: inside file header) data_masking_strategy set value 1, check arguments hrs.del.start hrs.del.end. data_masking_strategy set value 3 5, check arguments ndayswindow, hrs.del.start hrs.del.end. maxdur - maximum number days expect data file based study protocol. desiredtz - time zone experiment. chunksize - way tell GGIR use less memory, can useful machines limited memory. includedaycrit - tell GGIR many hours valid data per day (midnight-midnight) acceptable. includenightcrit - tell GGIR many hours valid night (noon-noon) acceptable. qwindow - argument tell GGIR whether segment day day-segment specific analysis. mvpathreshold boutcriter - acceleration threshold bout criteria used calculating time spent MVPA (used GGIR part2). epochvalues2csv - export epoch level magnitude acceleration csv files (addition already stored RData file) dayborder - decide whether edge day midnight. iglevels - argument related intensity gradient method proposed . Rowlands. .report - specify reports need generated. viewingwindow visualreport - create visual report, works five parts GGIR successfully run. Note visual report initially developed provide something show study participants data quality checking purposes. time improved visual report also useful QC-ing data. however, scorings shown visual report created visual report may reflect scorings main GGIR analyses reported quantitative csv-reports. effort past 10 years gone making sure csv-report correct, visualreport mostly side project. unfortunate hope find funding future design new report specifically purpose QC-ing anlayses done GGIR. maxRecordingInterval - specified controls whether neighboring overlapping recordings participant ID brand appended epoch level. can useful intention monitor behaviour larger periods time accelerometers allow weeks data collection. GGIR never append alter raw input file, operation preformed derived data. study_dates_file - specified trims recorded data first last date study took place. relevant studies started recording several days accelerometers actually worn participants. used top data_masking_strategy, may combined strategies GGIR.","code":"library(GGIR) GGIR(datadir=\"C:/mystudy/mydata\",  outputdir=\"D:/myresults\")"},{"path":"/articles/GGIR.html","id":"key-arguments-related-to-sleep-analysis","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Key arguments related to sleep analysis","title":"Accelerometer data processing with GGIR","text":"explanation sleep detected specific role various function arguments see section Sleep analysis. Arguments related configuring sleep detection algorithm: anglethreshold, timethreshold, HASPT.algo, HASIB.algo, Sadeh_axis, HASPT.ignore.invalid. ignorenonwear set TRUE ignore detected monitor non-wear periods detection sustained inactivity bouts avoid confusion monitor non-wear time. want create visualisation sleep period time sustained inactivity bouts match throughout day consider arguments .visual, outliers., criterror. want exclude first last night sleep analysis used excludefirstlast. def.noc.sleep specifies sleep period time window estimated sleeplog used. includenightcrit Minimum number valid hours per night (24 hour window noon noon 6pm-6pm). data_cleaning_file ginore specific nights specific individuals, see also section Data cleaning file. want sleep analysis guided sleeplog (diary) check arguments loglocation specifies location spreadsheet (csv) sleep log information. , use arguments colid coln1 specify details sleep log structure. GGIR facilitates two possible sleeplog file structures:","code":""},{"path":"/articles/GGIR.html","id":"basic-sleep-log","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function > Key arguments related to sleep analysis","what":"Basic sleep log","title":"Accelerometer data processing with GGIR","text":"Example basic sleeplog: One column participant id, first column. Specify column argument colid. Alternatingly one column onset time one column waking time. Specify column column first night argument coln1, example coln1=2. Timestamps stored without date hh:mm:ss hour values ranging 0 23 (24). onset corresponds lights intention fall asleep, specify sleepwindowType = \"TimeInBed\". can multiple sleeplogs spreadsheet. row representing single recording. First row: first row spreadsheet needs filled column names. basic sleep log format matter column names .","code":""},{"path":"/articles/GGIR.html","id":"advanced-sleep-log","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function > Key arguments related to sleep analysis","what":"Advanced sleep log","title":"Accelerometer data processing with GGIR","text":"Example advanced sleeplog two recordings: Relative basic sleeplog format advanced sleep log format comes following changes: Recording stored rows, information per days stored columns. Information per day preceded one columns holds calendar date. GGIR designed recognise handle date format assumes used date format consistently sleeplog. Per calendar date column wakeup time followed column onset -bed time. Note different basic sleep log, wakeup time follows column onset -bed time. , advanced sleep log calendar date oriented: asking participant woke fell asleep certain date. However, sleep onset time 2am, still fill 02:00:00, even though 02:00:00 next calendar date. can add columns relating self-reported napping time nonwear time. used sleep analysis g.part3 g.part4, used g.part5 facilitate napping analysis, see argument .sibreport paragraph naps. Multiple naps multiple nonwear periods can entered per day. Leave cells missing values blank. Column names critical advanced sleeplog format: Date columns recognised GGIR column name word “date” . advanced sleep log format recognised GGIR looking occurrence least two columnnames word “date” name. Wakeup times recognised words “wakeup” column name. Sleeponset, bed bed times recognised columns following character combinations name: “onset”, “inbed”, “tobed”, “lightsout”. Napping times recognised columns word “nap” name. Nonwear times recognised columns word “nonwear” name.","code":""},{"path":"/articles/GGIR.html","id":"key-arguments-related-to-time-use-analysis","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Key arguments related to time use analysis","title":"Accelerometer data processing with GGIR","text":"explanation time use analysis performed see section Waking-waking 24 hour time-use analysis. excludefirstlast.part5 - whether ignore last first day. includedaycrit.part5 - tell GGIR fraction waking hours day (value 1) acceptable. minimum_MM_length.part5 - tell GGIR minimum length (hours) MM window part 5. Configure thresholds acceleration levels (may want interpret intensity levels): threshold.lig, threshold.mod, threshold.vig. single interruption can last < 1 min Repeated interruptions allowed provided total time exceed 20% bout duration time spent interruptions included duration MVPA bout. example: 25-minute bout can two 1 minute interruption, single 2-minute interruption. , full 25 minutes count towards duration MVPA bout. timewindow specify whether days defined midnight midnight \"MM\", waking-waking-\"WW\", sleep onset sleep onset \"OO\", combination . Configure durations bouts: boutdur.mvpa, boutdur., boutdur.lig. Note can vector multiple values indicating minimum maximum duration subsequent bout types, e.g. 1-5 minutes MVPA, 5-10 minutes MVPA, longer 10 minutes MVPA.","code":""},{"path":"/articles/GGIR.html","id":"published-cut-points-and-how-to-use-them","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Published cut-points and how to use them","title":"Accelerometer data processing with GGIR","text":"section rewritten moved. Please, visit vignette Published cut-points use GGIR details cut-points available, use , additional reflections use cut-points GGIR.","code":""},{"path":"/articles/GGIR.html","id":"example-call","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Example call","title":"Accelerometer data processing with GGIR","text":"consider arguments may end call GGIR look follows. used GGIR output directory (outputdir) filled milestone data results.","code":"library(GGIR) GGIR(mode=c(1,2,3,4,5),       datadir=\"C:/mystudy/mydata\",       outputdir=\"D:/myresults\",       do.report=c(2,4,5),       #=====================       # Part 2       #=====================       data_masking_strategy = 1,       hrs.del.start = 0,          hrs.del.end = 0,       maxdur = 9,                 includedaycrit = 16,       qwindow=c(0,24),       mvpathreshold =c(100),       excludefirstlast = FALSE,       includenightcrit = 16,       #=====================       # Part 3 + 4       #=====================       def.noc.sleep = 1,       outliers.only = TRUE,       criterror = 4,       do.visual = TRUE,       #=====================       # Part 5       #=====================       threshold.lig = c(30), threshold.mod = c(100),  threshold.vig = c(400),       boutcriter = 0.8,      boutcriter.in = 0.9,     boutcriter.lig = 0.8,       boutcriter.mvpa = 0.8, boutdur.in = c(1,10,30), boutdur.lig = c(1,10),       boutdur.mvpa = c(1),       includedaycrit.part5 = 2/3,       #=====================       # Visual report       #=====================       timewindow = c(\"WW\"),       visualreport=TRUE)"},{"path":"/articles/GGIR.html","id":"configuration-file","dir":"Articles","previous_headings":"Setting up your work environment > GGIR shell function","what":"Configuration file","title":"Accelerometer data processing with GGIR","text":"Function GGIR stores explicitly entered argument values default values argument explicitly provided csv-file named config.csv stored root output folder. config.csv file accepted input GGIR argument configfile replace specification arguments, except datadir outputdir, see example . practical value eases replication analysis, instead share R script, sharing config.csv file sufficient. , config.csv file contribute reproducibility data analysis. Note 1: combining configuration file explicitly provided argument values, explicitly provided argument values overrule argument values configuration file. Note 2: config.csv file root output folder overwritten every time use GGIR. , like add annotations file, e.g. fourth column, need store somewhere outside output folder explicitly point configfile argument.","code":"library(GGIR) GGIR(datadir=\"C:/mystudy/mydata\",              outputdir=\"D:/myresults\", configfile = \"D:/myconfigfiles/config.csv\")"},{"path":[]},{"path":"/articles/GGIR.html","id":"from-the-r-console-on-your-own-desktoplaptop","dir":"Articles","previous_headings":"Time for action: How to run your analysis?","what":"From the R console on your own desktop/laptop","title":"Accelerometer data processing with GGIR","text":"Create R-script put GGIR call . Next, can source R-script source function R: source(\"pathtoscript/myshellscript.R\") use Source button RStudio use RStudio.","code":""},{"path":"/articles/GGIR.html","id":"in-a-cluster","dir":"Articles","previous_headings":"Time for action: How to run your analysis?","what":"In a cluster","title":"Accelerometer data processing with GGIR","text":"GGIR default support multi-thread processing, can turned seting argument .parallel = FALSE. still fast enough advise using GGIR computing cluster. way Sun Grid Engine cluster shown , please note commands specific computing cluster working . Also, may actually want use R package like clustermq snowfall, avoids write bash script. Please consult local cluster specialist tailor situation. case, three files SGE setting: submit.sh run-mainscript.sh myshellscript.R need update ... last line arguments used GGIR. Note f0=f0,f1=f1 essential work. values f0 f1 passed bash script. setup need call bash submit.sh command line. help computing clusters GGIR successfully run worlds largest accelerometer data sets UK Biobank German NAKO study.","code":"for i in {1..707}; do     n=1     s=$(($(($n * $[$i-1]))+1))     e=$(($i * $n))     qsub /home/nvhv/WORKING_DATA/bashscripts/run-mainscript.sh $s $e done #! /bin/bash #$ -cwd -V #$ -l h_vmem=12G /usr/bin/R --vanilla --args f0=$1 f1=$2 < /home/nvhv/WORKING_DATA/test/myshellscript.R options(echo=TRUE) args = commandArgs(TRUE) if(length(args) > 0) {   for (i in 1:length(args)) {     eval(parse(text = args[[i]]))   } } GGIR(f0=f0,f1=f1,...)"},{"path":"/articles/GGIR.html","id":"processing-time","dir":"Articles","previous_headings":"Time for action: How to run your analysis?","what":"Processing time","title":"Accelerometer data processing with GGIR","text":"time process typical seven day recording anywhere 3 10 minutes depending sample frequency recording, sensor brand, data format, exact configuration GGIR, specifications computer. observing processing times 20 minutes longer 7 day recording probably slowed factors. tips may able address : Make sure data process machine GGIR run. Processing data located somewhere else computer network can substantially slow software . Make sure machine 8GB RAM memory, using GGIR old machines 4GB known slow. However, total memory bottle neck, also consider number processes (threads) CPU can run relative amount memory. Ending 2GB per process seems good target. Avoid computational activities machine running GGIR. example, use DropBox OneDrive make sure sync running GGIR. using GGIR process large datasets probably best use machine, make sure machine configured fall asleep terminate analyses.","code":""},{"path":"/articles/GGIR.html","id":"inspecting-the-results","dir":"Articles","previous_headings":"","what":"Inspecting the results","title":"Accelerometer data processing with GGIR","text":"GGIR generates following types output. - csv-spreadsheets variables need physical activity, sleep circadian rhythm research - Pdfs page low resolution plot data per file quality indicators - R objects milestone data - Pdfs visual summary physical activity sleep patterns identified (see example )","code":""},{"path":"/articles/GGIR.html","id":"output-part-2","dir":"Articles","previous_headings":"Inspecting the results","what":"Output part 2","title":"Accelerometer data processing with GGIR","text":"Part 2 generates following output: part2_summary.csv: Person level summary (see ) part2_daysummary.csv: Day level summary (see ) QC/data_quality_report.csv: Overview calibration results whether file corrupt short processed, QC/plots check data quality 1.pdf: pdf visualisation acceleration time series 15 minute resolution invalid data segments highlighted colours (yellow: non-wear based standard deviation threshold, brown: non-wear extra filtering step (introduced 2013), purple: clipping)","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"day-level-summary","dir":"Articles","previous_headings":"Inspecting the results > Output part 2","what":"Day level summary","title":"Accelerometer data processing with GGIR","text":"non-exhaustive list, concepts explained summary.csv","code":""},{"path":"/articles/GGIR.html","id":"data_quality_report","dir":"Articles","previous_headings":"Inspecting the results > Output part 2","what":"Data_quality_report","title":"Accelerometer data processing with GGIR","text":"data_quality_report.csv stored subfolder folder results/QC.","code":""},{"path":"/articles/GGIR.html","id":"output-part-4","dir":"Articles","previous_headings":"Inspecting the results","what":"Output part 4","title":"Accelerometer data processing with GGIR","text":"Part 4 generates following output:","code":""},{"path":"/articles/GGIR.html","id":"night-level-summaries","dir":"Articles","previous_headings":"Inspecting the results > Output part 4","what":"Night level summaries","title":"Accelerometer data processing with GGIR","text":"part4_nightsummary_sleep_cleaned.csv QC/part4_nightsummary_sleep_full.csv latter ’_full’ name intended aid clarifying nights () excluded cleaned summary report. Although, nights accelerometer worn excluded . , 30 day recording accelerometer worn day 7 onward find last 22 nights either csv-report. csv. files contain variables shown .","code":""},{"path":"/articles/GGIR.html","id":"non-default-variables-in-part-4-csv-report","dir":"Articles","previous_headings":"Inspecting the results > Output part 4 > Night level summaries","what":"Non-default variables in part 4 csv report","title":"Accelerometer data processing with GGIR","text":"additional stored used sleeplog captures time bed, using guider HorAngle hip-worn accelerometer data. either applies set argument sleepwindowType “TimeInBed”.","code":""},{"path":"/articles/GGIR.html","id":"person-level-summaries","dir":"Articles","previous_headings":"Inspecting the results > Output part 4","what":"Person level summaries","title":"Accelerometer data processing with GGIR","text":"part4_summary_sleep_cleaned.csv QC/part4_summary_sleep_full.csv person level report variables derived variables night level summary. Minor extensions variable names explain variables aggregated across days. Please find extra clarification variable names meaning may obvious:","code":""},{"path":"/articles/GGIR.html","id":"visualisation_sleep-pdf","dir":"Articles","previous_headings":"Inspecting the results > Output part 4","what":"visualisation_sleep.pdf","title":"Accelerometer data processing with GGIR","text":"Visualisation support data quality checks: - visualisation_sleep.pdf (optional) input argument .visual set TRUE GGIR can show following visual comparison time window asleep (bed) according sleeplog detected sustained inactivity bouts according accelerometer data. visualisation stored results folder visualisation_sleep.pdf. Explanation image: line represents one night. Colours used distinguish definitions sustained inactivity bouts (2 definitions case) indicate existence absence overlap sleeplog. argument outliers.set FALSE visualise available nights dataset. outliers.set TRUE visualise nights difference onset waking time sleeplog sustained inactivity bouts larger value argument criterror. visualisation outliers.set TRUE critererror set 4 powerful identify entry errors sleeplog data van Hees et al PLoSONE 2015. 25 thousand nights data, visualisation allowed us quickly zoom problematic nights investigate possible mistakes GGIR mistakes data entry.","code":""},{"path":"/articles/GGIR.html","id":"output-part-5","dir":"Articles","previous_headings":"Inspecting the results","what":"Output part 5","title":"Accelerometer data processing with GGIR","text":"output part 5 dependent parameter configuration, generate many output files unique combination three thresholds provided. example, following files generated threshold configuration 30 light activity, 100 moderate 400 vigorous activity: part5_daysummary_MM_L30M100V400_T5A5.csv part5_daysummary_WW_L30M100V400_T5A5.csv part5_personsummary_MM_L30M100V400_T5A5.csv part5_personsummary_WW_L30M100V400_T5A5.csv file summary reports/Report_nameofdatafile.pdf","code":""},{"path":"/articles/GGIR.html","id":"output5","dir":"Articles","previous_headings":"Inspecting the results > Output part 5","what":"Day level summary","title":"Accelerometer data processing with GGIR","text":"Special note working compositional data analysis: duration dur_ variables _total_ name add total length waking hours day. Similarly, duration dur_ variables excluding variables _total_ name excluding variable dur_day_min, dur_spt_min, dur_day_spt_min also add length full day. Motivation default boutcriter.= 0.9: idea allow bouts 30 minutes make sense allow breaks 20 percent (6 minutes!) used stringent criteria highest category. Please note can change criteria via arguments boutcriter.mvpa, boutcriter., boutcriter.lig.","code":""},{"path":"/articles/GGIR.html","id":"person-level-summary-1","dir":"Articles","previous_headings":"Inspecting the results > Output part 5","what":"Person level summary","title":"Accelerometer data processing with GGIR","text":"variables person level summary derived day level summary, extended _pla indicate variable calculated plain average across valid days. Variables extended _wei represent weighted average across days weekend days always weighted 2/5 relative contribution week days.","code":""},{"path":"/articles/GGIR.html","id":"motivation-and-clarification","dir":"Articles","previous_headings":"","what":"Motivation and clarification","title":"Accelerometer data processing with GGIR","text":"chapter try collect motivations clarification behind GGIR may clear existing publications.","code":""},{"path":"/articles/GGIR.html","id":"reproducibilty-of-ggir-analyses","dir":"Articles","previous_headings":"Motivation and clarification","what":"Reproducibilty of GGIR analyses","title":"Accelerometer data processing with GGIR","text":"tips increase reproducibility findings: publish findings, please remember add GGIR package version number. GGIR archived CRAN available archive section package website. GGIR evolved years. get better understanding versions differ check NEWS sections package website Report configured accelerometer Report study protocol wear instructions given participants Report GGIR version Report GGIR used: Share config.csv file R script Report post-processed / cleaned GGIR output Report reported outcomes relate specific variable names GGIR","code":""},{"path":"/articles/GGIR.html","id":"auto-calibration","dir":"Articles","previous_headings":"Motivation and clarification","what":"Auto-calibration","title":"Accelerometer data processing with GGIR","text":"acceleration sensor works principle acceleration captured mechanically converted electrical signal. relationship electrical signal acceleration usually assumed linear, involving offset gain factor. shall refer establishment offset gain factor sensor calibration procedure. Accelerometers usually calibrated part manufacturing process non-movement conditions using local gravitational acceleration reference. manufacturer calibration can later evaluated holding sensor axis parallel () perpendicular direction gravity; readings axis ±1 0 g, respectively. However, procedure can cumbersome studies high throughput. Furthermore, calibration check possible data collected past corresponding accelerometer device exist anymore. Techniques proposed can check correct calibration error based collected triaxial accelerometer data participant’s daily life without additional experiments, referred autocalibration. general principle techniques recording acceleration screened nonmovement periods. Next, moving average nonmovement periods taken three orthogonal sensor axes used generate three-dimensional ellipsoid representation ideally sphere radius 1 g. , deviations radius three-dimensional ellipsoid 1 g (ideal calibration) can used derive correction factors sensor axis-specific calibration error. auto-calibration performed GGIR uses technique detailed description demonstration can found published paper. Reference: van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI, White T, Wareham NJ, Brage S. Autocalibration accelerometer data free-living physical activity assessment using local gravity temperature: evaluation four continents. J Appl Physiol (1985). 2014 Oct 1;117(7):738-44. PMID: 25103964 link Key decisions made: Whether apply auto-calibration (default recommended setting YES). can turn setting argument .call GGIR .call=FALSE. variables probably best left default setting Key output variables: Variable value cal.error.end stored data_quality_report.csv variable value calib_err summary.csv. less 0.01 g (10mg).","code":""},{"path":"/articles/GGIR.html","id":"non-wear-detection","dir":"Articles","previous_headings":"Motivation and clarification","what":"Non-wear detection","title":"Accelerometer data processing with GGIR","text":"Accelerometer non-wear time detected basis statistics derived rolling time window. step time classified non-wear following criteria met least two three accelerometer axes: standard deviation accelerations less accelerometer brand specific reference values, brands 13.0 mg (\\(1 mg = 0.00981 m·s^−2\\)) range accelerations (.e., maximum value minus minimum value) less 50 mg. size rolling time window size steps takes time defined argument windowsizes, vector length three. specifically, second value (mediumsize window, default = 15 min) third value (longsize window, default = 60 min) used. labels data depends non-wear approach taken discussed , specified argument nonwear_approach. moment two approaches detect non-wear: nonwear_approach = \"2013\" nonwear_approach = \"2023\".","code":""},{"path":"/articles/GGIR.html","id":"approaches-to-detect-non-wear-2013-and-2023-algorithms","dir":"Articles","previous_headings":"Motivation and clarification > Non-wear detection","what":"Approaches to detect non-wear: 2013 and 2023 algorithms","title":"Accelerometer data processing with GGIR","text":"nonwear_approach = “2013” 2013 approach revision approach first described 2011 PLoSONE publication. uses criteria derived longsize window centered around mediumsize window (default = 15 minutes) classify mediumsize window centre. modification algorithm 2013 relative 2011 included: longsize window changed 30 minutes 60 minutes decrease chance accidentally detecting short sedentary periods non-wear time. rolling window went non-overlapping overlapping (15 minute steps 60 minute window results longsize window overlap step 22.5 minutes) improve time resolution. nonwear_approach = “2023” 2023 version algorithm uses criteria applied longsize window assign nonwear score entire longsize window (default = 60 minutes) tested. Instead centering longsize window middle mediumsize window, 2023 method aligns longsizewindow left edge left edge mediumsize window. result, point time classified multiple times given multiple steps rolling window classification overlap . nonwear criteria met windows overlap point time, labelled nonwear.","code":""},{"path":"/articles/GGIR.html","id":"additional-non-wear","dir":"Articles","previous_headings":"Motivation and clarification > Non-wear detection","what":"Additional non-wear","title":"Accelerometer data processing with GGIR","text":"Inspection unpublished data non-wear classification algorithm described published work indicated algorithm cope well periods monitor transportation per post. , long periods non-wear briefly interrupted periods movement, normally interpreted monitor wear. Therefore, algorithm expanded additional stage plausibility “wear-periods” -non-wear periods tested. Short periods detected wear-time -longer periods detected non-wear classified non-wear time based duration proportion duration relative bordering periods detected non-wear-periods. following criteria derived visual observation various datasets using knowledge study protocols. detected wear-periods less six hours less 30% combined duration bordering non-wear periods classified non-wear. Additionally, wear-periods less three hours formed less 80% bordering non-wear periods classified non-wear. motivation selecting relatively high criteria (< 30%) combination long period (6hrs) low criteria (< 80%) combination short period (3 hrs) long period likely actually related monitor wear time. visual model created, see picture . , units time presented squares marked grey detected non-wear time. Period C detected wear-time borders non-wear periods B D. length C less six hours C divided sum B D less 0.3 first criteria met block C turned non-wear period.","code":""},{"path":"/articles/GGIR.html","id":"beginning-and-ending-of-the-recording","dir":"Articles","previous_headings":"Motivation and clarification > Non-wear detection","what":"Beginning and ending of the recording","title":"Accelerometer data processing with GGIR","text":"visual inspection >100 traces large observational study turned applying stage three iterative stages allowed improved classification periods characterised intermittent periods non-wear apparent wear. , additional rule introduced final 24 hours measurement. final 24 hours often considered period accelerometer potentially taken moved transportation, e.g. mail service. wear-periods final 24 hrs measurement shorter three hours preceded least one hour non-wear time classified non-wear. Finally, measurement starts ends period less three hours wear followed non-wear (length) period wear classified non-wear. additional criteria screening beginning end accelerometer file reflect likelihood movements involved starting accelerometer downloading data accelerometer. final check can turned argument nonWearEdgeCorrection. Reference: van Hees VT, Gorzelniak L, Dean León EC, Eder M, Pias M, Taherian S, Ekelund U, Renström F, Franks PW, Horsch , Brage S. Separating movement gravity components acceleration signal implications assessment human daily physical activity. PLoS One. 2013 Apr 23. Key decisions made: Size windows Whether utilize non-wear detection Non-wear approach (either 2013 2023) Key output variables: Raw classification Non-wear duration Non-wear duration taking account protocol","code":""},{"path":"/articles/GGIR.html","id":"clipping-score","dir":"Articles","previous_headings":"Motivation and clarification","what":"Clipping score","title":"Accelerometer data processing with GGIR","text":"GGIR also screens acceleration signal “clipping”. 50% data points mediumsize window (default = 15 minutes) close maximal dynamic range sensor corresponding time period considered potentially corrupt data, may explained sensor getting stuck extreme value. example, dynamic range 8g, accelerations 7.5g marked “clipping”. Reference: van Hees VT, Gorzelniak L, Dean León EC, Eder M, Pias M, Taherian S, Ekelund U, Renström F, Franks PW, Horsch , Brage S. Separating movement gravity components acceleration signal implications assessment human daily physical activity. PLoS One. 2013 Apr 23","code":""},{"path":"/articles/GGIR.html","id":"why-collapse-information-to-epoch-level","dir":"Articles","previous_headings":"Motivation and clarification","what":"Why collapse information to epoch level?","title":"Accelerometer data processing with GGIR","text":"Although many data points collected decide work aggregated values (e.g. 1 5 second epochs) following reasons: Accelerometers often used describe patterns metabolic energy expenditure. Metabolic energy expenditure typically defined per breath per minute (indirect calorimetry), per day (room calorimeter), per multiple days (doubly labelled water method). order validate methods reference standards need work similar time resolution. Collapsing data epoch summary measures helps standardise differences sample frequency studies. little evidence raw data accurate representation body acceleration. scientific evidence validity accelerometer data far based epoch averages. Collapsing data epoch summary measures may help average different noise levels make sensor brands comparable.","code":""},{"path":"/articles/GGIR.html","id":"why-does-the-first-epoch-not-allign-with-the-original-start-of-the-recording","dir":"Articles","previous_headings":"Motivation and clarification > Why collapse information to epoch level?","what":"Why does the first epoch not allign with the original start of the recording","title":"Accelerometer data processing with GGIR","text":"GGIR uses short (default 5 seconds) long epochs (default 15 minutes). epochs aligned hour day, . example, recording starts 9:52:00 GGIR work epochs derived 10:00:00 onward. recording starts 10:12 GGIR work epochs derived 10:15:00 onward. Motivation: allows us standardised time grid across recordings describe behaviour. allows us calculate behaviour exactly per day per specified time interval day. first 15 minute epochs start 9:52 next one start 10:07, makes impossible make statement behaviour 10:00 13:00.","code":""},{"path":"/articles/GGIR.html","id":"Sleep_analysis","dir":"Articles","previous_headings":"Motivation and clarification","what":"Sleep analysis","title":"Accelerometer data processing with GGIR","text":"GGIR sleep analysis implemented part 3 4. Sleep analysis comes two levels: identification main Sleep Period Time (SPT) window time bed window (TIB), discrimination sleep wakefulness periods. term sleep somewhat controversial context accelerometry, accelerometer capture lack movement. acknowledge challenge GGIR refers classified sleep periods sustained inactivity bouts (abbreviated SIB). Current, GGIR offers user choice identify SIB period using following algorithms: vanHees2015: Heuristic algorithm proposed 2015 link looks periods time z-angle change 5 degrees least 5 minutes. contrast conventional sleep detection algorithms Sadeh, Galland, ColeKripke rely acceleration estimate sleep. vanHees2015 algorithm default. Sadeh1994: algorithm proposed Sadeh et al. link. use GGIR implementation zero-crossing counts Sadeh algorithm, specify argument HASIB.algo = \"Sadeh1994\" argument Sadeh_axis = \"Y\" indicate algorithm use Y-axis sensor. Galland2012: count-scaled algorithm proposed Galland et al. link. use implementation Galland2012 algorithm specify argument HASIB.algo = \"Galland2012\". , set Sadeh_axis = \"Y\" specify algorithm use Y-axis. ColeKripke1992: algorithm proposed Cole et al. link, specifically GGIR uses algortihm proposed paper 10-second non-overlapping epochs counts e xpressed average per minute. skip re-scoring steps paper showed marginal added value added complexity. use GGIR implementation zero-crossing counts Sadeh algorithm, specify argument HASIB.algo = \"ColeKripke1992\" argument Sadeh_axis = \"Y\" indicate algorithm use Y-axis sensor. NotWorn: algorithm can used study protocol wear accelerometer night. GGIR look hours close zero movement treat sustained inactivity bouts. obvious facilitate meaningful sleep analysis allow GGIR run GGIR part 5 based assumption analysis helped isolate night time daytime.","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"replication-of-the-movement-counts-needed","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis > Notes on sleep classification algorithms designed for count data","what":"Replication of the movement counts needed","title":"Accelerometer data processing with GGIR","text":"implementation zero-crossing count GGIR exact copy original approach used AMA-32 Motionlogger Actigraph Ambulatory-monitoring Inc. (“AMI”) used studies Sadeh, Cole, Kripke colleagues late 1980s 1990s. complete publicly accessible description approach exists. personal correspondence AMI, learnt technique kept proprietary never shared sold actigraphy manufacturers (time correspondence October 2021). Therefore, like replicate exact zero-crossing counts calculation used Sadeh colleague’s consider using AMI’s actigraph device (trust AMI hardware changed since 1980s). However, prioritise openness methodological consistency original studies Sadeh, Cole, colleagues may want consider open source techniques library.","code":""},{"path":"/articles/GGIR.html","id":"missing-information-for-replicating-movement-counts","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis > Notes on sleep classification algorithms designed for count data","what":"Missing information for replicating movement counts","title":"Accelerometer data processing with GGIR","text":"specifically, missing information calculation includes: (1) Sadeh specified calculations done data Y-axis direction Y-axis clarified. Therefore, unclear whether Y-axis time corresponds Y-axis modern sensors, (2) Properties frequency filter missing like filter order generally unclear simulate original acceleration sensor behaviour modern sensor data, (3) Sensitivity sensor, now guessing Motionlogger sensitivity 0.01 g without direct proof. method proposed Galland colleagues 2012 designed counts captured Actical device (Mini Mitter Co, Inc Bend ). Based correspondence AMI can conclude Actical counts identical AMI’s actigraph counts. , publicly accessible complete description Actical calculation exist. Therefore, can also conclude methodological consistency guaranteed Actical counts.","code":""},{"path":"/articles/GGIR.html","id":"an-educated-guess-and-how-you-can-to-help-optimise-the-implementation","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis > Notes on sleep classification algorithms designed for count data","what":"An educated guess and how you can to help optimise the implementation","title":"Accelerometer data processing with GGIR","text":"Following challenges implementation zero-crossing count GGIR based educated guess used information find literature product documentation. evaluation zero-crossing count value range looks plausible compared value range original publications. can help optimise implementation: Given uncertainties surrounding older sleep algorithm encourage GGIR users evaluate help optimise algorithms. , following suggestions: ActiGraph users, comparing GGIR Cole-Kripke estimates ActiLife Cole Kripke estimate aware ActiLife may adopted different Cole-Kripke algorithm original publication presented four algorithms. , ActiLife may used different educated guesses Motionlogger counts calculated. Compare GGIR sleep estimate Polysomnography Motionlogger output try optimise zero crossing count parameters discussed . Input argument aid optimisation: aid research exploring count type algorithms, also implemented brondcounts proposed Brønd Brondeel available via R package activityCounts, well neishabouricounts follows algorithm implemented close-source software ActiLife ActiGraph available R package actilifecounts. DISCLAIMER: brondcounts option deprecated October2022 due issues activityCounts package relies . reactivate brondcounts issues resolved. extract metrics addition zero crossing count, specify .brondcounts = TRUE /.neishabouricounts = TRUE used GGIR part 1 uses R packages activityCounts actilifecounts background. result, sleep estimates Sadeh, Cole-Kripke Galland derived based zero crossing algorithm additionally brondcounts /actilifecounts algorithms requested user. , added parameters help modify configuration zero-crossing count calculation, see arguments: zc.lb, zc.hb, zc.sb, zc/order, zc.scale. well one parameter modify neishabouricounts calculation, see argument: actilife_LFE.","code":""},{"path":"/articles/GGIR.html","id":"guiders","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis","what":"Guiders","title":"Accelerometer data processing with GGIR","text":"SIBs (explained ) can occur anytime day. order differentiate SIBs correspond daytime rest/naps SIBs correspond main Sleep Period Time window (abbreviated SPT), guiding method referred guider used. SIBs overlap window defined guider considered sleep within SPT window. start first SIB identified sleep period end last SIB identified sleep period define beginning end SPT window. way classification relies accelerometer detecting timing sleep onset waking time, guider tells part day look, SPT window defined SIB detected guider specified window. guider reflects Time Bed interpretation Sleep Period Time, Sleep onset time Wakeup time remains unchanged. However, can also assess sleep latency sleep efficiency, included report. guiding method introduced can one following methods: Guider = sleep log: presented mentioned 2015 article.See section sleep analysis related arguments discussion fo sleep log data formats. Specify argument sleepwindowType clarify whether sleeplog capture “TimeInBed” “SPT”. set “TimeInBed”, GGIR automatically expand part 4 analyses sleep latency sleep efficiency assessment. Guider = HDCZA: presented 2018 article. HDCZA algorithm require access sleep log, designed studies sleep log available. time segment HDCZA derived default noon noon. However, HDCZA ends 11am noon applied 6pm-6pm window. Guider = L5+/-12: presented 2018 article. Twelve hour window centred around least active 5 hours day. Guider = setwindow: Window times specified user, constant specific clock times argument def.noc.sleep. Guider = HorAngle: used argument sensor.location=\"hip\", trigger identification longitudinal axis based 24-hour lagged correlation. can also force GGIR use specific axis longitudinal axis argument longitudinal_axis. Next, identifies horizontal axis -45 45 degrees considers horizontal posture. Next, used identify largest time bed period, considering horizontal time segments least 30 minutes, looking longest horizontal period day gaps less 60 minutes ignored. Therefore, partially similar HDCZA algorithm. “HorAngle” used, sleepwindowType automatically set “TimeInBed”. Guider = NotWorn: Used studies instruction wear accelerometer durating night. GGIR searches longest period zero movement. guiders “HorAngle” “sleep log” argument sleepwindowType automatically switched “SPT”, attempt made estimate sleep latency sleep efficiency. GGIR uses default sleep log, sleep log available falls back HDCZA algorithm (HorAngle sensor.location=\"hip\"). HDCZA successful GGIR falls back L5+/-12 definition, available use setwindow. user can specify priority argument def.noc.sleep. , refer guider refer one five methods.","code":""},{"path":"/articles/GGIR.html","id":"daysleepers-nights-workers","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis","what":"Daysleepers (nights workers)","title":"Accelerometer data processing with GGIR","text":"guider indicates person woke noon, sleep analysis part 4 performed window 6pm-6pm. way method sensitive people main sleep period starting noon ending noon, referred daysleeper=1 daysummary.csv file, can interpret night workers. Note L5+/-12 algorithm configured identify daysleepers, consider noon-noon time window.","code":""},{"path":"/articles/GGIR.html","id":"Cleaningcode","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis","what":"Cleaningcode","title":"Accelerometer data processing with GGIR","text":"monitor possible problems sleep assessment, variable cleaningcode recorded night. Cleaningcode per night (noon-noon 6pm-6pm described ) can one following values: 0: problem, sleep log available SPT identified; 1: sleep log available, thus HDCZA used SPT identified, 2: enough valid accelerometer data based non-wear clipping detection part summarised present night argument includenightcrit indicates minimum number hours valid data needed within 24 hours. 3: accelerometer data available, 4: nights analysed person, 5: SPT estimated based guider , either SIB found entire guider window, complicates defining start end SPT, user specified ID number recording night number data_cleaning_file tell GGIR rely guider rely accelerometer data particular night 6: sleep log available HDCZA also failed specific night use average HDCZA estimates nights recording guider night. HDCZA estimates available entire recording use L5+/-12 estimate night. last scenario seems highly unlikely recording accelerometer worn least one day.","code":""},{"path":"/articles/GGIR.html","id":"difference-between-cleaned-and-full-output","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis","what":"Difference between cleaned and full output","title":"Accelerometer data processing with GGIR","text":"information night stored results/QC folder allowing tracing data analysis night selection. cleaned results stored results folder. part 4 night excluded ‘cleaned’ results based following criteria: study proposed sleep log individuals, nights excluded sleep log used guider (.o.w. nights cleaningcode equal 0 variable sleep log used equals FALSE). study propose sleep log individuals, nights removed cleaningcode higher 1. aware using full output working wrist accelerometer data, missing entries sleep log asks Time Bed replaced HDCZA estimates SPT. Therefore, extra caution taken working full output. Notice part 4 focused sleep research, cleaned reported way . next section discuss analysis done part 5. , choice guider may considered less important, use different criteria including nights. , may see night excluded cleaned results part 4 still appears cleaned results part 5.","code":""},{"path":"/articles/GGIR.html","id":"Data_cleaning_file","dir":"Articles","previous_headings":"Motivation and clarification > Sleep analysis","what":"Data cleaning file","title":"Accelerometer data processing with GGIR","text":"package allows adjustments made data quality check. data_cleaning_file argument allows specify individuals nights part4 entirely rely guider (example decide use sleep log information). first column file header ID column relyonguider_part4 specify night. data_cleaning_file allows tell GGIR person(s) night(s) omitted part 4. night numbers excluded listed column night_part4 header.","code":""},{"path":"/articles/GGIR.html","id":"Waking-waking_or_24_hour","dir":"Articles","previous_headings":"Motivation and clarification","what":"Waking-waking or 24 hour time-use analysis","title":"Accelerometer data processing with GGIR","text":"part 5 sleep estimates part 4 used describe 24-hour time use. Part 5 allows two ways: Literally 24 hours start end calendar day (default midnight, modifiable argument dayborder) waking waking . GGIR refer former MM windows latter WW windows. onset waking times guided estimates part 4, missing part 5 attempt retrieve estimate guider method, even accelerometer worn night, sleep log missing study sleep log proposed participants, estimates sleep log HDCZA can still considered reasonable estimate SPT window context 24-hour time use analysis. WW used combination ignoring first last midnight, argument excludefirstlast, first wake-time (second recording day) needs extracted first WW day. done guider method. also means last WW window ends last morning recording. distinction made full results stored results/QC folder cleaned results stored results folder.","code":""},{"path":"/articles/GGIR.html","id":"time-series-output-files","dir":"Articles","previous_headings":"Motivation and clarification > Waking-waking or 24 hour time-use analysis","what":"Time series output files","title":"Accelerometer data processing with GGIR","text":"want inspect time series corresponding windows see argument save_ms5rawlevels, allows export time series including behavioral classes non-wear information csv files. behavioral classes included numbers, legend classes stored separate legend file meta/ms5.outraw folder named “behavioralcodes2020-04-26.csv” date correspond date analysis. Additional input arguments may interest: save_ms5raw_format character string specify data stored: either “csv” (default) “RData”. used save_ms5rawlevels=TRUE. save_ms5raw_without_invalid Boolean indicate whether remove invalid days time series output files. used save_ms5rawlevels=TRUE. time series output file comes following columns: familiarize variables can helpful plot . users also want export time serie sof multiple metric values see argument epochvalues2csv relates storage time series GGIR part 2.","code":""},{"path":"/articles/GGIR.html","id":"day-inclusion-criteria","dir":"Articles","previous_headings":"Motivation and clarification > Waking-waking or 24 hour time-use analysis","what":"Day inclusion criteria","title":"Accelerometer data processing with GGIR","text":"full part 5 output stored results/QC folder. default inclusion criteria days cleaned output part 5 (stored results folder) : MM WW defined days: valid (sensor worn) time fraction day needs fraction specified argument includedaycrit.part5 (default 2/3). MM defined days : length day needs least number hours specified minimum_MM_length.part5 (default 23). Note experiment started ended middle day default setting exclude incomplete first last days. think including days still meaningful work adjust argument minimum_MM_length.part5. Important notes: criteria set amount valid data SPT window, interested part 5 knowing borders night trust sufficiently estimated part 4. disagree please notice days included full report available results/QC folder. means argument includenightcrit used part 4 used part 5. data_cleaning_file argument discussed Data_cleaning_file also allows tell GGIR person(s) day(s) omitted part 5. day numbers excluded listed column day_part5 header.","code":""},{"path":"/articles/GGIR.html","id":"fragmentation-metrics","dir":"Articles","previous_headings":"Motivation and clarification > Waking-waking or 24 hour time-use analysis","what":"Fragmentation metrics","title":"Accelerometer data processing with GGIR","text":"setting input argument frag.metrics=\"\" GGIR part 5 perform behavioural fragmentation analysis daytime (separately) spt. combination argument part5_agg2_60seconds=TRUE aggregate time series 1 minute resolution common behavioural fragmentation literature. GGIR, fragment daytime defined sequence epochs belong one four categories: Inactivity Light Physical Activity (LIPA) Moderate Vigorous Physical Acitivty (MVPA) Physical activity (can either LIPA MVPA) categories represents combination bouted unbouted time respective categories. Inactivity physical activity add full day (outside SPT), well inactivity, LIPA MVPA. fragmentation metrics applied function g.fragmentation. fragment SPT defined sequence epochs belong one four categories: 1. Estimated sleep 2. Estimated wakefulness 3. Inactivity 4. Physical activity (can either LIPA MVPA) Note metrics fragmentation metrics TP NFrag calculated SPT fragments. Literature metrics: Coefficient Variance (CoV) calculated according Blikman et al. 2014. Transition probability (TP) Inactivity () Physical activity (IN2PA) Physical activity inactivity (PA2IN) calculated 1 divided mean fragment duration. transition probability Inactivity LIPA MVPA calculated : (Total duration followed LIPA MVPA, respectively, divided total duration ) divided average duration . Gini index calculated function Gini ineq R package, ’s argument corr set TRUE. Power law exponent metrics: Alpha, x0.5, W0.5 calculated according Chastin et al. 2010. Number fragment per minutes (NFragPM) calculated identical metric fragmentation Chastin et al. 2012, renamed specific reflection calculation. term fragmentation appears generic given fragmentation metrics inform us fragmentation. Please effectively metric transition probability, total number divided total sum duration equals 1 divided average duration. just different terminology construct. Conditions calculation value condition met: Metrics Gini CoV calculated least 10 fragments (e.g. 5 inactive 5 active). condition met metric value set missing. Metrics related power law exponent alpha also calculated least 10 fragments, additional condition standard deviation fragment duration zero. conditions met metric value set missing. metrics related binary fragmentation (mean_dur_PA mean_dur_IN), calculated least 2 fragments (1 inactive, 1 active). condition met value set zero. Metrics related TP calculated : least 1 inactivity fragment (1 LIPA 1 MVPA fragment). condition met TP metric value set zero. keep overview recording days met criteria non-zero standard deviation least ten fragments, GGIR part5 stores variable Nvaliddays_AL10F person level (=Number valid days least 10 fragments), SD_dur (=standard deviation fragment durations) day level well aggregated per person. Difference fragments blocks: Elsewhere part5 use term block. block sequence epochs belong behavioural class. may sound similar definition fragment, blocks distinguish every behavioural class, includes subcategories bouted unbouted behaviour. means variables Nblock_day_total_IN Nblock_day_total_LIG identical Nfrag_IN_day Nfrag_LIPA_day, respectively. contrast, fragments may group LIPA MVPA together refering fragmentation PA. Differences R package ActFrag: fragmentation functionality loosely inspired great work done Dr. Junrui Di colleages R package ActFrag, described Junrui Di et al. 2017. However, made couple different decisions may affect comparability: GGIR derives fragmentation metrics per day. allows us avoid issue gaps days need dealt . , allows us test behavioural differences days week. well known human behaviour can driven weekly rhythms, e.g. work days versus weekend. Estimating fragmentation per day week allows us study account possible variation. GGIR variables also report recording level aggregates daily estimates. Transition probability according Lim et al. 2011 Power law alpha exponent metrics calculated according Chastin et al. 2010 using theoretical minimum fragment duration instead observed minimum fragment duration.","code":""},{"path":"/articles/GGIR.html","id":"why-use-data-metric-enmo-as-default","dir":"Articles","previous_headings":"Motivation and clarification","what":"Why use data metric ENMO as default?","title":"Accelerometer data processing with GGIR","text":"GGIR offers range acceleration metrics choose , one metric can default. Acceleration metric ENMO (Euclidean Norm Minus One negative values rounded zero) default metric GGIR. 2013 wrote paper investigated different ways summarising raw acceleration data. short, different metrics exist little literature support superiority metric time. long different studies use different metrics findings comparable. Therefore, choice metric ENMO partially pragmatic. GGIR uses ENMO default : ENMO demonstrated value describing variance energy expenditure, correlated questionnaire data, able describe patterns physical activity ENMO easy describe mathematically improves reproducibility across studies software tools ENMO attempts quantify actual biomechanical acceleration universal units. 2013 paper showed ENMO used combination auto-calibration similar validity filter-based metrics like HFEN BFEN, conceptually similar metrics proposed later MIMSunit, MAD, AI0. Studies criticised ENMO consistently failed apply auto-calibration, attempted apply auto-calibration lab setting, ignoring fact auto-calibration designed short lasting lab settings. needs free-living data work properly. , studies often clear problematic zero imputation idle sleep mode ActiGraph devices dealt . See detailed discussion paragraph: Published cut-points use . See also blog post topic.","code":""},{"path":"/articles/GGIR.html","id":"what-does-ggir-stand-for","dir":"Articles","previous_headings":"Motivation and clarification","what":"What does GGIR stand for?","title":"Accelerometer data processing with GGIR","text":"wanted short name spend much time finding . time primarily working GENEActiv GENEA data R, ’s name GGIR born: Short, easy remember, acronym sufficiently vague tight specific functionality. However, later functionality expanded sensor brands, abbreviation lost functional meaning.","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"mxlx","dir":"Articles","previous_headings":"Motivation and clarification > Circadian Rhythm analyses","what":"MXLX","title":"Accelerometer data processing with GGIR","text":"Detection continuous least (LX) (MX) active X hours day, X defined argument winhr. GGIR calculates average acceleration, start time, argument iglevels specified also intensity gradient. argument winhr vector descriptive values LX MX derived per value winhr. Within GGIR part 2 MXLX calculated per calendar day , argument qwindow specified, per segment day. Within GGIR part 5 MXLX calculated per window, used combination GENEActiv Axivity accelerometer brand LUX estimates per LX MX included. MX metric describe confused MX metrics proposed Rowlands et al. looks accumulated active time may always continuous time. MX metrics Rowlands et discussed .","code":""},{"path":"/articles/GGIR.html","id":"cosinor-analysis-and-extended-cosinor-analysis","dir":"Articles","previous_headings":"Motivation and clarification > Circadian Rhythm analyses","what":"Cosinor analysis and Extended Cosinor analysis","title":"Accelerometer data processing with GGIR","text":"(Extended) Cosinor analysis quantifies circadian 24 hour cycle. GGIR uses R package ActCR dependency. Specify argument cosinor = TRUE perform analysis. implementation within GGIR part 2 follows: Acceleration values averaged per minute, log transformation log(acceleration converted _mg_ + 1). Invalid data points caused non-wear set missing (NA) order prevent imputation approach used elsewhere GGIR influence Cosinor analysis. imputation technique generally come assumptions circadian rhythm. GGIR looks first valid data point recording selects maximum integer number recording days following data point feeds ActCosinor ActExtendCosinor functions ActCR. time offset start following midnight used reverse offset ActCR results, ensure acrophase acrotime can interpreted relative midnight. relation Day Saving Time: Duplicated time stamps clock moves backward ignored missing time stamps clock moves forward inserted missing values. Time series corresponding fitted models stored inside part 2 milestone data facilitate visual inspection. moment used GGIR visualisation, may want look try plot .","code":""},{"path":[]},{"path":"/articles/GGIR.html","id":"iv-and-is---default","dir":"Articles","previous_headings":"Motivation and clarification > Circadian Rhythm analyses > Intradaily Variability (IV) and Interdaily Stability (IS)","what":"IV and IS - Default","title":"Accelerometer data processing with GGIR","text":"original implementation (argument IVIS.activity.metric = 1) uses continuous numeric acceleration values. However, later realised compatible original approach van Someren colleagues, uses binary distinction active inactive. Therefore, second option added (argument IVIS.activity.metric = 2), needs used combination accelerometer metric ENMO, collapses acceleration values binary score rest versus active. current default.","code":""},{"path":"/articles/GGIR.html","id":"iv-and-is---cosinor-analysis-compatible","dir":"Articles","previous_headings":"Motivation and clarification > Circadian Rhythm analyses > Intradaily Variability (IV) and Interdaily Stability (IS)","what":"IV and IS - Cosinor analysis compatible","title":"Accelerometer data processing with GGIR","text":"Disclaimer: following implemented 2022, currently undergoing critical evaluation. result, may update algorithm course 2023. sometimes used measure behavioural robustness conducting Cosinor analysis. However, work combination two outcomes seems important calculated time series. Therefore, cosinor = TRUE IV calculated twice: part default IV analysis discussed , part Cosinor analysis using log transformed time series. specifically, IV algorithm applied IVIS.activity.metric = 2 IVIS_acc_threshold = log(20 + 1) make binary distinction active inactive, IVIS_per_daypair = TRUE. setting IVIS_per_daypair specifically designed context handle potentially missing values time series used Cosinor analysis. Applying default IVIS algorithm able handle missing values result loss information non-matching epochs across entire recording excluded. Instead, IV calculated follows: Per day pair based matching valid epochs IV calculated. , log kept number valid epoch per day pair. Omit day pairs fraction valid epoch pairs 0.66 (0.66 hard-coded moment). Calculate average across days weighted fraction valid epochs per day pairs. new Cosinor-compatible IV estimates stored output variables cosinorIV cosinorIS.","code":""},{"path":"/articles/GGIR.html","id":"actigraphs-idle-sleep-mode","dir":"Articles","previous_headings":"Motivation and clarification","what":"ActiGraph’s idle sleep mode","title":"Accelerometer data processing with GGIR","text":"idle sleep mode explained manufacturer’s website. short, idle sleep mode setting can turned user. turned device fall asleep periods movement, resulting time gaps data. functionality probably introduced safe battery life minimize data size. However, also means end time gaps need accounted .","code":""},{"path":"/articles/GGIR.html","id":"time-gap-imputation","dir":"Articles","previous_headings":"Motivation and clarification > ActiGraph’s idle sleep mode","what":"Time gap imputation","title":"Accelerometer data processing with GGIR","text":"Studies done ActiGraph devices configured ‘idle sleep mode’ data exported .csv commerical ActiLife software imputed values three axes periods movement. Note imputation ActiLife software changed point time. Initially imputation zeros recent versions ActiLife imputation uses last recorded value axes. processing gt3x files time gaps GGIR takes care time gap imputation: Time gaps shorter 90 minutes imputed raw data level last known recorded value timeg gap, longer time gaps imputed epoch level. make data processing memory efficient faster. Time gaps data considered non-wear time GGIR, implies trust ActiGraph sleep mode activated device worn, although always risk sleep/sedentary misclassification.","code":""},{"path":"/articles/GGIR.html","id":"the-importance-of-reporting-idle-sleep-mode-usage","dir":"Articles","previous_headings":"Motivation and clarification > ActiGraph’s idle sleep mode","what":"The importance of reporting idle.sleep.mode usage","title":"Accelerometer data processing with GGIR","text":"Studies often forget clarify whether idle sleep mode used , accounted data processing. Especially, insertion zero strings problematic raw data accelerometers always measure gravitational component moving. directly impacts metrics rely presence gravitational component ENMO, EN, ENMOa, SVMgs, angles. , also metrics may affected sudden disappearance gravitational acceleration cause spike start end idle sleep mode period. generally speaking, advise ActiGraph users : Disable ‘idle sleep mode’ harms transparency reproducibility since mechanism exists replicate accelerometer brands, likely challenge accurate assessment sleep sedentary behaviour. data collected ‘idle sleep mode’ turned referred raw data accelerometry, data collection process involved proprietary pre-processing steps violate core principle raw data collection. Report whether ‘idle sleep mode’ used. choice consistent within study try account idle mode sleep usage statistical analyses.","code":""},{"path":"/articles/GGIR.html","id":"mx-metrics-minimum-intensity-of-most-active-x-minutes","dir":"Articles","previous_headings":"Motivation and clarification","what":"MX metrics (minimum intensity of most active X minutes)","title":"Accelerometer data processing with GGIR","text":"qlevels argument (percentile distribution short epoch metric value) can used describe accelerations participants spend “X” accumulated minutes day , described MX metrics (e.g., Rowlands et al). MX metrics confused active continuous X hours, e.g. M10, used circadian rhythm research also can derived GGIR, see argument winhr. Usage use MX metrics proposed Rowlands et al, specify durations 24h day wish filter accelerations . example, generate minimum acceleration value active 30 minutes can call qlevels = (1410/1440), filter lowest 1410 minutes day. can also used nested term generate multiple metrics, example call M60, M30 M10, can use argument: qlevels = c(c(1380/1440),c(1410/1440),c(1430/1440)). Note: qwindow less 24 h, e.g. school day (e.g. Fairclough et al 2020) denominator changed 1440 (24h) accordingly, e.g. 8 h window denominator 480 rather 1440. Output output part2 summary files refer percentile day. Thus, 24 h day, M30 appear “p 97.91666_ENMO_mg_0.24hr”. graph radar plots MX metrics first described Rowlands et al, can access github repository provides R code detailed instructions make radar plots using data.","code":""},{"path":"/articles/GGIR.html","id":"Minimum_recording_duration","dir":"Articles","previous_headings":"Motivation and clarification","what":"Minimum recording duration","title":"Accelerometer data processing with GGIR","text":"GGIR designed process multi-day recordings. minimum recording duration considered GGIR depends type analysis: Running part 1 2 File size; least 2MB, 2MB can adjusted argument minimumFileSizeMB. changed unless good reason believe smaller file size also acceptable. Recording duration: least two long epoch windows (default 60 minutes) g.readaccfile. size epoch can altered second third value vector argument windowsizes, third smaller second. example, short lasting lab-experiments may find easier set windowsizes = c(5, 600, 600) non-wear detection usually necessary lab studies. Running part 3 4 least one night data expected, night expected least timestamp midnight. midnight found sleep detection skipped. Running part 5 Ideally two valid consecutive nights waking hours .","code":""},{"path":"/articles/GGIR.html","id":"lux-sensor-data-processing","dir":"Articles","previous_headings":"Motivation and clarification","what":"LUX sensor data processing","title":"Accelerometer data processing with GGIR","text":"Although GGIR focuses accelerometer data brands come LUX data. part 1 GGIR calculates peak lux per long epoch default resolution 15 minutes, can modified argument windowsizes. Peak light offers reliable estimate light exposure per time window compared taking average. , LUX used auto-calibration. GGIR part 2 visualise LUX values qc plot. part 3 4 LUX used sleep classification relation light exposure sleep weak. part 5 calculate mean maximum peak LUX per epoch across waking hours day. , mean (peak per epoch) LUX indicate average light exposure per time segment, max peak indicate maximum light exposure per day. , calculate max mean peak LUX per active consecutive X hour day. intended offer alternative LUX exposure waking hours relies correct sleep classification. LUX exposure M10 may seen alternative unsure whether can trust sleep classification data set.","code":""},{"path":"/articles/GGIR.html","id":"other-resources","dir":"Articles","previous_headings":"","what":"Other Resources","title":"Accelerometer data processing with GGIR","text":"GGIR package manual provides documentation individual functions. general questions use GGIR join google group/mailing list. bug reports please post .","code":""},{"path":"/articles/GGIR.html","id":"CitingGGIR","dir":"Articles","previous_headings":"","what":"Citing GGIR","title":"Accelerometer data processing with GGIR","text":"correct citation research software important make research reproducible acknowledge effort goes development open-source software. , please report GGIR version used text. Additionally, please also cite: Migueles JH, Rowlands AV, et al. GGIR: Research Community–Driven Open Source R Package Generating Physical Activity Sleep Outcomes Multi-Day Raw Accelerometer Data. Journal Measurement Physical Behaviour. 2(3) 2019. doi: 10.1123/jmpb.2018-0063. work depends quantification physical activity also cite: van Hees VT, Gorzelniak L, et al. Separating Movement Gravity Components Acceleration Signal Implications Assessment Human Daily Physical Activity. PLoS ONE 8(4) 2013. link Sabia S, van Hees VT, Shipley MJ, Trenell MI, Hagger-Johnson G, Elbaz , Kivimaki M, Singh-Manoux . Association questionnaire- accelerometer-assessed physical activity: role sociodemographic factors. J Epidemiol. 2014 Mar 15;179(6):781-90. doi: 10.1093/aje/kwt330. Epub 2014 Feb 4. PMID: 24500862 link used auto-calibration functionality also cite: van Hees VT, Fang Z, et al. Auto-calibration accelerometer data free-living physical activity assessment using local gravity temperature: evaluation four continents. J Appl Physiol 2014. link used sleep detection also cite: van Hees VT, Sabia S, et al. novel, open access method assess sleep duration using wrist-worn accelerometer, PLoS ONE, 2015 link used sleep detection without relying sleep diary also cite: van Hees VT, Sabia S, et al. Estimating sleep parameters using accelerometer without sleep diary. Scientific Reports 2018. doi: 10.1038/s41598-018-31266-z. link used sleep regularity index also cite: Andrew J. K. Phillips, William M. Clerx, et al. Irregular sleep/wake patterns associated poorer academic performance delayed circadian sleep/wake timing. Scientific Reports. 2017 June 12 link.","code":""},{"path":"/articles/GGIR.html","id":"copyright-for-ggir-logo","dir":"Articles","previous_headings":"Citing GGIR","what":"Copyright for GGIR logo","title":"Accelerometer data processing with GGIR","text":"copyright GGIR logo lies Accelting (Almere, Netherlands), please contact v.vanhees@acceleting.com ask permission use logo.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"default-argument-values","dir":"Articles","previous_headings":"","what":"Arguments/parameters description","title":"GGIR configuration parameters","text":"information shown auto-generated identical information provided GGIR package pdf manual.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"mode","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"mode","title":"GGIR configuration parameters","text":"Numeric (default = 1:5). Specify five parts need run, e.g., mode = 1 makes g.part1 run; mode = 1:5 makes whole GGIR pipeline run, g.part1 g.part5.","code":""},{"path":"/articles/GGIRParameters.html","id":"datadir","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"datadir","title":"GGIR configuration parameters","text":"Character (default = c()). Directory accelerometer files stored, e.g., “C:/mydata”, list accelerometer filenames directories, e.g. c(“C:/mydata/myfile1.bin”, “C:/mydata/myfile2.bin”).","code":""},{"path":"/articles/GGIRParameters.html","id":"outputdir","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"outputdir","title":"GGIR configuration parameters","text":"Character (default = c()). Directory output needs stored. Note function attempt create folders directory uses folder keep output.","code":""},{"path":"/articles/GGIRParameters.html","id":"studyname","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"studyname","title":"GGIR configuration parameters","text":"Character (default = c()). datadir folder, study given name data directory. datadir list filenames studyname specified input argument used name study.","code":""},{"path":"/articles/GGIRParameters.html","id":"f0","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"f0","title":"GGIR configuration parameters","text":"Numeric (default = 1). File index start (default = 1). Index refers filenames sorted alphabetical order.","code":""},{"path":"/articles/GGIRParameters.html","id":"f1","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"f1","title":"GGIR configuration parameters","text":"Numeric (default = 0). File index finish (defaults number files available).","code":""},{"path":"/articles/GGIRParameters.html","id":"do-report","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"do.report","title":"GGIR configuration parameters","text":"Numeric (default = c(2, 4, 5, 6)). parts generate summary spreadsheet: 2, 4, 5, /6. Default c(2, 4, 5, 6). report generated based available milestone data. creating milestone data multiple machines advisable turn report generation generating milestone data, value = c(), merge milestone data turn report generation back setting overwrite FALSE.","code":""},{"path":"/articles/GGIRParameters.html","id":"configfile","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"configfile","title":"GGIR configuration parameters","text":"Character (default = c()). Configuration file previously generated function GGIR. See details.","code":""},{"path":"/articles/GGIRParameters.html","id":"myfun","dir":"Articles","previous_headings":"Arguments/parameters description > GGIR function input arguments","what":"myfun","title":"GGIR configuration parameters","text":"List (default = c()). External function object applied raw data. See package vignette detailed tutorial examples use function embedding: https://cran.r-project.org/package=GGIR/vignettes/ExternalFunction.pdf","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"overwrite","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"overwrite","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). want overwrite analysis milestone data exists? overwrite = FALSE, milestone data previous analysis used available visual reports created .","code":""},{"path":"/articles/GGIRParameters.html","id":"acc-metric","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"acc.metric","title":"GGIR configuration parameters","text":"Character (default = “ENMO”). one acceleration metrics want use acceleration magnitude analyses GGIR part 5 visual report? example: “ENMO”, “LFENMO”, “MAD”, “NeishabouriCount_y”, “NeishabouriCount_vm”. one acceleration metric can specified selected metric needs calculated part 1 (see g.part1) via arguments .enmo = TRUE .mad = TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"maxncores","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"maxNcores","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Maximum number cores use argument .parallel set true. GGIR default uses either maximum number available cores number files process (whichever lower), argument allows set lower maximum.","code":""},{"path":"/articles/GGIRParameters.html","id":"print-filename","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"print.filename","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). Whether print filename analysing (case .parallel = FALSE). Printing filename can useful investigate problems (e.g., verify file read).","code":""},{"path":"/articles/GGIRParameters.html","id":"do-parallel","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"do.parallel","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). Whether use multi-core processing (works least 4 CPU cores available).","code":""},{"path":"/articles/GGIRParameters.html","id":"windowsizes","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"windowsizes","title":"GGIR configuration parameters","text":"Numeric vector, three values (default = c(5, 900, 3600)). indicate lengths windows c(window1, window2, window3): window1 short epoch length seconds, default 5, time window acceleration angle metrics calculated; window2 long epoch length seconds non-wear signal clipping defined, default 900 (expected multitude 60 seconds); window3 window length data used non-wear detection default 3600 seconds. , window3 larger window2 use overlapping windows, window2 equals window3 non-wear periods assessed non-overlapping windows.","code":""},{"path":"/articles/GGIRParameters.html","id":"desiredtz","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"desiredtz","title":"GGIR configuration parameters","text":"Character (default = ““, .e., system timezone). Timezone device configured experiments took place. experiments took place different timezone, use argument timezone experiments took place argument configtz specify device configured. See also https://en.wikipedia.org/wiki/Zone.tab","code":""},{"path":"/articles/GGIRParameters.html","id":"configtz","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"configtz","title":"GGIR configuration parameters","text":"Character (default = ““, .e., system timezone). moment functional GENEActiv .bin, AX3 cwa, ActiGraph .gt3x, ad-hoc csv file format moment. Timezone accelerometer configured. use argument timezone configuration timezone recording took place different. See also https://en.wikipedia.org/wiki/Zone.tab","code":""},{"path":"/articles/GGIRParameters.html","id":"idloc","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"idloc","title":"GGIR configuration parameters","text":"Numeric (default = 1). idloc = 1 code assumes ID number stored obvious header field. Note ActiGraph data ID never stored file header. value set 2, 5, 6, 7, GGIR looks filename extracts character string preceding first occurance “_” (idloc = 2), ” ” (space, idloc = 5), “.” (dot, idloc = 6), “-” (idloc = 7), respectively. may noticed idloc 3 4 skipped, used one study 2012, actively maintained anymore, legacy code omitted.","code":""},{"path":"/articles/GGIRParameters.html","id":"dayborder","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"dayborder","title":"GGIR configuration parameters","text":"Numeric (default = 0). Hour days start end (dayborder = 4 mean 4 ).","code":""},{"path":"/articles/GGIRParameters.html","id":"part5_agg2_60seconds","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"part5_agg2_60seconds","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). Wether use aggregate epochs 60 seconds part GGIR g.part5 analysis.","code":""},{"path":"/articles/GGIRParameters.html","id":"sensor-location","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"sensor.location","title":"GGIR configuration parameters","text":"Character (default = “wrist”). indicate sensor location, default wrist. hip, HDCZA algorithm sleep detection also requires longitudinal axis sensor -45 +45 degrees.","code":""},{"path":"/articles/GGIRParameters.html","id":"expand_tail_max_hours","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"expand_tail_max_hours","title":"GGIR configuration parameters","text":"Numeric (default = NULL). parameter replaced recordingEndSleepHour.","code":""},{"path":"/articles/GGIRParameters.html","id":"recordingendsleephour","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"recordingEndSleepHour","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Time (hours) recording end (later) expand g.part1 output synthetic data trigger sleep detection last night. Using argument recordingEndSleepHour implies assumption participant fell asleep end recording recording ended recordingEndSleepHour hour last day. assumption may always hold true used caution. synthetic data metashort entails: timestamps continuing regularly, zeros acceleration metrics EN, one EN. Angle columns created way triggers sleep detection using equation: round(sin((1:length_expansion) / (900/epochsize))) * 15. keep track tail expansion g.part1 stores lenght expansion RData files, passed via g.part2, g.part3, g.part4 g.part5. g.part5 tail expansion size included additional variable csv-reports. g.part4 csv-report last nigth omitted, know sleep estimates last night trustworthy. Similarly, g.part5 output columns related sleep assessment omitted last window avoid biassing averages , synthetic data also ignored visualizations time series output avoid biased output.","code":""},{"path":"/articles/GGIRParameters.html","id":"dataformat","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"dataFormat","title":"GGIR configuration parameters","text":"Character (default = “raw”). indicate format data datadir. Current alternatives: ukbiobank_csv, actiwatch_csv, actiwatch_awd, correspond 5, 15 60 second epoch level data files provided UK Biobank csv format, Actiwatch csv format, Actiwatch awd format. Actiwatch data functionality tested example data one research group. Please let us know difficulties using functionality data.","code":""},{"path":"/articles/GGIRParameters.html","id":"maxrecordinginterval","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"maxRecordingInterval","title":"GGIR configuration parameters","text":"Numeric (default = NULL). indicate maximum gap hours repeated measurements ID recordings appended. , assumption ID can matched, make sure argument idloc set correctly. argument maxRecordingInterval set NULL (default) recordings appended. recordings overlap GGIR use data latest recording. recordings seperated timegap recordings filled data points resembale monitor worn. maximum value maxFile gap 504 (21 days). recordings accelerometer brand appended. part 2 csv report show number appended recordings, sampling rate , time overlap gap names filenames respective recording.","code":""},{"path":"/articles/GGIRParameters.html","id":"extepochdata_timeformat","dir":"Articles","previous_headings":"Arguments/parameters description > General Parameters","what":"extEpochData_timeformat","title":"GGIR configuration parameters","text":"Character (default = “%d-%m-%Y %H:%M:%S”). specify time format used external epoch level data argument dataFormat set “actiwatch_csv”, “actiwatch_awd”, “actigraph_csv”. example “%Y-%m-%d %:%M:%S %p” “2023-07-11 01:24:01 PM” “%m/%d/%Y %H:%M:%S” “2023-07-11 13:24:01”","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"chunksize","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"chunksize","title":"GGIR configuration parameters","text":"Numeric (default = 1). Value 0.2 1 specificy size chunks loaded fraction 12 hour period, e.g., 0.5 equals 6 hour chunks, 1 equals 12 hour chunks. machines less 4Gb RAM memory value 1 recommended.","code":""},{"path":"/articles/GGIRParameters.html","id":"spherecrit","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"spherecrit","title":"GGIR configuration parameters","text":"Numeric (default = 0.3). minimum required acceleration value (g) sides 0 g axis. Used judge whether sphere sufficiently populated","code":""},{"path":"/articles/GGIRParameters.html","id":"minloadcrit","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"minloadcrit","title":"GGIR configuration parameters","text":"Numeric (default = 72). minimum number hours code needs read autocalibration procedure effective (sensitive multitudes 12 hrs, values ceiled). loading hours extra data loaded calibration error reduced 0.01 g.","code":""},{"path":"/articles/GGIRParameters.html","id":"printsummary","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"printsummary","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE print summary calibration procedure console done.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-cal","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"do.cal","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). Whether apply auto-calibration g.calibrate. Recommended setting TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"backup-cal-coef","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"backup.cal.coef","title":"GGIR configuration parameters","text":"Character (default = “retrieve”). Option use backed-calibration coefficient instead deriving calibration coefficients analysing file twice. Argument backup.cal.coef two usecase. Use case 1: auto-calibration fails user option provide back-calibration coefficients via argument. value argument needs name directory csv-spreadsheet following column names subsequent values: “filename” names accelerometer files calibration coefficients need applied case auto-calibration fails; “scale.x”, “scale.y”, “scale.z” scaling coefficients; “offset.x”, “offset.y”, “offset.z” offset coefficients, ; “temperature.offset.x”, “temperature.offset.y”, “temperature.offset.z” temperature offset coefficients. can useful analysing short lasting laboratory experiments insufficient sphere data perform auto-calibration, calibration coefficients can derived alternative way. users responsibility compile csv-spreadsheet. Instead building file user can also Use case 2: user wants avoid performing auto-calibration repeatedly file. backup.cal.coef value set “retrieve” (default) GGIR look “data_quality_report.csv” file outputfolder QC, holds previously generated calibration coefficients. want happen, deleted data_quality_report.csv QC folder set value “redo”.","code":""},{"path":"/articles/GGIRParameters.html","id":"dynrange","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"dynrange","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Provide dynamic range 8 gravity.","code":""},{"path":"/articles/GGIRParameters.html","id":"minimumfilesizemb","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"minimumFileSizeMB","title":"GGIR configuration parameters","text":"Numeric (default = 2). Minimum File size MB required enter processing. argument can help avoid short uninformative files enter analyses. Given typical accelerometer collects several MBs per hour, default setting skip tiny files.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-dec","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.dec","title":"GGIR configuration parameters","text":"Character (default = “.”). Decimal used numbers, dec argument [utils]read.csv [data.table]fread.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-firstrow-acc","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.firstrow.acc","title":"GGIR configuration parameters","text":"Numeric (default = NULL). First row (number) acceleration data.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-firstrow-header","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.firstrow.header","title":"GGIR configuration parameters","text":"Numeric (default = NULL). First row (number) header. Leave blank file header.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-header-length","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.header.length","title":"GGIR configuration parameters","text":"Numeric (default = NULL). file header, specify header length (number rows).","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-col-acc","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.col.acc","title":"GGIR configuration parameters","text":"Numeric, three values (default = c(1, 2, 3)). Vector three column (numbers) acceleration signals stored.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-col-temp","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.col.temp","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Scalar column (number) temperature stored. Leave default setting temperature avaible. temperature used g.calibrate.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-col-time","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.col.time","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Scalar column (number) timestamps stored. Leave default setting timestamps stored.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-unit-acc","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.unit.acc","title":"GGIR configuration parameters","text":"Character (default = “g”). Character unit acceleration values: “g”, “mg”, “bit”.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-unit-temp","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.unit.temp","title":"GGIR configuration parameters","text":"Character (default = “C”). Character unit temperature values: (K)elvin, (C)elsius, (F)ahrenheit.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-unit-time","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.unit.time","title":"GGIR configuration parameters","text":"Character (default = “POSIX”). Character unit timestamps: “POSIX”, “UNIXsec” (seconds since origin, see argument rmc.origin), “character”, “ActivPAL” (exotic timestamp format used ActivPAL activity monitor).","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-format-time","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.format.time","title":"GGIR configuration parameters","text":"Character (default = “%Y-%m-%d %H:%M:%OS”). Character giving date-time format used [base]strptime. used rmc.unit.time: character POSIX.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-bitrate","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.bitrate","title":"GGIR configuration parameters","text":"Numeric (default = NULL). unit acceleration bit provide bit rate, e.g., 12 bit.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-dynamic_range","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.dynamic_range","title":"GGIR configuration parameters","text":"Numeric character (default = NULL). unit acceleration bit provide dynamic range deviation g zero, e.g., +/-6g mean argument needs 6. give argument character value code search file header elements name equal character value use corresponding numeric value next dynamic range.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-unsignedbit","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.unsignedbit","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). unsignedbit = TRUE means bits positive numbers. unsignedbit = FALSE bits positive negative.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-origin","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.origin","title":"GGIR configuration parameters","text":"Character (default = “1970-01-01”). Origin time unit time UNIXsec, e.g., 1970-1-1.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-desiredtz","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.desiredtz","title":"GGIR configuration parameters","text":"Character (default = NULL). Timezone experiments took place. argument scheduled deprecated now used overwrite desiredtz provided.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-configtz","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.configtz","title":"GGIR configuration parameters","text":"Character (default = NULL). Timezone device configured. argument scheduled deprecated now used overwrite configtz provided.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-sf","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.sf","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Sample rate Hertz, stored file header used instead (see argument rmc.headername.sf).","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-headername-sf","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.headername.sf","title":"GGIR configuration parameters","text":"Character (default = NULL). file header: Row name sample frequency can found.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-headername-sn","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.headername.sn","title":"GGIR configuration parameters","text":"Character (default = NULL). file header: Row name serial number can found.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-headername-recordingid","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.headername.recordingid","title":"GGIR configuration parameters","text":"Character (default = NULL). file header: Row name recording ID can found.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-header-structure","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.header.structure","title":"GGIR configuration parameters","text":"Character (default = NULL). Used split header name header value, e.g., “:” ” “.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-check4timegaps","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.check4timegaps","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). indicate whether gaps time imputed zeros. sensing equipment provides accelerometer gaps time. rest GGIR designed , setting argument TRUE gaps time filled zeros.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-noise","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.noise","title":"GGIR configuration parameters","text":"Numeric (default = 13). Noise level acceleration signal m-units, used working ad-hoc .csv data formats using read.myacc.csv. read.myacc.csv take rmc.noise argument, interacting GGIR g.part1 rmc.noise used.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-col-wear","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.col.wear","title":"GGIR configuration parameters","text":"Numeric (default = NULL). external wear detection outcome stored part data can used GGIR. argument specifies column wear detection (Boolean) stored.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-doresample","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.doresample","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). indicate whether resample data based available timestamps extracted sample rate file header.","code":""},{"path":"/articles/GGIRParameters.html","id":"interpolationtype","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"interpolationType","title":"GGIR configuration parameters","text":"Integer (default = 1). indicate type interpolation used resampling time series (mainly relevant Axivity sensors), 1=linear, 2=nearest neighbour.","code":""},{"path":"/articles/GGIRParameters.html","id":"imputetimegaps","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"imputeTimegaps","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). indicate whether timegaps larger 1 sample imputed. Currently used .gt3x data ActiGraph .csv format, timegaps can expected result Actigraph’s idle sleep.mode configuration.","code":""},{"path":"/articles/GGIRParameters.html","id":"frequency_tol","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"frequency_tol","title":"GGIR configuration parameters","text":"Number (default = 0.1) passed readAxivity GGIRread package. Represents frequency tolerance fraction 0 1. relative bias per data block larger fraction data block imputed lack movement gravitational oriationed guessed recent valid data block. applicable Axivity .cwa data.","code":""},{"path":"/articles/GGIRParameters.html","id":"rmc-scalefactor-acc","dir":"Articles","previous_headings":"Arguments/parameters description > Raw Data Parameters","what":"rmc.scalefactor.acc","title":"GGIR configuration parameters","text":"Numeric value (default 1) scale acceleration signals via multiplication. example, data provided m/s2 setting 1/9.81 derive gravitational units.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"do-anglex","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.anglex","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates angle X axis relative horizontal: = (^-1_rollmedian(x)(acc_rollmedian(y))^2 + (acc_rollmedian(z))^2) * 180/","code":""},{"path":"/articles/GGIRParameters.html","id":"do-angley","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.angley","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates angle Y axis relative horizontal: = (^-1_rollmedian(y)(acc_rollmedian(x))^2 + (acc_rollmedian(z))^2) * 180/","code":""},{"path":"/articles/GGIRParameters.html","id":"do-anglez","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.anglez","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE, calculates angle Z axis relative horizontal: = (^-1_rollmedian(z)(acc_rollmedian(x))^2 + (acc_rollmedian(y))^2) * 180/","code":""},{"path":"/articles/GGIRParameters.html","id":"do-zcx","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.zcx","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric zero-crossing count x-axis. computation specifics see source code function g.applymetrics","code":""},{"path":"/articles/GGIRParameters.html","id":"do-zcy","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.zcy","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric zero-crossing count y-axis. computation specifics see source code function g.applymetrics","code":""},{"path":"/articles/GGIRParameters.html","id":"do-zcz","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.zcz","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric zero-crossing count z-axis. computation specifics see source code function g.applymetrics","code":""},{"path":"/articles/GGIRParameters.html","id":"do-enmo","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.enmo","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE, calculates metric: = _x^2 + acc_y^2 + acc_z^2 - 1 (ENMO < 0, ENMO = 0).","code":""},{"path":"/articles/GGIRParameters.html","id":"do-lfenmo","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.lfenmo","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric ENMO low-pass filtered accelerations (computation specifics see source code function g.applymetrics). filter bound defined parameter hb.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-en","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.en","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates Euclidean Norm raw accelerations: = _x^2 + acc_y^2 + acc_z^2","code":""},{"path":"/articles/GGIRParameters.html","id":"do-mad","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.mad","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates Mean Amplitude Deviation: = 1n|r_i - |","code":""},{"path":"/articles/GGIRParameters.html","id":"do-enmoa","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.enmoa","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric: = _x^2 + acc_y^2 + acc_z^2 - 1 (ENMOa < 0, ENMOa = |ENMOa|).","code":""},{"path":"/articles/GGIRParameters.html","id":"do-roll_med_acc_x","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.roll_med_acc_x","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-roll_med_acc_y","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.roll_med_acc_y","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-roll_med_acc_z","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.roll_med_acc_z","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-dev_roll_med_acc_x","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.dev_roll_med_acc_x","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-dev_roll_med_acc_y","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.dev_roll_med_acc_y","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-dev_roll_med_acc_z","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.dev_roll_med_acc_z","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-bfen","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.bfen","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-hfen","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.hfen","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-hfenplus","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.hfenplus","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-lfen","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.lfen","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-lfx","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.lfx","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-lfy","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.lfy","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-lfz","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.lfz","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-hfx","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.hfx","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-hfy","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.hfy","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-hfz","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.hfz","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-bfx","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.bfx","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-bfy","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.bfy","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-bfz","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.bfz","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric. computation specifics see source code function g.applymetrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-brondcounts","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.brondcounts","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). OPTION DEPRECATED (October2022) DUE ISSUES ACTIVITYCOUNTS PACKAGE, ADD BACK ISSUES ACTIVITYCOUNTS PACKAGE ADDRESSED. TRUE, calculates metric via R package activityCounts. call BrondCounts large number acitivty counts physical activity sleep research field. calling brondcounts clarify counts proposed Jan Brønd implemented R Ruben Brondeel. brondcounts intended imitation counts produced one closed source ActiLife software ActiGraph.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-neishabouricounts","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"do.neishabouricounts","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates metric via R package actilifecounts, implementation algorithm used closed-source software ActiLife ActiGraph (methods published doi: 10.1038/s41598-022-16003-x). use name first author (instead ActiLifeCounts) paper call NeishabouriCount uncertainty ActiLife implement algorithm time. use Neishabouri counts physical activity intensity classification part 5 (.e., metric threshold.lig, threshold.mod, threshold.vig applied), acc.metric argument needs set one following: “NeishabouriCount_x”, “NeishabouriCount_y”, “NeishabouriCount_z”, “NeishabouriCount_vm” use counts x-, y-, z-axis vector magnitude, respectively.","code":""},{"path":"/articles/GGIRParameters.html","id":"hb","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"hb","title":"GGIR configuration parameters","text":"Numeric (default = 15). Higher boundary frequency filter (Hertz) used filter-based metrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"lb","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"lb","title":"GGIR configuration parameters","text":"Numeric (default = 0.2). Lower boundary frequency filter (Hertz) used filter-based metrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"n","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"n","title":"GGIR configuration parameters","text":"Numeric (default = n). Order frequency filter used filter-based metrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"zc-lb","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"zc.lb","title":"GGIR configuration parameters","text":"Numeric (default = 0.25). Used zero-crossing counts . Lower boundery cut-frequency filter.","code":""},{"path":"/articles/GGIRParameters.html","id":"zc-hb","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"zc.hb","title":"GGIR configuration parameters","text":"Numeric (default = 3). Used zero-crossing counts . Higher boundery cut-frequencies filter.","code":""},{"path":"/articles/GGIRParameters.html","id":"zc-sb","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"zc.sb","title":"GGIR configuration parameters","text":"Numeric (default = 0.01). Stop band used calculation zero crossing counts. Value acceleration threshold g units acceleration rounded zero.","code":""},{"path":"/articles/GGIRParameters.html","id":"zc-order","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"zc.order","title":"GGIR configuration parameters","text":"Numeric (default = 2). Used zero-crossing counts . Order frequency filter.","code":""},{"path":"/articles/GGIRParameters.html","id":"zc-scale","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"zc.scale","title":"GGIR configuration parameters","text":"Numeric (default = 1) Used zero-crossing counts . Scaling factor applied counts calculated (GGIR part 3).","code":""},{"path":"/articles/GGIRParameters.html","id":"actilife_lfe","dir":"Articles","previous_headings":"Arguments/parameters description > Metrics Parameters","what":"actilife_LFE","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, calculates NeishabouriCount metric low-frequency extension filter proposed closed source ActiLife software ActiGraph. applicable metric NeishabouriCount.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"includedaycrit","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"includedaycrit","title":"GGIR configuration parameters","text":"Numeric (default = 16). Minimum required number valid hours day specific analysis (NOTE: minimum required number hours per day summary entire measurement, every available hour used make best possible inference average metric value per average day).","code":""},{"path":"/articles/GGIRParameters.html","id":"ndayswindow","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"ndayswindow","title":"GGIR configuration parameters","text":"Numeric (default = 7). data_masking_strategy set 3 5, size window number days. data_masking_strategy 3 value can fractional, e.g. 7.5, data_masking_strategy 5 needs integer.","code":""},{"path":"/articles/GGIRParameters.html","id":"strategy","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"strategy","title":"GGIR configuration parameters","text":"Numeric (default = 1). See data_masking_strategy .","code":""},{"path":"/articles/GGIRParameters.html","id":"data_masking_strategy","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"data_masking_strategy","title":"GGIR configuration parameters","text":"Numeric (default = 1). deal knowledge study protocol. data_masking_strategy = 1 means select data based hrs.del.start hrs.del.end. data_masking_strategy = 2 makes data first midnight last midnight used. data_masking_strategy = 3 selects active X days file X specified argument ndayswindow, days series 24-h blocks starting time day (X hours begining end period can deleted arguments hrs.del.start hrs.del.end) data_masking_strategy = 4 use data first midnight. data_masking_strategy = 5 similar data_masking_strategy = 3, selects X complete calendar days X specified argument ndayswindow (X hours begining end period can deleted arguments hrs.del.start hrs.del.end).","code":""},{"path":"/articles/GGIRParameters.html","id":"maxdur","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"maxdur","title":"GGIR configuration parameters","text":"Numeric (default = 0). many DAYS start experiment experiment definitely stop? (set zero unknown).","code":""},{"path":"/articles/GGIRParameters.html","id":"hrs-del-start","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"hrs.del.start","title":"GGIR configuration parameters","text":"Numeric (default = 0). many HOURS start experiment wearing monitor start? Used GGIR g.part2 data_masking_strategy = 1.","code":""},{"path":"/articles/GGIRParameters.html","id":"hrs-del-end","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"hrs.del.end","title":"GGIR configuration parameters","text":"Numeric (default = 0). many HOURS end experiment wearing monitor definitely end? Used GGIR g.part2 data_masking_strategy = 1.","code":""},{"path":"/articles/GGIRParameters.html","id":"includedaycrit-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"includedaycrit.part5","title":"GGIR configuration parameters","text":"Numeric (default = 2/3). Inclusion criteria number valid hours, either expressed ratio 1 number hours 24 hour day.","code":""},{"path":"/articles/GGIRParameters.html","id":"excludefirstlast-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"excludefirstlast.part5","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE first last window (waking-waking midnight-midnight) ignored g.part5.","code":""},{"path":"/articles/GGIRParameters.html","id":"timesegments2zerofile","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"TimeSegments2ZeroFile","title":"GGIR configuration parameters","text":"Data frame (default = NULL). Optional data.frame specify time segments need ignored imputation, acceleration metrics imputed zeros. data.frame expected contain two columns named windowstart windowend, start- end time time segment POSIXlt class.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-imp","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"do.imp","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). Whether impute missing values (e.g., suspected monitor non-wear clippling) g.impute GGIR g.part2. Recommended setting TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"data_cleaning_file","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"data_cleaning_file","title":"GGIR configuration parameters","text":"Character (default = NULL). Optional path csv file create holds four columns: ID, day_part5, relyonguider_part4, night_part4. ID hold participant ID. Columns day_part5 night_part4 allow specify day(s) night(s) need excluded g.part5 g.part4, respectively. , done regardless whether rest GGIR thinks day(s)/night(s) valid. Column relyonguider_part4 allows specify nights g.part4 fully rely guider. See also package vignette.","code":""},{"path":"/articles/GGIRParameters.html","id":"minimum_mm_length-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"minimum_MM_length.part5","title":"GGIR configuration parameters","text":"Numeric (default = 23). Minimum length hours MM day included cleaned g.part4 results.","code":""},{"path":"/articles/GGIRParameters.html","id":"excludefirstlast","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"excludefirstlast","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE first last night measurement ignored sleep assessment g.part4.","code":""},{"path":"/articles/GGIRParameters.html","id":"includenightcrit","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"includenightcrit","title":"GGIR configuration parameters","text":"Numeric (default = 16). Minimum number valid hours per night (24 hour window noon noon), used sleep assessment g.part4.","code":""},{"path":"/articles/GGIRParameters.html","id":"excludefirst-part4","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"excludefirst.part4","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE first night measurement ignored sleep assessment g.part4.","code":""},{"path":"/articles/GGIRParameters.html","id":"excludelast-part4","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"excludelast.part4","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE last night measurement ignored sleep assessment g.part4.","code":""},{"path":"/articles/GGIRParameters.html","id":"max_calendar_days","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"max_calendar_days","title":"GGIR configuration parameters","text":"Numeric (default = 0). maximum number calendar days include (set zero unknown).","code":""},{"path":"/articles/GGIRParameters.html","id":"nonwearedgecorrection","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"nonWearEdgeCorrection","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE non-wear detection around edges recording (first last 3 hours) corrected following description vanHees2013 default since . functionality advisable working sleep clinic exercise lab data typically lasting less day.","code":""},{"path":"/articles/GGIRParameters.html","id":"nonwear_approach","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"nonwear_approach","title":"GGIR configuration parameters","text":"Character (default = “2023”). Whether use traditional version non-wear detection algorithm (nonwear_approach = “2013”) new version (nonwear_approach = “2023”). 2013 version use longsize window (windowsizes[3], one hour default) check conditions nonwear identification flag nonwear mediumsize window (windowsizes[2], 15 min default) middle. 2023 version differs flag nonwear full longsize window. 2013 method longsize window centered centre mediumsize window, 2023 method longsizewindow aligned left edge left edge mediumsize window.","code":""},{"path":"/articles/GGIRParameters.html","id":"segmentwearcrit-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"segmentWEARcrit.part5","title":"GGIR configuration parameters","text":"Numeric (default = 0.5). Fraction qwindow segment expected valid part 5, 0.3 indicates least 30 percent time valid.","code":""},{"path":"/articles/GGIRParameters.html","id":"segmentdaysptcrit-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"segmentDAYSPTcrit.part5","title":"GGIR configuration parameters","text":"Numeric vector length 2 (default = c(0.9, 0)). Inclusion criteria proportion segment classified day (awake) spt (sleep period time) considered valid. One two numbers 0, defines proportion segment classified day spt, respectively. default setting focus waking hour segments includes segments overlap least 90 percent waking hours. order shift focus SPT use c(0, 0.9) ensures segments overlap least 90 percent SPT included. Setting zero problematic allowed introduce bias behavioural estimates following reason: complete segment averaged incomplete segments (someone going bed waking middle segment) longer clear whether person less active sleeps segment. Similarly clear whether person wakefulness SPT segment woke went bed segment. Therefore, minimum value 0.5 required value closer 1 better.","code":""},{"path":"/articles/GGIRParameters.html","id":"study_dates_file","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"study_dates_file","title":"GGIR configuration parameters","text":"Character (default = c()). Full path csv file containing first last date expected wear period every study participant (dates provided per individual). Expected format activity diary : First column headers followed one row per recording. three columns: first column recording ID, needs match ID GGIR extracts accelerometer file; second column contain first date study; third column last date study. Date columns default format “23-04-2017”, date format specified argument study_dates_dateformat (). specified (default), GGIR use first last day recording beginning end study. Note dates used top data_masking_strategy selected.","code":""},{"path":"/articles/GGIRParameters.html","id":"study_dates_dateformat","dir":"Articles","previous_headings":"Arguments/parameters description > Cleaning Parameters","what":"study_dates_dateformat","title":"GGIR configuration parameters","text":"Character (default = “%d-%m-%Y”). specify date format used study_dates_file used [base]strptime.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"anglethreshold","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"anglethreshold","title":"GGIR configuration parameters","text":"Numeric (default = 5). Angle threshold (degrees) sustained inactivity periods detection. algorithm look periods time (timethreshold) angle variability lower anglethreshold. can specified multiple thresholds, implemented, e.g., anglethreshold = c(5,10).","code":""},{"path":"/articles/GGIRParameters.html","id":"timethreshold","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"timethreshold","title":"GGIR configuration parameters","text":"Numeric (default = 5). Time threshold (minutes) sustained inactivity periods detection. algorithm look periods time (timethreshold) angle variability lower anglethreshold. can specified multiple thresholds, implemented, e.g., timethreshold = c(5,10).","code":""},{"path":"/articles/GGIRParameters.html","id":"ignorenonwear","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"ignorenonwear","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE ignore detected monitor non-wear periods avoid confusion monitor non-wear time sustained inactivity.","code":""},{"path":"/articles/GGIRParameters.html","id":"constrain2range","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"constrain2range","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). Whether constrain range threshold used diary free sleep period time window detection.","code":""},{"path":"/articles/GGIRParameters.html","id":"haspt-algo","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"HASPT.algo","title":"GGIR configuration parameters","text":"Character (default = “HDCZA”). indicate algorithm used sleep period time detection. Default “HDCZA” Heuristic algorithm looking Distribution Change Z-Angle described van Hees et al. 2018. options included: “HorAngle”, based HDCZA replaces non-movement detection HDCZA algorithm looking time segments angle longitudinal sensor axis angle relative horizontal plane -45 +45 degrees.","code":""},{"path":"/articles/GGIRParameters.html","id":"hasib-algo","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"HASIB.algo","title":"GGIR configuration parameters","text":"Character (default = “vanHees2015”). indicate algorithm used define sustained inactivity bouts (.e., likely sleep). Options: “vanHees2015”, “Sadeh1994”, “Galland2012”.","code":""},{"path":"/articles/GGIRParameters.html","id":"sadeh_axis","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"Sadeh_axis","title":"GGIR configuration parameters","text":"Character (default = “Y”). indicate axis use Sadeh1994 algorithm, algortihms relied count-based Actigraphy Galland2012.","code":""},{"path":"/articles/GGIRParameters.html","id":"longitudinal_axis","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"longitudinal_axis","title":"GGIR configuration parameters","text":"Integer (default = NULL). indicate axis longitudinal axis. provided, function estimate longitudinal axis. used sensor.location = “hip” HASPT.algo = “HorAngle”.","code":""},{"path":"/articles/GGIRParameters.html","id":"haspt-ignore-invalid","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"HASPT.ignore.invalid","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). indicate whether invalid time segments ignored Sleep Period Time detection.","code":""},{"path":"/articles/GGIRParameters.html","id":"loglocation","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"loglocation","title":"GGIR configuration parameters","text":"Character (default = NULL). Path csv file sleep log information. See package vignette format file.","code":""},{"path":"/articles/GGIRParameters.html","id":"colid","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"colid","title":"GGIR configuration parameters","text":"Numeric (default = 1). Column number sleep log spreadsheet participant ID code stored.","code":""},{"path":"/articles/GGIRParameters.html","id":"coln1","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"coln1","title":"GGIR configuration parameters","text":"Numeric (default = 2). Column number sleep log spreadsheet onset first night starts.","code":""},{"path":"/articles/GGIRParameters.html","id":"nnights","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"nnights","title":"GGIR configuration parameters","text":"Numeric (default = NULL). argument deprecated.","code":""},{"path":"/articles/GGIRParameters.html","id":"relyonguider","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"relyonguider","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). TRUE, sleep onset waking time defined based timestamps derived guider. participants instructed wear accelerometer waking hours set TRUE, scenarios set FALSE.","code":""},{"path":"/articles/GGIRParameters.html","id":"def-noc-sleep","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"def.noc.sleep","title":"GGIR configuration parameters","text":"Numeric (default = 1). time window sustained inactivity assumed represent sleep, e.g., def.noc.sleep = c(21, 9). used sleep log entry available. left blank def.noc.sleep = c() 12 hour window centred least active 5 hours 24 hour period used instead. , L5 hardcoded change changing argument winhr function g.part2. def.noc.sleep filled single integer, e.g., def.noc.sleep=c(1) window detected based built algorithms. See argument HASPT.algo HASPT specifying algorithms use.","code":""},{"path":"/articles/GGIRParameters.html","id":"sleeplogsep","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"sleeplogsep","title":"GGIR configuration parameters","text":"Character (default = NULL). argument deprecated.","code":""},{"path":"/articles/GGIRParameters.html","id":"sleepwindowtype","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"sleepwindowType","title":"GGIR configuration parameters","text":"Character (default = “SPT”). indicate type information sleeplog, “SPT” sleep period time. Set “TimeInBed” sleep log recorded time bed enable calculation sleep latency sleep efficiency.","code":""},{"path":"/articles/GGIRParameters.html","id":"possible_nap_window","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"possible_nap_window","title":"GGIR configuration parameters","text":"Numeric (default = c(9, 18)). Numeric vector length two range clock hours naps assumed take place, e.g., possible_nap_window = c(9, 18). Currently used context explorative nap classification algortihm trained 3.5 year olds.","code":""},{"path":"/articles/GGIRParameters.html","id":"possible_nap_dur","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"possible_nap_dur","title":"GGIR configuration parameters","text":"Numeric (default = c(15, 240)). Numeric vector length two range duration (minutes) nap, e.g., possible_nap_dur = c(15, 240). Currently used context explorative nap classification algortihm trained 3.5 year olds.","code":""},{"path":"/articles/GGIRParameters.html","id":"nap_model","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"nap_model","title":"GGIR configuration parameters","text":"Character (default = NULL). specify classification model. Currently option “hip3yr”, corresponds model trained hip data 3-3.5 olds trained parent diary data.","code":""},{"path":"/articles/GGIRParameters.html","id":"sleepefficiency-metric","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"sleepefficiency.metric","title":"GGIR configuration parameters","text":"Numeric (default = 1). 1 (default), sleep efficiency calculated detected sleep time SPT window divided log-derived time bed. 2, sleep efficiency calculated detected sleep time SPT window divided detected duration sleep period time plus sleep latency (sleep latency refers difference time bed sleep onset). sleepefficiency.metric considered argument sleepwindowType = “TimeInBed”","code":""},{"path":"/articles/GGIRParameters.html","id":"possible_nap_edge_acc","dir":"Articles","previous_headings":"Arguments/parameters description > Sleep Parameters","what":"possible_nap_edge_acc","title":"GGIR configuration parameters","text":"Minimum acceleration SIB nap considered.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"mvpathreshold","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"mvpathreshold","title":"GGIR configuration parameters","text":"Numeric (default = 100). Acceleration threshold MVPA estimation GGIR g.part2. can single number array numbers, e.g., mvpathreshold = c(100, 120). later case code estimate MVPA seperately threshold. variable left blank, e.g., mvpathreshold = c(), MVPA estimated.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutcriter","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutcriter","title":"GGIR configuration parameters","text":"Numeric (default = 0.8). number 0 1, defines fraction bout needs mvpathreshold, used GGIR g.part2.","code":""},{"path":"/articles/GGIRParameters.html","id":"mvpadur","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"mvpadur","title":"GGIR configuration parameters","text":"Numeric (default = 10). bout duration(s) MVPA calculated. used GGIR g.part2.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutcriter-in","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutcriter.in","title":"GGIR configuration parameters","text":"Numeric (default = 0.9). number 0 1, defines fraction bout needs threshold.lig.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutcriter-lig","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutcriter.lig","title":"GGIR configuration parameters","text":"Numeric (default = 0.8). number 0 1, defines fraction bout needs threshold.lig threshold.mod.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutcriter-mvpa","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutcriter.mvpa","title":"GGIR configuration parameters","text":"Numeric (default = 0.8). number 0 1, defines fraction bout needs threshold.mod.","code":""},{"path":"/articles/GGIRParameters.html","id":"threshold-lig","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"threshold.lig","title":"GGIR configuration parameters","text":"Numeric (default = 40). g.part5: Threshold light physical activity separate inactivity light. Value can one number array multiple numbers, e.g., threshold.lig =c(30,40). multiple numbers entered analysis repeated combination threshold values. Threshold applied first metric milestone data, specified .enmo = TRUE applied ENMO.","code":""},{"path":"/articles/GGIRParameters.html","id":"threshold-mod","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"threshold.mod","title":"GGIR configuration parameters","text":"Numeric (default = 100). g.part5: Threshold moderate physical activity separate light moderate. Value can one number array multiple numbers, e.g., threshold.mod = c(100, 120). multiple numbers entered analysis repliced ombination threshold values. Threshold applied first metric milestone data, specified .enmo = TRUE applied ENMO.","code":""},{"path":"/articles/GGIRParameters.html","id":"threshold-vig","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"threshold.vig","title":"GGIR configuration parameters","text":"Numeric (default = 400). g.part5: Threshold vigorous physical activity separate moderate vigorous. Value can one number array multiple numbers, e.g., threshold.vig =c(400,500). multiple numbers entered analysis repliced combination threshold values. Threshold applied first metric milestone data, specified .enmo = TRUE applied ENMO.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutdur-mvpa","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutdur.mvpa","title":"GGIR configuration parameters","text":"Numeric (default = c(1, 5, 10)). Duration(s) MVPA bouts minutes extracted. start identification longest shortest duration. default setting, start 10 minute bouts, followed 5 minute bouts rest data, followed 1 minute bouts rest data.","code":""},{"path":"/articles/GGIRParameters.html","id":"boutdur-in","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutdur.in","title":"GGIR configuration parameters","text":"Numeric (default = c(10, 20, 30)). Duration(s) inactivty bouts minutes extracted. Inactivity bouts detected segments data labelled sleep MVPA bouts. start identification longest shortest duration. default setting, start identification 30 minute bouts, followed 20 minute bouts rest data, followed 10 minute bouts rest data. Note use term inactivity instead sedentary behaviour lowest intensity level behaviour. reason GGIR attempt classifying activity type sitting moment, feel using term sedentary behaviour fail communicate .","code":""},{"path":"/articles/GGIRParameters.html","id":"boutdur-lig","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"boutdur.lig","title":"GGIR configuration parameters","text":"Numeric (default = c(1, 5, 10)). Duration(s) light activty bouts minutes extracted. Light activity bouts detected segments data labelled sleep, MVPA, inactivity bouts. start identification longest shortest duration. default setting, start identification 10 minute bouts, followed 5 minute bouts rest data, followed 1 minute bouts rest data.","code":""},{"path":"/articles/GGIRParameters.html","id":"frag-metrics","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"frag.metrics","title":"GGIR configuration parameters","text":"Character (default = NULL). Fragmentation metric exract. Can “mean”, “TP”, “Gini”, “power”, “CoV”, “NFragPM”, metrics “”. See package vignette description fragmentation metrics.","code":""},{"path":"/articles/GGIRParameters.html","id":"part6_threshold_combi","dir":"Articles","previous_headings":"Arguments/parameters description > Physical activity Parameters","what":"part6_threshold_combi","title":"GGIR configuration parameters","text":"Character (default = “40_100_120”) indicate threshold combination derived part 5 used part 6","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"qwindow","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"qwindow","title":"GGIR configuration parameters","text":"Numeric character (default = c(0, 24)). specify windows variables calculated, e.g., acceleration distribution, number valid hours, LXMX analysis, MVPA. numeric, qwindow length two, e.g., qwindow = c(0, 24), variables calculated full 24 hours day. qwindow = c(8, 24) variables calculated window 0-8, 8-24 0-24. days recording segmented based values. want use day specific segmentation day can set qwindow full path activity diary file (character). Expected format activity diary : First column headers followed one row per recording, first column recording ID, needs match ID GGIR extracts accelerometer file. Followed date column format “23-04-2017”, date format specified argument qwindow_dateformat (). Use character combination date, Date DATE column name. followed one multiple columns start times activity types day format hours:minutes:seconds. header column used label activity type. Insert new date column continuing activity types next day. Leave missing values empty. activitylog used individuals appear activitylog still processed value qwindow = c(0, 24). Dates activiy log data can skipped, need column date followed column next date. times activity diary multiple short window size (epoch length), next epoch considered (e.g., epoch 5 seconds, 8:00:02 redefined 8:00:05 activity log). using qwindow functionality combination GGIR part 5 make sure check arguments segmentWEARcrit.part5 segmentDAYSPTcrit.part5 specfied research needs.","code":""},{"path":"/articles/GGIRParameters.html","id":"qlevels","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"qlevels","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Array percentiles value needs extracted. need expressed fraction 1, e.g., c(0.1, 0.5, 0.75). limit number percentiles. left empty percentiles extracted. Distribution derived short epoch metric data. Argument qlevels can example used MX-metrics (e.g. Rowlands et al) discussed ://cran.r-project.org/package=GGIR/vignettes/GGIR.htmlmain package vignette","code":""},{"path":"/articles/GGIRParameters.html","id":"qwindow_dateformat","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"qwindow_dateformat","title":"GGIR configuration parameters","text":"Character (default = “%d-%m-%Y”). specify date format used activity log used [base]strptime.","code":""},{"path":"/articles/GGIRParameters.html","id":"ilevels","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"ilevels","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Levels acceleration value frequency distribution m, e.g., ilevels = c(0,100,200). limit number levels. left empty intensity levels extracted. Distribution derived short epoch metric data.","code":""},{"path":"/articles/GGIRParameters.html","id":"ivis_windowsize_minutes","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"IVIS_windowsize_minutes","title":"GGIR configuration parameters","text":"Numeric (default = 60). Window size Intradaily Variability (IV) Interdaily Stability () metrics minutes, needs able add 24 hours.","code":""},{"path":"/articles/GGIRParameters.html","id":"ivis_epochsize_seconds","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"IVIS_epochsize_seconds","title":"GGIR configuration parameters","text":"Numeric (default = NULL). argument deprecated.","code":""},{"path":"/articles/GGIRParameters.html","id":"ivis-activity-metric","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"IVIS.activity.metric","title":"GGIR configuration parameters","text":"Numeric (default = 2). Metric used activity calculation. Value = 1, uses continuous scaled acceleration. Value = 2, tries collapse acceleration binary score rest versus active try similate original approach.","code":""},{"path":"/articles/GGIRParameters.html","id":"ivis_acc_threshold","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"IVIS_acc_threshold","title":"GGIR configuration parameters","text":"Numeric (default = 20). Acceleration threshold distinguish inactive active.","code":""},{"path":"/articles/GGIRParameters.html","id":"qm5l5","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"qM5L5","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Percentiles (quantiles) calculated L5 M5 window.","code":""},{"path":"/articles/GGIRParameters.html","id":"mx-ig-min-dur","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"MX.ig.min.dur","title":"GGIR configuration parameters","text":"Numeric (default = 10). Minimum MX duration needed order intensity gradient calculated.","code":""},{"path":"/articles/GGIRParameters.html","id":"m5l5res","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"M5L5res","title":"GGIR configuration parameters","text":"Numeric (default = 10). Resolution L5 M5 analysis minutes.","code":""},{"path":"/articles/GGIRParameters.html","id":"winhr","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"winhr","title":"GGIR configuration parameters","text":"Numeric (default = 5). Vector window size(s) (unit: hours) L5 M5 analysis.","code":""},{"path":"/articles/GGIRParameters.html","id":"iglevels","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"iglevels","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Levels acceleration value frequency distribution mused intensity gradient calculation (according method Rowlands 2018). default argument empty intensity gradient calculation done. user can either provide single value () make intensity gradient use bins iglevels = c(seq(0,4000,=25), 8000) user specify distribution. constriction number levels.","code":""},{"path":"/articles/GGIRParameters.html","id":"luxthresholds","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"LUXthresholds","title":"GGIR configuration parameters","text":"Numeric (default = c(0, 100, 500, 1000, 3000, 5000, 10000)). Vector numeric sequece corresponding thresholds used calculate time spent LUX ranges.","code":""},{"path":"/articles/GGIRParameters.html","id":"lux_cal_constant","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"LUX_cal_constant","title":"GGIR configuration parameters","text":"Numeric (default = NULL). LUX_cal_constant LUX_cal_exponent provided LUX values converted based formula y = constant * exp(x * exponent)","code":""},{"path":"/articles/GGIRParameters.html","id":"lux_cal_exponent","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"LUX_cal_exponent","title":"GGIR configuration parameters","text":"Numeric (default = NULL). LUX_cal_constant LUX_cal_exponent provided LUX LUX values converted based formula y = constant * exp(x * exponent)","code":""},{"path":"/articles/GGIRParameters.html","id":"lux_day_segments","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"LUX_day_segments","title":"GGIR configuration parameters","text":"Numeric (default = NULL). Vector hours day segmented LUX analysis.","code":""},{"path":"/articles/GGIRParameters.html","id":"window-summary-size","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"window.summary.size","title":"GGIR configuration parameters","text":"Numeric (default = 10). Functionality designed London Centre Longidutinal studies. Size minutes summary window","code":""},{"path":"/articles/GGIRParameters.html","id":"l5m5window","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"L5M5window","title":"GGIR configuration parameters","text":"Argument deprecated version 1.5-24. argument used define start end time, 24 hour clock hours, L5M5 needs calculated. Now done argument qwindow.","code":""},{"path":"/articles/GGIRParameters.html","id":"cosinor","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"cosinor","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). Whether apply cosinor analysis ActCR package.","code":""},{"path":"/articles/GGIRParameters.html","id":"part6cr","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"part6CR","title":"GGIR configuration parameters","text":"Boolean (default = FALSE) indicate whether circadian rhythm analysis run part 6.","code":""},{"path":"/articles/GGIRParameters.html","id":"part6hca","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"part6HCA","title":"GGIR configuration parameters","text":"Boolean (default = FALSE) indicate whether Household Co Analysis run part 6.","code":""},{"path":"/articles/GGIRParameters.html","id":"part6window","dir":"Articles","previous_headings":"Arguments/parameters description > 24/7 Parameters","what":"part6Window","title":"GGIR configuration parameters","text":"Character vector length two (default = c(“start”, “end”)) indicate start end time series used circadian rhythm analysis part 6. words, parameters used Household co-analysis. Alternative values : “Wx”, “Ox”, “Hx”, “x” number indicat xth wakeup, onset hour recording. Negative values “x” also possible count relative end recording. example, c(“W1”, “W-1”) goes first till last wakeup, c(“H5”, “H-5”) ignores first last 5 hours, c(“O2”, “W10”) goes second onset till 10th wakeup time.","code":""},{"path":[]},{"path":"/articles/GGIRParameters.html","id":"epochvalues2csv","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"epochvalues2csv","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). g.part2: TRUE epoch values exported csv file. , non-wear time imputed possible.","code":""},{"path":"/articles/GGIRParameters.html","id":"save_ms5rawlevels","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"save_ms5rawlevels","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). g.part5: Whether save time series classification (levels) csv RData files (defined save_ms5raw_format).","code":""},{"path":"/articles/GGIRParameters.html","id":"save_ms5raw_format","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"save_ms5raw_format","title":"GGIR configuration parameters","text":"Character (default = “csv”). g.part5: specify data stored: either “csv” “RData”. used save_ms5rawlevels = TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"save_ms5raw_without_invalid","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"save_ms5raw_without_invalid","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). g.part5: indicate whether remove invalid days time series output files. used save_ms5rawlevels = TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"storefolderstructure","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"storefolderstructure","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). Store folder structure accelerometer data.","code":""},{"path":"/articles/GGIRParameters.html","id":"timewindow","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"timewindow","title":"GGIR configuration parameters","text":"Character (default = c(“MM”, “WW”)). g.part5: Timewindow summary statistics derived. Value can “MM” (midnight midnight), “WW” (waking time waking time), “OO” (sleep onset sleep onset), combination .","code":""},{"path":"/articles/GGIRParameters.html","id":"viewingwindow","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"viewingwindow","title":"GGIR configuration parameters","text":"Numeric (default = 1). Centre day displayed around noon (viewingwindow = 1) around midnight (viewingwindow = 2) visual report generated visualreport = TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"dofirstpage","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"dofirstpage","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). indicate whether first page histograms summarizing whole measurement added file summary reports generated visualreport = TRUE.","code":""},{"path":"/articles/GGIRParameters.html","id":"visualreport","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"visualreport","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE, generate visual report based combined output g.part2 g.part4. Please note visual report initially developed provide something show study participants data quality checking purposes. time improved visual report also useful QC-ing data. However, scorings shown visual report created visual report may reflect scorings main GGIR analyses reported quantitative csv-reports. effort past 10 years gone making sure csv-report correct, visualreport mostly side project. unfortunate hope find funding future design new report specifically purpose QC-ing anlayses done GGIR.","code":""},{"path":"/articles/GGIRParameters.html","id":"week_weekend_aggregate-part5","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"week_weekend_aggregate.part5","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). g.part5: indicate whether week weekend-days aggregates stored. turned default generates large number extra columns output report.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-part3-pdf","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"do.part3.pdf","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). g.part3: Whether generate pdf g.part3.","code":""},{"path":"/articles/GGIRParameters.html","id":"outliers-only","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"outliers.only","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). g.part4: used .visual = TRUE. FALSE, available nights included visual representation data sleeplog. TRUE, nights difference onset waking time larger variable argument criterror included.","code":""},{"path":"/articles/GGIRParameters.html","id":"criterror","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"criterror","title":"GGIR configuration parameters","text":"Numeric (default = 3). g.part4: used .visual = TRUE outliers.= TRUE. criterror specifies number minimum number hours difference sleep log accelerometer estimate night included visualisation.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-visual","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"do.visual","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). g.part4: TRUE, function generate pdf visual representation overlap sleeplog entries accelerometer detections. can used visually verify sleeplog entries come obvious mistakes.","code":""},{"path":"/articles/GGIRParameters.html","id":"do-sibreport","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"do.sibreport","title":"GGIR configuration parameters","text":"Boolean (default = FALSE). g.part4: indicate whether generate report sustained inactivity bouts (SIB). set TRUE advanced sleep diary available part 4 part 5 use generate summary statistics overlap self-reported nonwear napping SIB. , SIB cna filter based argument possible_nap_edge_acc first value possible_nap_dur","code":""},{"path":"/articles/GGIRParameters.html","id":"do-part2-pdf","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"do.part2.pdf","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). g.part2: Whether generate pdf g.part2.","code":""},{"path":"/articles/GGIRParameters.html","id":"sep_reports","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"sep_reports","title":"GGIR configuration parameters","text":"Character (default = “,”). Value used sep argument [utils]write.csv writing csv files containing GGIR reports.","code":""},{"path":"/articles/GGIRParameters.html","id":"sep_config","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"sep_config","title":"GGIR configuration parameters","text":"Character (default = “,”). Value used sep argument [utils]write.csv writing GGIR config file.","code":""},{"path":"/articles/GGIRParameters.html","id":"visualreport_without_invalid","dir":"Articles","previous_headings":"Arguments/parameters description > Output Parameters","what":"visualreport_without_invalid","title":"GGIR configuration parameters","text":"Boolean (default = TRUE). TRUE, reports generated visualreport = TRUE show windows sufficiently valid data according includedaycrit viewingwindow = 1 includenightcrit viewingwindow = 2","code":""},{"path":"/articles/HouseHoldCoanalysis.html","id":"accelerometer-file-names","dir":"Articles","previous_headings":"","what":"Accelerometer file names","title":"Household Co-Analysis","text":"household co-analysis requires households family member can recognised. assume following logic file names: StudyNumber-HouseholdID-MemberID_anyotherinformation.bin example .bin file, applies .cwa .csv files. example files: 001-002-001_12345-2023.bin 001-002-002_23456-2023.bin 001-002-M_23456-2023.bin recognised household ID 002 member IDs 001, 002, M.","code":""},{"path":"/articles/HouseHoldCoanalysis.html","id":"configuring-ggir","dir":"Articles","previous_headings":"","what":"Configuring GGIR","title":"Household Co-Analysis","text":"following input arguments needed run Household co-analysis: Household co-analysis integrated GGIR part 6, need run GGIR part 1 6, mode = 1:6. windowsizes = c(5, 60, 3600). Setting second value 60 ensures light temperature, available, aggregated per minute. part5_agg2_60seconds = TRUE. ensures GGIR part 5 stores time series 1 minute resolution. part6HCA = TRUE tell GGIR perform Household Co-Analysis. part6_threshold_combi = \"30_100_400\" 30, 100 400 need correspond accelerometer threshold combination used part 5 want use part 6. GGIR part 5 facilitates multiple threshold combinations part 6 need select one. GGIR arguments can set according needs. example:","code":"datadir = \"C:/projects/studyZ/binfiles\" outputdir = \"C:/projects/studyZ\" library(GGIR) GGIR(mode = 1:5,       datadir = datadir,      idloc = 2,       outputdir = outputdir,      do.report = c(2, 4, 5),      do.parallel = TRUE,      overwrite = FALSE,      printsummary = TRUE,      desiredtz = \"America/Halifax\",      windowsizes = c(5, 60, 3600),      threshold.lig = 30,      threshold.mod = 100,      threshold.vig = 400,      part6_threshold_combi = \"30_100_400\",      boutcriter.in = 1, boutcriter.lig = 1,  boutcriter.mvpa = 0.9,      boutdur.in = 30,      boutdur.lig = 10,      boutdur.mvpa = 5,      part6HCA = TRUE,      save_ms5rawlevels = TRUE, # Not necessary because GGIR will set this to TRUE when part6HCA is TRUE.      save_ms5raw_without_invalid = FALSE, # <= Needed for household co-analysis      part5_agg2_60seconds = TRUE,      visualreport = FALSE)"},{"path":"/articles/HouseHoldCoanalysis.html","id":"household-co-analysis","dir":"Articles","previous_headings":"","what":"Household co-analysis","title":"Household Co-Analysis","text":"GGIR part 1, 2, 3, 4, 5 recording processed individually without considering relations recordings. Next, part 6 subdivided alligning time series produced part 1 5 per household, pairwise analysis data.","code":""},{"path":"/articles/HouseHoldCoanalysis.html","id":"align-individuals","dir":"Articles","previous_headings":"Household co-analysis","what":"Align individuals","title":"Household Co-Analysis","text":"Household members one member ignored. Next, per household per household member code loads merges time series produced GGIR part 1 part 5. Days, defined waking-waking-, removed less 20% valid data waking hours, sleep period time window, day whole. Next, time series completed indicates valid household member pairs time points. Finally, store: aligned time series per household separate csv files GGIR output directory (.../results/part6HouseholdCoAnalysis/alignedTimeseries). columns file documented . pdf file names timeseriesPlot.pdf plots aligned time series facilitate visual inspection data completeness per household.","code":""},{"path":"/articles/HouseHoldCoanalysis.html","id":"pairwise-analysis","dir":"Articles","previous_headings":"Household co-analysis","what":"Pairwise analysis","title":"Household Co-Analysis","text":"Per household identify possible member pairs loop pairs. Per member pair code identify wake-time pairs. , wake-times occur within last 15 minutes time series ignored need least recording time quantify behaviour waking . Per wake-pair assess woke first second, time difference, corresponding calendar dates waking . Next, code quantifies: Activity person first woke minute second person woke Activity second person wake woke LUX person first woke tminute second person woke LUX second person wake woke . Describe matching waking hours pairs: Correlation continuous acceleration values (ENMO metric) Derive binary class inactivity/active (ENMO metric, threshold < 50) ICC based binary scores (irr package, model=twoway, type=agreement, unit=single) Cohen’s Kappa (psych package) Similarity binary scores (calculation line Sleep Regularity Index) Describe noon-noon window stronger focus sleep: Describe binary class sleep/wakefulness (note: attempt classify daytime naps) ICC based binary scores (irr package, model=twoway, type=agreement, unit=single) Cohen’s Kappa (psych package) Similarity binary scores (calculation line Sleep Regularity Index) Describe wakefulness dynamics SPT prior wakeup: Look indices spt prior wakeup individuals SPT. Assess fraction data valid Identify wake times night wake-time: Assess whether persons woke time, person wake within 5 minutes, person wake within 5 minutes. Store output csv one row per unique household pair, columns clarify household members pair household .","code":""},{"path":[]},{"path":"/articles/HouseHoldCoanalysis.html","id":"alignedtimesieres","dir":"Articles","previous_headings":"Output variables","what":"alignedTimesieres","title":"Household Co-Analysis","text":"GGIR output folder .../results/part6HouseholdCoAnalysis/alignedTimeseries find csv files time series per household. data dictionary shows column names get household two members: X Y. columns copied time series output files, documented . Therefore, column documented .","code":""},{"path":"/articles/HouseHoldCoanalysis.html","id":"pairwise-summary-report","dir":"Articles","previous_headings":"Output variables","what":"Pairwise summary report","title":"Household Co-Analysis","text":"stored inside pairwise_summary_all_housholds.csv","code":""},{"path":"/articles/readmyacccsv.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Reading csv files with raw data in GGIR","text":"GGIR can automatically read data -frequently used accelerometer brands field: GENEActiv .bin Axivity AX3 AX6 .wav, .csv .cwa ActiGraph .csv .gt3x (.gt3x newer format generated firmware versions 2.5.0). Note Actigraph users: want work .csv exports via ActiLife note option export data timestamps. Please causes memory issues GGIR. cope absence timestamps GGIR re-caculate timestamps sample frequency start time date presented file header Movisens data stored folders Genea (accelerometer commercially available anymore, used studies 2007 2012) .bin .csv However, accelerometer manufacturers proliferating increasing number brands market. reason, GGIR includes read.myacc.csv function, able read accelerometer raw triaxial data stored csv files, independently brand. vignette provides general introduction use GGIR read accelerometer raw data stored csv files. works: Internally GGIR loads csv files accelerometer data standardises output format make data compatible GGIR functions. Data format standardisation includes unit measurement, timestamp, header format, column locations.","code":""},{"path":"/articles/readmyacccsv.html","id":"the-read-myacc-csv-function","dir":"Articles","previous_headings":"","what":"The read.myacc.csv function","title":"Reading csv files with raw data in GGIR","text":"rest GGIR functions, read.myacc.csv intended used within function GGIR. arguments read.myacc.csv can easily recognized start “rmc”. GGIR function checks whether argument rmc.firstrow.acc provided user; case, GGIR derive reading data read.myacc.csv.","code":""},{"path":"/articles/readmyacccsv.html","id":"input-arguments","dir":"Articles","previous_headings":"The read.myacc.csv function","what":"Input arguments","title":"Reading csv files with raw data in GGIR","text":"read.myacc.csv function tries read csv files wide variety formats, key arguments specify depend characteristics csv file process. Overall, argument relevant, left default setting (e.g., csv file contain temperature data, arguments related temperature settings left default values). present summary available input arguments. Please see parameters vignette elaborate description input arguments. , arguments also covered function documentation read.myacc.csv function.","code":""},{"path":"/articles/readmyacccsv.html","id":"general-arguments","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"General arguments","title":"Reading csv files with raw data in GGIR","text":"rmc.file - Filename file read working directory, full path file otherwise. rmc.nrow - Number rows read, nrow argument nrows . whole file read default (.e., rmc.nrow = Inf). rmc.skip - Number rows skip, skip argument . rmc.dec - Decimal separator used numbers, dec argument data.table::. “.” (default) usually “,”. rmc.firstrow.acc - First row (number) acceleration data. rmc.unit.acc - Character unit acceleration values: “g”, “mg”, “bit”. rmc.desiredtz - Timezone device worn. rmc.confgitz - Timezone device configured. rmc.sf - Sample rate Hertz, stored file header used instead.","code":""},{"path":"/articles/readmyacccsv.html","id":"header","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments for files containing a header","title":"Reading csv files with raw data in GGIR","text":"rmc.firstrow.header - First row (number) header. Leave blank (default) file header. rmc.header.length - file header, specify header length (numeric). rmc.headername.sf - file header, row name (character) sample frequency can found. rmc.headername.sn - file header, row name (character) serial number can found. rmc.headername.recordingid - file header, row name (character) recording ID can found. rmc.header.structure - Character used split header name header value, e.g. “:” ” “.","code":""},{"path":"/articles/readmyacccsv.html","id":"arguments-for-files-including-timestamps","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments for files including timestamps","title":"Reading csv files with raw data in GGIR","text":"rmc.col.time - Scalar column (number) timestamps stored. Leave default setting timestamps stored. rmc.unit.time - Character unit timestamps: “POSIX”, “UNIXsec” (seconds since origin, see argument rmc.origin), “character”, “ActivPAL” (exotic timestamp format used ActivPAL activity monitor). rmc.format.time - Character string giving date-time format used . used rmc.unit.time: character POSIX. rmc.origin - Origin time unit time UNIXsec, e.g. 1970-1-1.","code":""},{"path":"/articles/readmyacccsv.html","id":"arguments-for-files-with-acceleration-stored-in-bits","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments for files with acceleration stored in bits","title":"Reading csv files with raw data in GGIR","text":"rmc.bitrate - Numeric: unit acceleration bit provide bit rate, e.g. 12 bit. rmc.dynamic_range - Numeric, unit acceleration bit provide dynamic range deviation g zero, e.g. +/-6g mean argument needs 6. give argument character value code search file header elements name equal character value use corresponding numeric value next dynamic range. rmc.unsignedbit - Boolean, unsignedbit = TRUE means bits positive numbers. unsignedbit = FALSE bits positive negative.","code":""},{"path":"/articles/readmyacccsv.html","id":"arguments-for-files-including-temperature","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments for files including temperature","title":"Reading csv files with raw data in GGIR","text":"rmc.col.temp - Scalar column (number) temperature stored. Leave default setting temperature avaible. temperature used . rmc.unit.temp - Character unit temperature values: (K)elvin, (C)elsius, (F)ahrenheit.","code":""},{"path":"/articles/readmyacccsv.html","id":"arguments-for-files-including-wear-time-information","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments for files including wear time information","title":"Reading csv files with raw data in GGIR","text":"rmc.col.wear - external wear detection outcome stored part data can used GGIR. argument specifies column wear detection (Boolean) stored.","code":""},{"path":"/articles/readmyacccsv.html","id":"arguments-to-find-time-gaps-and-resampling","dir":"Articles","previous_headings":"The read.myacc.csv function > Input arguments","what":"Arguments to find time gaps and resampling","title":"Reading csv files with raw data in GGIR","text":"rmc.check4timegaps - Boolean indicate whether gaps time imputed zeros. rmc.doresample - Boolean indicate whether resample data based available timestamps extracted sample rate file header interpolationType - Integer indicate type interpolation used resampling time series (mainly relevant Axivity sensors), 1=linear, 2=nearest neighbour.","code":""},{"path":"/articles/readmyacccsv.html","id":"usage-of-the-read-myacc-csv-function","dir":"Articles","previous_headings":"","what":"Usage of the read.myacc.csv function","title":"Reading csv files with raw data in GGIR","text":"section shows example real case read.myacc.csv function can used. csv file read following structure: file contains timestamps column 1 (formatted “%d/%m/%Y %H:%M:%OS”), acceleration signals (g’s) x, y, z axis columns 2, 3, 4, respectively, temperature information Celsius column 5. Also, file header. First, test read file using read.myacc.csv function GGIR follows.","code":"library(GGIR) read.myacc.csv(rmc.file = \"C:/mystudy/mydata/datafile.csv\",                rmc.nrow = Inf,                rmc.skip = 0,                rmc.dec = \".\",                rmc.firstrow.acc = 2,                rmc.col.acc = 2:4,                rmc.col.temp = 5,                rmc.col.time=1,                rmc.unit.acc = \"g\",                rmc.unit.temp = \"C\",                rmc.unit.time = \"POSIX\",                rmc.format.time = \"%d/%m/%Y %H:%M:%OS\",                rmc.desiredtz = \"Europe/London\",                rmc.sf = 100)"},{"path":"/articles/readmyacccsv.html","id":"example-using-the-shell-function","dir":"Articles","previous_headings":"Usage of the read.myacc.csv function","what":"Example using the shell function","title":"Reading csv files with raw data in GGIR","text":"rmc.firstrow.acc argument defined within GGIR function, data read read.myacc.csv. GGIR needs user specify row starts accelerometer data within csv, argument must always explicitly specified user. Thus, call GGIR including rmc arguments look follows (note rmc.file, rmc.nrow, rmc.skip arguments used GGIR arguments already defined datadir, strategy, header arguments, respectively).","code":"library(GGIR) GGIR(              mode=c(1,2,3,4,5),              datadir=\"C:/mystudy/mydata/datafile.csv\",              outputdir=\"D:/myresults\",              do.report=c(2,4,5),              #=====================              # read.myacc.csv arguments              #=====================              rmc.nrow = Inf,               rmc.dec = \".\",              rmc.firstrow.acc = 2,               rmc.col.acc = 2:4,               rmc.col.temp = 5,               rmc.col.time=1,              rmc.unit.acc = \"g\",               rmc.unit.temp = \"C\",               rmc.unit.time = \"POSIX\",              rmc.format.time = \"%d/%m/%Y %H:%M:%OS\",              rmc.desiredtz = \"Europe/London\",              rmc.sf = 100,              rmc.noise = 0.013 )"},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Day segment analyses with GGIR","text":"specific person active morning afternoon? children active work hours leisure time? much inactivity occurs work office workers? Questions like can answered GGIR first specify parameters. main input argument specified qwindow, can used following ways: specify clock hours day based segmented day analyses take place. specify activity log (diary) used guide segmentation per individual per day recording. following sections discuss scenarios.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"clock-hour-based-segmentation","dir":"Articles","previous_headings":"","what":"Clock hour-based segmentation","title":"Day segment analyses with GGIR","text":"perform clock hour segmentation, need provide function GGIR argument qwindow assign numeric vector hours segmentation. start end day, explicitly provided vector GGIR add . Please find example values qwindow. number values used qwindow unlimited, aware analyses MX-metrics impossible small windows produce empty results. Day Saving Time (DST) taken account identifying start day, identifying day segments. words, 23 hour days processed 24 hours first midnight. ensure segment length identical across days week, needed ease comparison outcome variables across days.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"segmentation-guided-by-activity-log","dir":"Articles","previous_headings":"","what":"Segmentation guided by activity log","title":"Day segment analyses with GGIR","text":"perform activity-log based segmentation, need provide function GGIR argument qwindow assign full path activity log .csv format, e.g. qwindow=\"C:/myactivitylog.csv\". activity log expected .csv-file following structure: Rows: First row represents column headers row represents one accelerometer recording. ID-column: first column expected hold recording ID, needs match ID GGIR extracts accelerometer file. unsure format ID values, apply GGIR sample accelerometer files using default argument settings. ID column generated part 2 .csv reports show participant ID extracted GGIR. ID extracted, see documentation argument idloc, helps specify location participant file name file header. ID extraction fails accelerometer files matched corresponding activity log entries. Date-column: ID column followed date column first log day. ensure GGIR recognises date correctly, specify argument qwindow_dateformat. default format \"\\%d-\\%m-\\%Y\" 23-2-2021 indicate 23rd February 2021. date formatted 2-23-21 specify\"\\%m-\\%d-\\%y\". column name date column needs include character combination “date” “Date” “DATE”. Use date format consistently throughout activity diary. Start-times: date column followed one multiple columns start times activity types day format hours:minutes:seconds. provide dates cells. header column used label activity type. Insert new date column continuing activity types next day. Leave missing values empty. Missing values: values missing preceding succeeding time point used edges segment. example means define segment -C ID 1234, ID 6789 defined segments -B B-C, segment -C derived . Notes: - activity log collected individuals processed qwindow value c(0,24). - Dates activity log data can skipped, need column date followed column next date. - end time one activity assumed start time next activity. currently facilitate overlapping time segments.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"implementation-in-ggir","dir":"Articles","previous_headings":"","what":"Implementation in GGIR","title":"Day segment analyses with GGIR","text":"approaches implemented GGIR part 2 part 5. Therefore specific output variables calculated part 2 5 available per day, per person, per segment day based argument qwindow Note qwindow used part 5 timewindow includes \"MM\" (see specific documentation timewindow} parameters vignette) moment, specifying argument qwindow triggers calculation qwindow segments part 2 part 5, may result longer time finish analysis. interested segments either part 2 part 5, option might run GGIR parts 1:2 argument qwindow interest, set qwindow = NULL run GGIR parts 3:5 (vice versa: qwindow = NULL GGIR parts 1:2, desired qwindow segments running GGIR parts 3:5). information output variables calculated part pipeline, see main GGIR vignette.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Day segment analyses with GGIR","text":"information use GGIR function call see explanation main GGIR vignette.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"clock-hour-based-segmentation-1","dir":"Articles","previous_headings":"Examples","what":"Clock-hour based segmentation:","title":"Day segment analyses with GGIR","text":"","code":"library(\"GGIR\") GGIR(datadir = \"/your/data/directory\",              outputdir = \"/your/output/directory\",              mode = 1:5, # <= run GGIR parts 1 to 5              do.report = c(2, 5), # <= generate csv-report for GGIR part 2 and part 5              qwindow = c(0, 6, 12, 18, 24),              timewindow = \"MM\")"},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"activity-log-based-segmentation","dir":"Articles","previous_headings":"Examples","what":"Activity log based segmentation:","title":"Day segment analyses with GGIR","text":"running code GGIR creates output folder output directory specified argument outputdir. subfolder results find csv files reports generated part 2 part 5 pipeline: Part 2 part2_summary.csv recording level summary, 1 row per recording recording level aggregates day segments columns. part2_daysummary.csv day level summary, 1 row per day day segment specific outcomes columns. part2_daysummary_longformat.csv day level summary long format, row represents one segment one day one recording. part2_summary.csv part2_daysummary.csv column names tell day segment correspond . example, column names ending _18-24hr refer time segment 18:00-24:00. part2_daysummary_longformat.csv time segment clarified via columns qwindow_timestamps qwindow_name. Part 5 part 5, information segments days exported different csv reports person-level day-level summaries. files include word “Segments” filename provided long format aggregated per day per person: part5_daysummary_Segments[...].csv day level summary long format, row represents one segment one day one recording. part5_personsummary_Segments[...].csv recording level summary long format, row represents average outcome one specific segments across days segment available per participant.","code":"library(\"GGIR\") GGIR(datadir = \"/your/data/directory\",              outputdir = \"/your/output/directory\",              mode = 1:5, # <= run GGIR parts 1 to 5              do.report = c(2, 5), # <= generate csv-report for GGIR part 2 and part 5              qwindow = \"/path/to/your/activity/log.csv\",              timewindow = \"MM\")"},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"cleaning-parameters-for-day-segments-in-part-5","dir":"Articles","previous_headings":"","what":"Cleaning parameters for day segments (in part 5):","title":"Day segment analyses with GGIR","text":"part 5, analyses performed per segment day come possibility clean reports based information available segments. users can select include segments given amount wear time segment (segmentWEARcrit.part5), well given awake time sleep period time segment (segmentDAYSPTcrit.part5). arguments likely critical meaningful analysis data. presence sleep segment physical activity bias physical inactivity estimates presence physical activity segment sleep bias sleep estimates. become impossible quantify whether lack one presence behaviour drives association example health outcome.","code":""},{"path":"/articles/TutorialDaySegmentAnalyses.html","id":"analyses-performed-per-day-segment","dir":"Articles","previous_headings":"","what":"Analyses performed per day segment","title":"Day segment analyses with GGIR","text":"analyses GGIR per segment day, include: Acceleration distribution (part 2): Derived argument ilevels specified. find variable names [0,36)_ENMO_mg means time spent 0 36 mg defined acceleration metric ENMO. Number valid hours data (part 2): recognise N_valid_hours_in_window tells number valid hours per time window, N_valid_hours number valid hours per day. Non-wear time percentage (part 5): nonwear_day_perc, nonwear_spt_perc, nonwear_day_spt_perc tell proportion segment classified non-wear awake time (day) sleep period time (spt). LXMX analysis (part 2 part5): LXMX analysis, stands least active X hours segment. recognise variable names like L5hr_ENMO_mg start time least active five hours defined metric ENMO, L5_ENMO_mg average acceleration hours. Intensity gradient analysis (part 2 part 5): find variables start ig_gradient_ See description GGIR part 2 output main GGIR vignette details. Time spent Moderate Vigorous Physical Activity (MVPA) (part 2 part 5): find variables MVPA_E5S_T201_ENMO MVPA_E5S_B1M80%_T201_ENMO. See description GGIR part 2 output main GGIR vignette details. Time spent sleeping, inactivity physical activity intensities (part 5): find variables part 5 reports, bouted, unbouted, total time version variables. See description GGIR part 5 output main GGIR vignette details.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vincent T van Hees. Author, maintainer. Jairo H Migueles. Author. Severine Sabia. Contributor. Matthew R Patterson. Contributor. Zhou Fang. Contributor. Joe Heywood. Contributor. Joan Capdevila Pujol. Contributor. Lena Kushleyeva. Contributor. Mathilde Chen. Contributor. Manasa Yerramalla. Contributor. Patrick Bos. Contributor. Taren Sanders. Contributor. Medical Research Council UK. Copyright holder, funder. Accelting. Copyright holder, funder. French National Research Agency. Copyright holder, funder. Chenxuan Zhao. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Hees V, Migueles J, Fang Z, Zhao J, Heywood J, Mirkes E, Sabia S (2023). GGIR: Raw Accelerometer Data Analysis. doi:10.5281/zenodo.1051064, R package version 3.0-1, https://CRAN.R-project.org/package=GGIR. van Hees V, Fang Z, Langford J, Assah F, MohammadMirkes , da Silva , Trenell M, White T, Wareham N, Brage S (2014). “Autocalibration accelerometer data free-living physical activity assessment using local gravity temperature: evaluation four continents.” Journal Applied Physiology, 117(7), 738–744. https://doi.org/10.1152/japplphysiol.00421.2014. van Hees V, Sabia S, Anderson K, Denton S, Oliver J, Catt M, Abell J, Kivimaki M, Trenell M, Singh-Manoux (2015). “Novel, Open Access Method Assess Sleep Duration Using Wrist-Worn Accelerometer.” PLoS One, 10(11). doi:10.1371/journal.pone.0142533, https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533. van Hees V, Sabia S, Jones S, Wood , Anderson K, Kivimaki M, Frayling T, Pack , Bucan M, Trenell M, Mazzotti D, Gehrman P, Singh-Manoux , Weedon M (2018). “Estimating sleep parameters using accelerometer without sleep diary.” Scientific Reports, 8(1). doi:10.1038/s41598-018-31266-z, https://www.nature.com/articles/s41598-018-31266-z. Migueles J, Rowlands , Huber F, Sabia S, van Hees V (2019). “GGIR: Research Community-Driven Open Source R Package Generating Physical Activity Sleep Outcomes Multi-Day Raw Accelerometer Data.” Journal Measurement Physical Behavior, 2(3). doi:10.1123/jmpb.2018-0063, https://doi.org/10.1123/jmpb.2018-0063.","code":"@Manual{,   title = {{GGIR}: Raw Accelerometer Data Analysis},   author = {Vincent T {van Hees} and Jairo H Migueles and Zhou Fang and Jing Hua Zhao and Joe Heywood and Evgeny Mirkes and Severine Sabia},   year = {2023},   note = {R package version 3.0-1},   doi = {10.5281/zenodo.1051064},   url = {https://CRAN.R-project.org/package=GGIR}, } @Article{,   title = {Autocalibration of accelerometer data for free-living physical activity assessment using local gravity and temperature: an evaluation on four continents},   author = {Vincent T {van Hees} and Zhou Fang and Joss Langford and Felix Assah and A MohammadMirkes and Inacio C {da Silva} and Michael I Trenell and Tom White and Nicholas J Wareham and Soren Brage},   journal = {Journal of Applied Physiology},   volume = {117},   number = {7},   pages = {738--744},   year = {2014},   url = {https://doi.org/10.1152/japplphysiol.00421.2014}, } @Article{,   title = {A Novel, Open Access Method to Assess Sleep Duration Using a Wrist-Worn Accelerometer},   author = {Vincent T {van Hees} and Severine Sabia and Kirstie N Anderson and Sarah J Denton and James Oliver and Michael Catt and Jesica G Abell and Mika Kivimaki and Michael I Trenell and Archana Singh-Manoux},   doi = {10.1371/journal.pone.0142533},   journal = {PLoS One},   volume = {10},   number = {11},   year = {2015},   url = {https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0142533}, } @Article{,   title = {Estimating sleep parameters using an accelerometer without sleep diary},   author = {Vincent T {van Hees} and Severine Sabia and Samuel E Jones and Andrew R Wood and Kirstie N Anderson and Mika Kivimaki and Tim M Frayling and Allan I Pack and Maja Bucan and Michael I Trenell and Diego R Mazzotti and Philip R Gehrman and Archana Singh-Manoux and Michael N Weedon},   doi = {10.1038/s41598-018-31266-z},   journal = {Scientific Reports},   volume = {8},   number = {1},   year = {2018},   url = {https://www.nature.com/articles/s41598-018-31266-z}, } @Article{,   title = {GGIR: A Research Community-Driven Open Source R Package for Generating Physical Activity and Sleep Outcomes From Multi-Day Raw Accelerometer Data},   author = {Jairo H Migueles and Alex V Rowlands and Florian Huber and Severine Sabia and Vincent T {van Hees}},   doi = {10.1123/jmpb.2018-0063},   journal = {Journal for the Measurement of Physical Behavior},   volume = {2},   number = {3},   year = {2019},   url = {https://doi.org/10.1123/jmpb.2018-0063}, }"},{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting main project maintainer v.vanhees@accelting.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing guidelines","title":"Contributing guidelines","text":"welcome kind contribution software, simple comment question full fledged pull request. Please read follow Code Conduct. contribution can one following cases: question; think may found bug (including unexpected behavior); want make kind change code base (e.g. fix bug, add new feature, update documentation); want make new release code base. sections outline steps case.","code":""},{"path":"/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contributing guidelines","text":"use search functionality see someone already experienced issue; search yield relevant results, start new conversation.","code":""},{"path":"/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs","title":"Contributing guidelines","text":"use search functionality see someone already filed issue; issue search yield relevant results, make new issue, choose Bug report type. includes checklist make sure provide enough information rest community understand cause context problem.","code":""},{"path":"/CONTRIBUTING.html","id":"changes-or-additions","dir":"","previous_headings":"","what":"Changes or additions","title":"Contributing guidelines","text":"(important) announce plan rest community start working. announcement form (new) issue. Choose Feature request type, includes checklist things consider get discussion going; (important) wait kind consensus reached idea good idea; needed, fork repository Github profile create feature branch latest master commit. working feature branch, make sure stay date master branch pulling changes, possibly ‘upstream’ repository (follow instructions ); make sure existing tests still work running test suite RStudio; add tests (necessary); update expand documentation, see package documentation guidelines; make sure release notes inst/NEWS.Rd updated; add name contributors lists DESCRIPTION file; push feature branch (fork ) GGIR repository GitHub; create pull request, e.g. following instructions . pull request template includes checklist items. case feel like ’ve made valuable contribution, don’t know write run tests , generate documentation: don’t let discourage making pull request; can help ! Just go ahead submit pull request, keep mind might asked append additional commits pull request.","code":""},{"path":"/CONTRIBUTING.html","id":"coding-style","dir":"","previous_headings":"Changes or additions","what":"Coding style","title":"Contributing guidelines","text":"loosely follow tidyverse style guide, enforce every rule strictly. instance, prefer = instead <- default assignment operator. doubt style use, don’t hesitate get touch. general guidelines try adhere : Use standard R much possible, keep dependencies minimum. Keep loops minimum. Don’t make lines long. first time contributor, don’t worry coding style much. help get things shape.","code":""},{"path":"/CONTRIBUTING.html","id":"package-documentation","dir":"","previous_headings":"Changes or additions","what":"Package documentation","title":"Contributing guidelines","text":"currently three sources documenting package: reference manual, including package basic information functions documentation files. package vignettes. github.io website (built pkgdown package).","code":""},{"path":"/CONTRIBUTING.html","id":"reference-manual","dir":"","previous_headings":"Changes or additions > Package documentation","what":"Reference manual","title":"Contributing guidelines","text":"reference manual gets information .Rd documents within man folder package repository. Therefore, updating information files automatically update reference manual. Note GGIR functions intended direct interaction user, , documentation arguments centralized details section man/GGIR.Rd. example want add extra parameter params_247 documented . , forget include new argument functions  .","code":""},{"path":"/CONTRIBUTING.html","id":"package-vignettes","dir":"","previous_headings":"Changes or additions > Package documentation","what":"Package vignettes","title":"Contributing guidelines","text":"folder vignettes GGIR repository contains .Rmd files. .Rmd files start word ‘chapter’ used traditional package vignettes hosted CRAN. Use files edit existing vignette, use structure vignettes build new one. .Rmd files name starts word ‘chapter’ ignored. chapter-vignettes used github.io website (see next section). create new vignette CRAN create new package vignette CRAN, please use usethis::use_vignette() make sure name vignette file start “chapter”. example, want create new vignette sleep CRAN, may following: create new “sleep.Rmd” file within vignettes folder GGIR repository. can edit file build vignette. remove vignette CRAN two ways remove vignette CRAN: Removing Rmd file corresponding vignette vignettes folder, note file information lost. Adding path vignette .Rbuildignore file available GGIR repository. example, remove GGIRParameters vignette CRAN, can add:","code":"usethis::use_vignette(name = \"sleep\",                        title = \"How to analyse your sleep data in GGIR\") ^vignettes/GGIRParameters.Rmd"},{"path":"/CONTRIBUTING.html","id":"githubio-website","dir":"","previous_headings":"Changes or additions > Package documentation","what":"github.io website","title":"Contributing guidelines","text":"updating adding information github.io website, need use pkgdown configuration file can found repositories root directory, well chapter vignettes discussed . edit information existing chapter Open vignette corresponding chapter wish edit (see _pkgdown.yml) file chapter vignette path (href). Make changes vignette. Run pkgdown::build_site() function. add new chapter Create Rmd file vignette via usethis::use_vignette() make sure name vignette starts “chapter”, example: Open _pkgdown.yml file fill name reference new chapter menu. Make sure follow coding structure rest chapters. Run pkgdown::build_site() function. remove chapter Remove lines corresponding chapter _pkgdown.yml file line 42 onwards. Optionally may remove Rmd file corresponding chapter, step 1, chapter appear github.io website. Run pkgdown::build_site() function. edit name chapter Chapter names defined twice, _pkgdown.yml file vignette file . need make sure titles match first used drop-list github.io website specific page chapter.","code":"usethis::use_vignette(name = \"chapterSleep\",                        title = \"10. How to analyse your sleep data in GGIR\")"},{"path":"/CONTRIBUTING.html","id":"adding-the-changes-to-the-master-branch","dir":"","previous_headings":"Changes or additions > Package documentation","what":"Adding the changes to the master branch","title":"Contributing guidelines","text":"last step committing pushing changes github making pull request contribution package. Note , running pkgdown::build_site() function edit files within docs folder, probably add new files. applies editing information github.io website. important changes files docs folder also part pull requests, otherwise website updated.","code":""},{"path":"/CONTRIBUTING.html","id":"new-release","dir":"","previous_headings":"","what":"New release","title":"Contributing guidelines","text":"GGIR follows release cycle process described document.","code":""},{"path":"/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started:","title":"GGIR R Package","text":"package vignette short tutorial video provide introduction GGIR, including: can installed, Key software features, get help.","code":""},{"path":"/index.html","id":"contribution-guidelines","dir":"","previous_headings":"","what":"Contribution guidelines:","title":"GGIR R Package","text":"always welcome contributions package. want contribute development GGIR, look contribution guidelines.","code":""},{"path":"/index.html","id":"images-usaged","dir":"","previous_headings":"Contribution guidelines:","what":"Images usaged","title":"GGIR R Package","text":"copyright GGIR logo contained file vignettes/GGIR-MASTERLOGO-RGB.png lies Accelting (Almere, Netherlands), please contact v.vanhees@accelting.com ask permission use logo. images repository released Creative Commons Attribution 4.0 International (CC 4.0) license.","code":""},{"path":"/reference/appendRecords.html","id":null,"dir":"Reference","previous_headings":"","what":"Append GGIR milestone data from neighbouring or overlapping recordings — appendRecords","title":"Append GGIR milestone data from neighbouring or overlapping recordings — appendRecords","text":"Append GGIR part 1 milestone data format neighbouring overlapping recording.   recordings overlap use data newest recordings. time gap larger   2 days recordings appended. intended direct use user.","code":""},{"path":"/reference/appendRecords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append GGIR milestone data from neighbouring or overlapping recordings — appendRecords","text":"","code":"appendRecords(metadatadir, desiredtz = \"\", idloc = 1, maxRecordingInterval = NULL)"},{"path":"/reference/appendRecords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append GGIR milestone data from neighbouring or overlapping recordings — appendRecords","text":"metadatadir See g.part2 desiredtz See GGIR idloc See GGIR maxRecordingInterval See GGIR","code":""},{"path":"/reference/appendRecords.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Append GGIR milestone data from neighbouring or overlapping recordings — appendRecords","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/applyCosinorAnalyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Cosinor Analyses to time series — applyCosinorAnalyses","title":"Apply Cosinor Analyses to time series — applyCosinorAnalyses","text":"Wrapper function around cosinorAnalyses first prepares time series   applying cosinorAnlayses","code":""},{"path":"/reference/applyCosinorAnalyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Cosinor Analyses to time series — applyCosinorAnalyses","text":"","code":"applyCosinorAnalyses(ts, qcheck, midnightsi, epochsizes)"},{"path":"/reference/applyCosinorAnalyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Cosinor Analyses to time series — applyCosinorAnalyses","text":"ts Data.frame timestamps acceleration metric. qcheck Vector equal length number rows ts value 1 invalid     timestamps, 0 otherwise. midnightsi Indices midnights time series epochsizes Epoch size ts qcheck respectively","code":""},{"path":"/reference/applyCosinorAnalyses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply Cosinor Analyses to time series — applyCosinorAnalyses","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/applyExtFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply external function to acceleration data. — applyExtFunction","title":"Apply external function to acceleration data. — applyExtFunction","text":"Applies external function raw acceleration data within GGIR.   makes easier new algorithms developed pilotted   accelerometer data taking advantage existing comprehensive GGIR   data management analysis infrastructure.   function direct interaction user, please supply object    myfun GGIR g.part1. Object myfun   list detailed .","code":""},{"path":"/reference/applyExtFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply external function to acceleration data. — applyExtFunction","text":"","code":"applyExtFunction(data, myfun, sf, ws3, interpolationType=1)"},{"path":"/reference/applyExtFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply external function to acceleration data. — applyExtFunction","text":"data Data data.frame present internally g.getmeta. least     four columns first timestamp followed x, y,     z acceleration. myfun See details, short: myfun list object holds external function     applied data various parameters aid process. sf Sample frequency (Hertz) data object ws3 Short epoch size (first value windowsizes g.getmeta). interpolationType Integer indicate type interpolation used resampling time series (mainly relevant Axivity sensors), 1=linear, 2=nearest neighbour.","code":""},{"path":"/reference/applyExtFunction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply external function to acceleration data. — applyExtFunction","text":"output external algorithm aggregated repeated fit   short epoch length GGIR. Therefore, short epoch length GGIR   multitude resolution external function output,   visa versa.","code":""},{"path":"/reference/applyExtFunction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply external function to acceleration data. — applyExtFunction","text":"See package vignette detailed tutorial examples     use function embedding:     https://cran.r-project.org/web/package=GGIR/vignettes/applyExtFunction.pdf     Function applyExtFunction     typically used GGIR user directly.","code":""},{"path":"/reference/applyExtFunction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply external function to acceleration data. — applyExtFunction","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"Calculates Sleep Regularity Index per day pair proposed Phillips    colleagues 2017 expanded day-pair level estimates.","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"","code":"CalcSleepRegularityIndex(data = c(), epochsize = c(), desiredtz= c())"},{"path":"/reference/CalcSleepRegularityIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"data Data.frame produced function g.sib.det. epochsize Numeric value epoch size seconds. desiredtz Character timezone database name, see also g.getmeta","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"Data.frame columns: day (day number); Sleep Regularity Index, definition must lie    range -100 (reversed regularity), 0 (random pattern), 100 (perfect regularity);   weekday (e.g. Wednesday); frac_valid, number 0 1 indicating fraction 24 hour   period valid data available current next day, ; date.","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"Calculates Sleep Regularity Index per day pair. Absense missing data used    criteria calculation. Instead code asses fraction time   matching valid data points found days. Later g.part4 fraction used   include exclude days based excludenightcrit criteria also uses   sleep variables. g.report.part4 day-level SRI values stored, also   aggregated across recording days, weekend days, weekend days, respectively.    Therefore, function broader functionality algorithm proposed Phillips    colleagues 2017.","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/CalcSleepRegularityIndex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Sleep Regularity Index — CalcSleepRegularityIndex","text":"Andrew J. K. Phillips, William M. Clerx, et al. Irregular sleep/wake patterns    associated poorer academic performance delayed circadian    sleep/wake timing. Scientific Reports. 2017 June 12","code":""},{"path":"/reference/check_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to revise format of user-provided logs — check_log","title":"Function to revise format of user-provided logs — check_log","text":"Function revise format missing values dates user-provided","code":""},{"path":"/reference/check_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to revise format of user-provided logs — check_log","text":"","code":"check_log(log, dateformat, colid = 1, datecols = c(),              logPath, logtype)"},{"path":"/reference/check_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to revise format of user-provided logs — check_log","text":"log Data frame log read data.table::fread. dateformat Character specifying expected date format used log. colid Numeric column containing file ID. datecols Numeric column/s containing dates. logPath Character containing full path activity log checked. logtype Character accepts \"activity log\" \"study dates log\" moment.     used warning messages.","code":""},{"path":"/reference/check_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to revise format of user-provided logs — check_log","text":"Data.frame containing revised log.","code":""},{"path":"/reference/check_log.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to revise format of user-provided logs — check_log","text":"Vincent T van Hees <v.vanhees@accelting.com>   Jairo H Migueles <jairo@jhmigueles.com>","code":""},{"path":"/reference/check_myfun.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks myfun object before it is passed to applyExtfunction — check_myfun","title":"Checks myfun object before it is passed to applyExtfunction — check_myfun","text":"Checks object myfun list check elements   list : element names expected, value   element expected type length.","code":""},{"path":"/reference/check_myfun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks myfun object before it is passed to applyExtfunction — check_myfun","text":"","code":"check_myfun(myfun, windowsizes)"},{"path":"/reference/check_myfun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks myfun object before it is passed to applyExtfunction — check_myfun","text":"myfun See applyExtFunction windowsizes See g.getmeta).","code":""},{"path":"/reference/check_myfun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks myfun object before it is passed to applyExtfunction — check_myfun","text":"0 checkes passed, 1 one checks pass. Error   message printed console feedback checks    pass.","code":""},{"path":"/reference/check_myfun.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks myfun object before it is passed to applyExtfunction — check_myfun","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/check_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Check default parameters — check_params","title":"Check default parameters — check_params","text":"Checks parameter objects class logical combinations.   Called extract_params. intended direct use GGIR users.","code":""},{"path":"/reference/check_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check default parameters — check_params","text":"","code":"check_params(params_sleep = c(), params_metrics = c(),                         params_rawdata = c(), params_247 = c(),                         params_phyact = c(), params_cleaning = c(),                          params_output = c(), params_general = c())"},{"path":"/reference/check_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check default parameters — check_params","text":"params_sleep List sleep parameters params_metrics List parameters related metrics params_rawdata List parameters related raw data reading processing params_247 List parameters related 24/7 behavioural analysis, includes anything     fit physical activity sleep research params_phyact List parameters related physical activity analysis params_cleaning List parameters related cleaning time series, including masking imputation params_output List parameters related GGIR stores output params_general List parameters related general topics","code":""},{"path":"/reference/check_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check default parameters — check_params","text":"Lists updated parameter objects","code":""},{"path":"/reference/check_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check default parameters — check_params","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/convertEpochData.html","id":null,"dir":"Reference","previous_headings":"","what":"convert external Epoch data to GGIR part 1 milestone data format — convertEpochData","title":"convert external Epoch data to GGIR part 1 milestone data format — convertEpochData","text":"convert externally created Epoch data GGIR part 1 milestone data format. Function   intended direct use user. aim allow using GGIR top   extrnally derived epoch data. See argument dataFormat GGIR details   use functionality.","code":""},{"path":"/reference/convertEpochData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert external Epoch data to GGIR part 1 milestone data format — convertEpochData","text":"","code":"convertEpochData(datadir = c(), metadatadir = c(),                     params_general = c(), verbose = TRUE)"},{"path":"/reference/convertEpochData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert external Epoch data to GGIR part 1 milestone data format — convertEpochData","text":"datadir See GGIR metadatadir See GGIR params_general Parameters object see GGIR verbose See GGIR","code":""},{"path":"/reference/convertEpochData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert external Epoch data to GGIR part 1 milestone data format — convertEpochData","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/correctOlderMilestoneData.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","title":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","text":"older versions GGIR stored milestone data part 1 factor. function identifies occurs convert affected columns appropriate class (e.g., numeric).","code":""},{"path":"/reference/correctOlderMilestoneData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","text":"","code":"correctOlderMilestoneData(x)"},{"path":"/reference/correctOlderMilestoneData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","text":"x Data frame metashort metalong data generated g.part1","code":""},{"path":"/reference/correctOlderMilestoneData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","text":"Data frame class fixed appropriate columns (.e., light   temperature columns)","code":""},{"path":"/reference/correctOlderMilestoneData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Corrects milestone data from g.part1 generated in older GGIR versions — correctOlderMilestoneData","text":"","code":"if (FALSE) {     correctOlderMilestoneData(x)   }"},{"path":"/reference/cosinorAnalyses.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply cosinor anlaysis and extended cosinor analysis — cosinorAnalyses","title":"Apply cosinor anlaysis and extended cosinor analysis — cosinorAnalyses","text":"Applies cosinor anlaysis ActCR package time series","code":""},{"path":"/reference/cosinorAnalyses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply cosinor anlaysis and extended cosinor analysis — cosinorAnalyses","text":"","code":"cosinorAnalyses(Xi, epochsize = 60, timeOffsetHours = 0)"},{"path":"/reference/cosinorAnalyses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply cosinor anlaysis and extended cosinor analysis — cosinorAnalyses","text":"Xi Vector time series movement indicators epochsize Numeric epochsize seconds timeOffsetHours Numeric time hours relative next midnight","code":""},{"path":"/reference/cosinorAnalyses.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Apply cosinor anlaysis and extended cosinor analysis — cosinorAnalyses","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/createConfigFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates Config File based on variables in function GGIR environment — createConfigFile","title":"Creates Config File based on variables in function GGIR environment — createConfigFile","text":"used inside GGIR. intended direct use user.","code":""},{"path":"/reference/createConfigFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates Config File based on variables in function GGIR environment — createConfigFile","text":"","code":"createConfigFile(config.parameters = c(), GGIRversion = \"\")"},{"path":"/reference/createConfigFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates Config File based on variables in function GGIR environment — createConfigFile","text":"config.parameters List arguments used GGIR. GGIRversion GGIR version mumber incorported ConfigFile.","code":""},{"path":"/reference/createConfigFile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates Config File based on variables in function GGIR environment — createConfigFile","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/create_test_acc_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates csv data file for testing purposes — create_test_acc_csv","title":"Creates csv data file for testing purposes — create_test_acc_csv","text":"Creates file Actigraph csv data format dummy data can used testing. file includes accelerometer data  bouts higher acceleration, variations non-movement periods range accelerometer positions allow testing auto-calibration functionality.","code":""},{"path":"/reference/create_test_acc_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates csv data file for testing purposes — create_test_acc_csv","text":"","code":"create_test_acc_csv(sf=3,Nmin=2000,storagelocation=c(),                       start_time = NULL, starts_at_midnight = FALSE)"},{"path":"/reference/create_test_acc_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates csv data file for testing purposes — create_test_acc_csv","text":"sf Sample frequency Hertz, default low minimize file size Nmin Number minutes (minimum 720) storagelocation Location test file named testfile.csv stored     value provided function uses current      working directory start_time Start time recording, hh:mm:ss format. starts_at_midnight Boolean indicating whether recording start      midnight. Ignored start_time specified.","code":""},{"path":"/reference/create_test_acc_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates csv data file for testing purposes — create_test_acc_csv","text":"function produce output values. file  stored","code":""},{"path":"/reference/create_test_acc_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates csv data file for testing purposes — create_test_acc_csv","text":"","code":"if (FALSE) {     create_test_acc_csv()   }"},{"path":"/reference/create_test_sleeplog_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","title":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","text":"Creates sleeplog file format expected g.part4 dummy data (23:00 onset, 07:00 waking time every night).","code":""},{"path":"/reference/create_test_sleeplog_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","text":"","code":"create_test_sleeplog_csv(Nnights = 7, storagelocation = c(),                             advanced = FALSE, sep = \",\")"},{"path":"/reference/create_test_sleeplog_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","text":"Nnights Number nights (minimum 1) storagelocation Location test file named testfile.csv stored     value provided function uses current      working directory advanced Boolean indicate whether create advanced sleeplog also includes     logs nap times nonwear sep Character indicate column separator csv file.","code":""},{"path":"/reference/create_test_sleeplog_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","text":"function produce output values. file  stored","code":""},{"path":"/reference/create_test_sleeplog_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates csv sleeplog file for testing purposes — create_test_sleeplog_csv","text":"","code":"if (FALSE) {     create_test_sleeplog_csv()   }"},{"path":"/reference/data.calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Example output from g.calibrate — data.calibrate","title":"Example output from g.calibrate — data.calibrate","text":"data.calibrate example output g.calibrate","code":""},{"path":"/reference/data.calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example output from g.calibrate — data.calibrate","text":"","code":"data(data.calibrate)"},{"path":"/reference/data.calibrate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example output from g.calibrate — data.calibrate","text":"format :  chr \"data.calibrate\"","code":""},{"path":"/reference/data.calibrate.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example output from g.calibrate — data.calibrate","text":"data collected one individual testing purposes","code":""},{"path":"/reference/data.calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example output from g.calibrate — data.calibrate","text":"","code":"data(data.calibrate)"},{"path":"/reference/data.getmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Example output from g.getmeta — data.getmeta","title":"Example output from g.getmeta — data.getmeta","text":"data.getmeta example output g.getmeta","code":""},{"path":"/reference/data.getmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example output from g.getmeta — data.getmeta","text":"","code":"data(data.getmeta)"},{"path":"/reference/data.getmeta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example output from g.getmeta — data.getmeta","text":"format :  chr \"data.getmeta\"","code":""},{"path":"/reference/data.getmeta.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example output from g.getmeta — data.getmeta","text":"data collected one individual testing purposes","code":""},{"path":"/reference/data.getmeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example output from g.getmeta — data.getmeta","text":"","code":"data(data.getmeta)"},{"path":"/reference/data.inspectfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Example output from g.inspectfile — data.inspectfile","title":"Example output from g.inspectfile — data.inspectfile","text":"data.inspectfile example output g.inspectfile","code":""},{"path":"/reference/data.inspectfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example output from g.inspectfile — data.inspectfile","text":"","code":"data(data.inspectfile)"},{"path":"/reference/data.inspectfile.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example output from g.inspectfile — data.inspectfile","text":"format :  chr \"data.inspectfile\"","code":""},{"path":"/reference/data.inspectfile.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example output from g.inspectfile — data.inspectfile","text":"data collected one individual testing purposes","code":""},{"path":"/reference/data.inspectfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example output from g.inspectfile — data.inspectfile","text":"","code":"data(data.inspectfile)"},{"path":"/reference/data.metalong.html","id":null,"dir":"Reference","previous_headings":"","what":"Metalong object as part of part 1 milestone data — data.metalong","title":"Metalong object as part of part 1 milestone data — data.metalong","text":"data.metalong example metalong data.frame stored g.part1","code":""},{"path":"/reference/data.metalong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metalong object as part of part 1 milestone data — data.metalong","text":"","code":"data(data.metalong)"},{"path":"/reference/data.metalong.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Metalong object as part of part 1 milestone data — data.metalong","text":"format :  chr \"data.metalong\"","code":""},{"path":"/reference/data.metalong.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Metalong object as part of part 1 milestone data — data.metalong","text":"data collected one individual testing purposes","code":""},{"path":"/reference/data.metalong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metalong object as part of part 1 milestone data — data.metalong","text":"","code":"data(data.metalong)"},{"path":"/reference/data.ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Time series data.frame stored by part 5 — data.ts","title":"Time series data.frame stored by part 5 — data.ts","text":"data.ts example data.frame stored g.part5","code":""},{"path":"/reference/data.ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time series data.frame stored by part 5 — data.ts","text":"","code":"data(data.ts)"},{"path":"/reference/data.ts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Time series data.frame stored by part 5 — data.ts","text":"format :  chr \"data.ts\"","code":""},{"path":"/reference/data.ts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Time series data.frame stored by part 5 — data.ts","text":"data collected one individual testing purposes matches data   object data.metalong","code":""},{"path":"/reference/data.ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time series data.frame stored by part 5 — data.ts","text":"","code":"data(data.ts)"},{"path":"/reference/datadir2fnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"Uses input argument datadir g.part1   output isfilelist generate vector filenames","code":""},{"path":"/reference/datadir2fnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"","code":"datadir2fnames(datadir,filelist)"},{"path":"/reference/datadir2fnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"datadir See g.part1 filelist Produced isfilelist","code":""},{"path":"/reference/datadir2fnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"Character vector filenames","code":""},{"path":"/reference/datadir2fnames.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/datadir2fnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates vector of file names out of datadir input\r\n  argument — datadir2fnames","text":"","code":"if (FALSE) {   datadir2fnames(datadir = \"C:/mydatafolder\",filelist=TRUE)   }"},{"path":"/reference/detect_nonwear_clipping.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"Detects periods accelerometer worn accelerometer signal stuck close dynamic range limit accelerometer.","code":""},{"path":"/reference/detect_nonwear_clipping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"","code":"detect_nonwear_clipping(data = c(), windowsizes = c(5, 900, 3600), sf = 100,                         clipthres = 7.5, sdcriter = 0.013, racriter = 0.05,                         nonwear_approach = \"2013\",                         params_rawdata = c())"},{"path":"/reference/detect_nonwear_clipping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"data Matrix raw accelerometer data X, Y, Z axes. windowsizes Numeric vector length three, short, long epoch window size seconds. sf Sample frequency Hertz. clipthres Threschold detect clipping _g_ units. Usually 0.5 _g_    dynamic range accelerometer. sdcriter Criteria define non-wear time, defined estimated noise   measured raw accelerometer data. racriter Absolute criteria absolute range accelerations   define non-wear time. nonwear_approach Whether use traditional version non-wear detection algorithm   (nonwear_approach = \"2013\", default) new version (nonwear_approach = \"2023\").    2013 version use longsize window (windowsizes[3], one hour default)   check conditions nonwear identification flag nonwear   mediumsize window (windowsizes[2], 15 min default) middle. 2023    version differs flag nonwear full longsize window. 2013   method longsize window centered centre mediumsize window,    2023 method longsizewindow aligned left edge left edge    mediumsize window. params_rawdata See details GGIR.","code":""},{"path":"/reference/detect_nonwear_clipping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"List containing next numeric vectors:  NWav (non-wear score), 1 3 indicating number axes met non wear criteria. CWav (clipping score), binary, 0-1 indicating non-clipping clipping, respectively. nmin minimum numebr windows block data. number vectors represent long epoch duration (.e., ws2, 900 seconds default).","code":""},{"path":"/reference/detect_nonwear_clipping.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"Vincent T van Hees <v.vanhees@accelting.com> Jairo Hidalgo Migueles <j.h.migueles@accelting.com>","code":""},{"path":"/reference/detect_nonwear_clipping.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"van Hees  et al. 2011, doi: 10.1371/journal.pone.0022922. van Hees et al. 2013, doi: 10.1371/journal.pone.0061691 (supplementary material).","code":""},{"path":"/reference/detect_nonwear_clipping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect non-wear and clipping time in the raw accelerometer data — detect_nonwear_clipping","text":"","code":"if (FALSE) {     detect_nonwear_clipping(data = data, windowsizes = c(900, 3600), sf = sf,                             clipthres = clipthres, sdcriter = sdcriter,                              racriter = racriter, nonwear_approach = \"old\")   }"},{"path":"/reference/extractID.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract ID from file header object — extractID","title":"Extract ID from file header object — extractID","text":"Extract ID file header object.","code":""},{"path":"/reference/extractID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract ID from file header object — extractID","text":"","code":"extractID(hvars, idloc, fname)"},{"path":"/reference/extractID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract ID from file header object — extractID","text":"hvars Object extracted g.inspectfile idloc See GGIR fname File (base)name.","code":""},{"path":"/reference/extractID.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract ID from file header object — extractID","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/extract_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract parameters from input and add them to params — extract_params","title":"Extract parameters from input and add them to params — extract_params","text":"Extracts parameters separately provided input adds params objects.   intended direct use GGIR users.","code":""},{"path":"/reference/extract_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract parameters from input and add them to params — extract_params","text":"","code":"extract_params(params_sleep = c(), params_metrics = c(),                  params_rawdata = c(), params_247 = c(),                  params_phyact = c(), params_cleaning = c(),                  params_output = c(), params_general = c(), input = c(),                  configfile_csv = c(), params2check = c(\"sleep\", \"metrics\",                  \"rawdata\", \"247\", \"phyact\",                                            \"cleaning\", \"output\", \"general\"))"},{"path":"/reference/extract_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract parameters from input and add them to params — extract_params","text":"params_sleep List sleep parameters params_metrics List parameters related metrics params_rawdata List parameters related raw data reading processing params_247 List parameters related 24/7 behavioural analysis, includes anything     fit physical activity sleep research params_phyact List parameters related physical activity analysis params_cleaning List parameters related cleaning time series, including masking imputation params_output List parameters related GGIR stores output params_general List parameters related general topics input objects provided users configfile_csv Csv configuration file params2check Character vector indicate params objects need checked.     allows us prevent function checking params objects used     context function extract_params used.","code":""},{"path":"/reference/extract_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract parameters from input and add them to params — extract_params","text":"Lists updated parameter objects","code":""},{"path":"/reference/extract_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract parameters from input and add them to params — extract_params","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.abr.day.names.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","title":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","text":"Abbreviates daynames Monday becomes MON Sunday becomes SUN","code":""},{"path":"/reference/g.abr.day.names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","text":"","code":"g.abr.day.names(daynames)"},{"path":"/reference/g.abr.day.names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","text":"daynames Vector daynames character format","code":""},{"path":"/reference/g.abr.day.names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.abr.day.names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abbreviates daynames to numbers, needed for report generation in\r\n  g.plot5 — g.abr.day.names","text":"","code":"daynames = c(\"Monday\",\"Friday\")   daynames_converted = g.abr.day.names(daynames)"},{"path":"/reference/g.analyse.avday.html","id":null,"dir":"Reference","previous_headings":"","what":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","text":"Generatess average day analyses fills corresponding output   matrix, g.analyse.","code":""},{"path":"/reference/g.analyse.avday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","text":"","code":"g.analyse.avday(doquan, averageday, M, IMP, t_TWDI, quantiletype,                    ws3, doiglevels, firstmidnighti, ws2, midnightsi,                    params_247 = c(), qcheck = c(), acc.metric = c(), ...)"},{"path":"/reference/g.analyse.avday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","text":"doquan Boolean whether quantile analysis done averageday produced g.impute M produced g.getmeta IMP produced g.impute t_TWDI qwindow described g.analyse quantiletype see g.analyse ws3 Epoch size seconds doiglevels Boolean indicate whether iglevels calculated firstmidnighti see g.detecmidnight ws2 see g.weardec midnightsi see g.detecmidnight params_247 See g.part2 qcheck Vector indicators data valid (value=0) invalid (value=1). acc.metric Character, see g.part1. , used decided acceleration metric     use IVIS cosinor analyses. ... argument used previous version g.analyse.avday, now    used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.analyse.avday.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","text":"InterdailyStability  IntradailyVariability  igfullr_names  igfullr  QUAN  qlevels_names  ML5AD  ML5AD_names","code":""},{"path":"/reference/g.analyse.avday.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.avy","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.analyse.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"Analyses output functions within packages generate basic   descriptive summary accelerometer data file. Analyses include: Average    acceleration per day, per measurement, L5M5 analyses (assessment five   hours lowest acceleration highest acceleration). ,    traditionally popular variable MVPA automatically extracted six variants:   without bout criteria combination epoch = epoch length defined   g.getmeta (first value input argument windowsizes), 1 minute,   5 minutes, bout durations 1 minute, 5 minutes 10 minutes   combination epoch length defined g.getmeta.","code":""},{"path":"/reference/g.analyse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"","code":"g.analyse(I, C, M, IMP, params_247 = c(), params_phyact = c(),                       params_general = c(), params_cleaning = c(),                       quantiletype = 7, myfun = c(), ID, ...)"},{"path":"/reference/g.analyse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"output function g.inspectfile C output function g.calibrate M output function g.getmeta IMP output function g.impute params_247 See GGIR params_phyact See GGIR params_general See GGIR params_cleaning See GGIR quantiletype type quantile function use (default recommended). details, see      quantile function STATS package myfun External function object applied raw data, see g.getmeta. ID ID extracted g.part2. ... argument used previous version g.analyse, now      used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.analyse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"g.analyse generated two data,franeL summary summary file analysed daysummary summary per day file analysed data.frames used function g.report.part2 generate csv reports.   exaplantion columns data.frame subsequent csv reports   can found package vignette (Output part 2).","code":""},{"path":"/reference/g.analyse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.analyse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to analsyse meta-data generated by g.getmeta and g.impute — g.analyse","text":"","code":"data(data.getmeta)   data(data.inspectfile)   data(data.calibrate)   if (FALSE) {     #inspect file:     I = g.inspectfile(datafile)          #autocalibration:     C = g.calibrate(datafile)           #get meta-data:     M = g.getmeta(datafile, desiredtz = \"Europe/London\",      windowsizes = c(5, 900, 3600),     daylimit = FALSE, offset = c(0, 0, 0),      scale = c(1, 1, 1), tempoffset = c(0, 0, 0))   }   #impute meta-data:   IMP = g.impute(M = data.getmeta, I = data.inspectfile, ID = \"01wk0\")      #analyse and produce summary:   A = g.analyse(I = data.inspectfile, C = data.calibrate,   M = data.getmeta, IMP, ID = \"01wk0\")"},{"path":"/reference/g.analyse.perday.html","id":null,"dir":"Reference","previous_headings":"","what":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","text":"Generates day specific analyses fills corresponding   output matrix, g.analyse.","code":""},{"path":"/reference/g.analyse.perday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","text":"","code":"g.analyse.perday(ndays, firstmidnighti, time, nfeatures,                  midnightsi, metashort, averageday,                 doiglevels, nfulldays,lastmidnight, ws3, ws2, qcheck,                 fname, idloc, sensor.location, wdayname, tooshort, includedaycrit,                 doquan, quantiletype, doilevels, domvpa,                 mvpanames, wdaycode, ID,                 deviceSerialNumber, ExtFunColsi, myfun, desiredtz = \"\",                 params_247 = c(), params_phyact = c(),                 ...)"},{"path":"/reference/g.analyse.perday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","text":"ndays Number days file firstmidnighti see g.detecmidnight time timestamp column metalong converted character nfeatures estimate number variables need stored   output matrix midnightsi see g.detecmidnight metashort see g.impute averageday produced g.impute doiglevels Boolean indicate whether iglevels calculated nfulldays Number days first last midnight recording lastmidnight see g.detecmidnight ws3 Epoch size seconds ws2 see g.weardec qcheck vector zeros ones epoch, respenting     quality check derived g.impute fname RData filename produced g.part1 idloc see g.analyse sensor.location produced g.extractheadervars wdayname character weekdayname tooshort 0 (file short) 1 (file short) includedaycrit see g.analyse doquan Boolean whether quantile analysis done quantiletype see g.analyse doilevels Boolean whether generate ilevels, see g.analyse domvpa Boolean whether mvpa analysis mvpanames Matrix 6 columns 1 row holding names six      mvpa variables wdaycode Equal M$wday produced g.getmeta ID Person Identification number, can numeric character deviceSerialNumber produced g.extractheadervars ExtFunColsi column index metashort metric stored myfun External function object applied raw data, see g.getmeta. desiredtz see g.part1 params_247 See g.part2 params_phyact See g.part2 ... argument used previous version g.analyse.perday, now    used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.analyse.perday.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","text":"daysummary Summary per day file analysed ds_names Variable names daysummary windowsummary Window summary, used   selectdayfile specified ws_names Variable names windowsummary","code":""},{"path":"/reference/g.analyse.perday.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perday","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.analyse.perfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","text":"Generates recording specific analyses fills corresponding   output matrix, g.analyse.","code":""},{"path":"/reference/g.analyse.perfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","text":"","code":"g.analyse.perfile(I, C, metrics_nav,                  AveAccAve24hr, doquan, doiglevels, tooshort,                  params_247, params_cleaning, params_general,                  output_avday, output_perday,                  dataqual_summary, file_summary)"},{"path":"/reference/g.analyse.perfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","text":"output g.inspectfile C output g.calibrate metrics_nav List three objects help navigate acceleration metrics AveAccAve24hr Average acceleration average 24 hour cycle doquan Boolean whether quantile analysis done doiglevels Boolean indicate whether iglevels calculated tooshort 0 (file short) 1 (file short) params_247 see GGIR params_cleaning see GGIR params_general see GGIR output_avday Output g.analyse.avday output_perday Output g.analyse.perday dataqual_summary Data.frame data quality summary indicators   produced g.analyse","code":""},{"path":"/reference/g.analyse.perfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","text":"filesummary summary file analysed daysummary Summary per day file analysed","code":""},{"path":"/reference/g.analyse.perfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function supports g.analyse. Not intended for direct use by user. — g.analyse.perfile","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.applymetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract metrics from acceleration signals — g.applymetrics","title":"Extract metrics from acceleration signals — g.applymetrics","text":"Function extract metrics acceleration signal. intended   direct use user","code":""},{"path":"/reference/g.applymetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract metrics from acceleration signals — g.applymetrics","text":"","code":"g.applymetrics(data, sf, ws3, metrics2do,                           n = 4, lb = 0.2, hb = 15,                           zc.lb = 0.25, zc.hb = 3,                            zc.sb = 0.01, zc.order = 2,                           actilife_LFE = FALSE)"},{"path":"/reference/g.applymetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract metrics from acceleration signals — g.applymetrics","text":"data Three column matrix x, y, z acceleration data n filter order, see GGIR details sf sample frequency ws3 Epoch size seconds metrics2do Dataframe Boolean indicator metrics whether     extracted . instance,     metrics2do$.bfen = TRUE, indicates bfen metric     extracted lb Lower boundery cut-frequencies, see GGIR. hb Higher boundery cut-frequencies, see GGIR. zc.lb See GGIR zc.hb See GGIR zc.sb See GGIR zc.order See GGIR actilife_LFE See GGIR","code":""},{"path":"/reference/g.applymetrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract metrics from acceleration signals — g.applymetrics","text":"Dataframe metric values columns average per epoch (ws3)","code":""},{"path":"/reference/g.applymetrics.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract metrics from acceleration signals — g.applymetrics","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.applymetrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract metrics from acceleration signals — g.applymetrics","text":"","code":"Gx = runif(n=10000,min=0,max=2)   Gy = runif(n=10000,min=1,max=3)   Gz = runif(n=10000,min=0,max=2)   data = cbind(Gx, Gy, Gz)   metrics2do = data.frame(do.bfen=TRUE,do.enmo=TRUE,do.lfenmo=FALSE,   do.en=FALSE,do.hfen=FALSE,do.hfenplus=FALSE,do.mad=FALSE,do.anglex=FALSE,   do.angley=FALSE,do.anglez=FALSE,do.roll_med_acc_x=FALSE,   do.roll_med_acc_y=FALSE,do.roll_med_acc_z=FALSE,   do.dev_roll_med_acc_x=FALSE,do.dev_roll_med_acc_y=FALSE,   do.dev_roll_med_acc_z=FALSE,do.enmoa=FALSE,   do.lfx=FALSE, do.lfy=FALSE, do.lfz=FALSE,    do.hfx=FALSE, do.hfy=FALSE, do.hfz=FALSE,    do.bfx=FALSE, do.bfy=FALSE, do.bfz=FALSE,   do.zcx=FALSE, do.zcy=FALSE, do.zcz=FALSE,    do.brondcounts=FALSE, do.neishabouricounts=FALSE)      extractedmetrics = g.applymetrics(data,n=4,sf=40,ws3=5,metrics2do)"},{"path":"/reference/g.calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"Function starts identifying ten second windows non-movement. Next,   average acceleration per axis per window used estimate calibration error    (offset scaling) per axis. function provides recommended correction factors   address calibration error summary callibration procedure.","code":""},{"path":"/reference/g.calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"","code":"g.calibrate(datafile, params_rawdata = c(), params_general = c(),               params_cleaning = c(), inspectfileobject = c(), verbose = TRUE, ...)"},{"path":"/reference/g.calibrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"datafile Name accelerometer file params_rawdata See g.part1 params_general See g.part1 params_cleaning See g.part1 inspectfileobject Output function g.inspectfile. verbose Boolean (default = TRUE). indicate whether console message printed.      Note warnings error always printed can suppressed      suppressWarning() suppressMessages(). ... argument used previous version g.calibrate, now      used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.calibrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"scale scaling correction values, e.g. c(1,1,1) offset offset correction values, e.g. c(0,0,0) tempoffset correction values related temperature, e.g. c(0,0,0) cal.error.start absolute difference Euclidean norm   non-movement windows 1 g autocalibration cal.error.end absolute difference Euclidean norm    non-movement windows 1 g autocalibration spheredata average, standard deviation, Euclidean norm temperature   (available) ten second non-movement windows used   autocalibration procedure npoints number 10 second -movement windows used populate   sphere nhoursused number hours measurement data scanned find     ten second time windows movement meantempcal mean temperature corresponding data used      autocalibration. applies data temperate data collected     available GGIR, GENEActiv, Axivity, instances     ad-hoc .csv data.","code":""},{"path":"/reference/g.calibrate.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"Vincent T van Hees <v.vanhees@accelting.com>   Zhou Fang","code":""},{"path":"/reference/g.calibrate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI,      White T, Wareham NJ, Brage S. Auto-calibration accelerometer data     free-living physical activity assessment using local gravity temperature:      evaluation four continents. J Appl Physiol (1985). 2014 Aug 7","code":""},{"path":"/reference/g.calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"function to estimate calibration error and make recommendation for addressing it — g.calibrate","text":"","code":"if (FALSE) {     datafile = \"C:/myfolder/testfile.bin\"          #Apply autocalibration:     C = g.calibrate(datafile)     print(C$scale)     print(C$offset)   }"},{"path":"/reference/g.conv.actlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","title":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","text":"Function read activity log convert data.frame  ID date different qwindow vector.","code":""},{"path":"/reference/g.conv.actlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","text":"","code":"g.conv.actlog(qwindow, qwindow_dateformat=\"%d-%m-%Y\", epochSize = 5)"},{"path":"/reference/g.conv.actlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","text":"qwindow Path csv file activity log. Expected format activity diary :     First column headers followed one row per recording, first column recording ID,     needs match ID GGIR extracts accelerometer file.     Followed date column format \"23-04-2017\", date format specified      argument qwindow_dateformat (). Use character combination date, Date      DATE column name. followed      one multiple columns start times activity types day format      hours:minutes:seconds. header column used label activity     type. Insert new date column continuing activity types next day.     Leave missing values empty. activitylog used individuals      appear activitylog still processed value c(0,24).     Dates activiy log data can skipped, need column      date followed column next date. times activitylog multiple      short window size (epoch length), next epoch considered (e.g., epoch 5 seconds,      8:00:02 redefined 8:00:05 activity log). qwindow_dateformat Character specifying date format used activity log. epochSize Short epoch size (first value windowsizes g.getmeta).","code":""},{"path":"/reference/g.conv.actlog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","text":"Data.frame column ID, date qwindow,   qwindow value qwindow vector","code":""},{"path":"/reference/g.conv.actlog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to read activity log and make it useful for the rest of GGIR. — g.conv.actlog","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.convert.part2.long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert part 2 report to long format — g.convert.part2.long","title":"Convert part 2 report to long format — g.convert.part2.long","text":"direct access used. function used    inside g.report.part2 convert2 part 2 report long    ormat   multiple segments per day","code":""},{"path":"/reference/g.convert.part2.long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert part 2 report to long format — g.convert.part2.long","text":"","code":"g.convert.part2.long(daySUMMARY)"},{"path":"/reference/g.convert.part2.long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert part 2 report to long format — g.convert.part2.long","text":"daySUMMARY Object available inside g.report.part2","code":""},{"path":"/reference/g.convert.part2.long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert part 2 report to long format — g.convert.part2.long","text":"Data.frame long format version daySUMMARY","code":""},{"path":"/reference/g.convert.part2.long.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert part 2 report to long format — g.convert.part2.long","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.create.sp.mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","title":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","text":"Function convert data sleep period matrix part g.part4.R. intended direct use package user","code":""},{"path":"/reference/g.create.sp.mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","text":"","code":"g.create.sp.mat(nsp,spo,sleepdet.t,daysleep=FALSE)"},{"path":"/reference/g.create.sp.mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","text":"nsp Integer indicating number sleep periods spo Empty matrix overview sleep periods, 5 columns   along nps sleepdet.t Part detected sleep g.sib.det one night one     sleep definition daysleep Boolean indicator whether person woke   noon (daysleeper)","code":""},{"path":"/reference/g.create.sp.mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","text":"spo matrix start end sleep period calendardate date corresponding day night started item wdayname weekdayname","code":""},{"path":"/reference/g.create.sp.mat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Converts sleep period information. Not intended for direct use — g.create.sp.mat","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.detecmidnight.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect all midnights in a time series — g.detecmidnight","title":"Detect all midnights in a time series — g.detecmidnight","text":"Detect midnights time series","code":""},{"path":"/reference/g.detecmidnight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect all midnights in a time series — g.detecmidnight","text":"","code":"g.detecmidnight(time,desiredtz, dayborder)"},{"path":"/reference/g.detecmidnight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect all midnights in a time series — g.detecmidnight","text":"time Vector timestamps, either iso8601 POSIX format desiredtz See g.part2 dayborder see g.analyse","code":""},{"path":"/reference/g.detecmidnight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect all midnights in a time series — g.detecmidnight","text":"Output function list containing following objects:  firstmidnight = timestamp first midnight firstmidnighti = index first midnight lastmidnight = timestamp last midnight lastmidnighti = index last midnight midnights = timestamps midnights midnightsi = indeces midnights","code":""},{"path":"/reference/g.detecmidnight.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detect all midnights in a time series — g.detecmidnight","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.dotorcomma.html","id":null,"dir":"Reference","previous_headings":"","what":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"function used g.readaccfile assess numeric data   interpretted","code":""},{"path":"/reference/g.dotorcomma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"","code":"g.dotorcomma(inputfile,dformat,mon, desiredtz = \"\", loadGENEActiv = \"GGIRread\", ...)"},{"path":"/reference/g.dotorcomma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"inputfile full path inputfile dformat Data format code: 1=.bin, 2=.csv, 3=.wav, 4=.cwa, 5=.csv ad-hoc monitor      brand mon Monitor code (accelorometer brand): 0=undefined, 1=GENEA, 2=GENEActiv,     3=Actigraph, 4=Axivity, 5=Movisense, 6=Verisense desiredtz Desired timezone, see documentation g.getmeta loadGENEActiv See GGIR ... input arguments needed function read.myacc.csv     working non-standard csv formatted files.","code":""},{"path":"/reference/g.dotorcomma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"Character object showing decimals separated","code":""},{"path":"/reference/g.dotorcomma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.dotorcomma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assesses whether decimals in fileheader are stored with comma\r\n  or dot separated decimals — g.dotorcomma","text":"","code":"if (FALSE) {     decn = g.dotorcomma(inputfile=\"C:/myfile.bin\",dformat=1,mon=2)   }"},{"path":"/reference/g.downsample.html","id":null,"dir":"Reference","previous_headings":"","what":"Downsample a vector of numeric values at three time resolutions — g.downsample","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"Downsamples vector numeric values three time resolutions:   1 seconds, ws3 seconds, ws2 second. Function intended   direct interaction package end user","code":""},{"path":"/reference/g.downsample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"","code":"g.downsample(sig,fs,ws3,ws2)"},{"path":"/reference/g.downsample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"sig Vector numeric values fs Sample frequency ws3 ws3 epoch size, e.g. 5 seconds ws2 ws2 epoch size, e.g. 90 seconds","code":""},{"path":"/reference/g.downsample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"List three object: var1, var2, var3 corresponding downsample time series 1 seconds, ws2 seconds, ws3 seconds resoluton, respectively","code":""},{"path":"/reference/g.downsample.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.downsample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Downsample a vector of numeric values at three time resolutions — g.downsample","text":"","code":"sig = runif(n=10000,min=1,max=10)  downsampled_sig = g.downsample(sig,fs=20,ws3=5,ws2=15)"},{"path":"/reference/g.extractheadervars.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts header variables from header object — g.extractheadervars","title":"Extracts header variables from header object — g.extractheadervars","text":"Function intended direct interaction package end user","code":""},{"path":"/reference/g.extractheadervars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts header variables from header object — g.extractheadervars","text":"","code":"g.extractheadervars(I)"},{"path":"/reference/g.extractheadervars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts header variables from header object — g.extractheadervars","text":"Object produced g.inspectfile","code":""},{"path":"/reference/g.extractheadervars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts header variables from header object — g.extractheadervars","text":"ID = participant identifier iid = investigator identifier HN = handedness BodyLocation = Attachement location sensor SX = sex deviceSerialNumber = serial number","code":""},{"path":"/reference/g.extractheadervars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts header variables from header object — g.extractheadervars","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.extractheadervars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts header variables from header object — g.extractheadervars","text":"","code":"data(data.inspectfile) headervars = g.extractheadervars(I=data.inspectfile)"},{"path":"/reference/g.fragmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Fragmentation metrics from time series. — g.fragmentation","title":"Fragmentation metrics from time series. — g.fragmentation","text":"function used g.part5 derive time series  fragmentation metrics. function assumes NA values nonwear time  accounted data enters function.","code":""},{"path":"/reference/g.fragmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fragmentation metrics from time series. — g.fragmentation","text":"","code":"g.fragmentation(frag.metrics = c(\"mean\", \"TP\", \"Gini\", \"power\",         \"CoV\", \"NFragPM\", \"all\"), LEVELS = c(), Lnames=c(), xmin=1, mode = \"day\")"},{"path":"/reference/g.fragmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fragmentation metrics from time series. — g.fragmentation","text":"frag.metrics Character fragmentation metric exract. Can \"mean\", \"TP\", \"Gini\",     \"power\", \"CoV\", \"NFragPM\", metrics \"\". See details. LEVELS Numeric vector behavioural level classes derived identify_levels Lnames Character vector names classes used LEVELS, see details. xmin Numeric scalar indicate minimum recordable fragment length. g.part5     derived epoch length. mode Character indicate whether input data daytime (\"day\") sleep period time (\"spt\").","code":""},{"path":"/reference/g.fragmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fragmentation metrics from time series. — g.fragmentation","text":"List Character object showing decimals separated TP_PA2IN Transition probability physical activity inactivity . TP_IN2PA Transition probability physical inactivity activity Nfrag_IN2LIPA Number inacitivty fragments succeeded LIPA   (light physical activity) TP_IN2LIPA Transition probability physical inactivity LIPA Nfrag_IN2MVPA Number inacitivty fragments succeeded MVPA   (moderate vigorous physical activity) TP_IN2MVPA Transition probability physical inactivity MVPA Nfrag_MVPA Number MVPA fragments Nfrag_LIPA Number LIPA fragments mean_dur_MVPA mean MVPA fragment duration mean_dur_LIPA mean LIPA fragment duration Nfrag_IN Number inactivity fragments Nfrag_PA Number activity fragments mean_dur_IN mean duration inactivity fragments mean_dur_PA mean duration activity fragments Gini_dur_IN Gini index corresponding inactivity fragment durations Gini_dur_PA Gini index corresponding activity fragment durations CoV_dur_IN Coefficient Variance corresponding inactivity fragment durations CoV_dur_PA Coefficient Variance corresponding activity fragment durations alpha_dur_IN Alpha fitted power distribution inactivity fragment durations alpha_dur_PA Alpha fitted power distribution activity fragment durations x0.5_dur_IN x0.5 corresponding alpha_dur_IN x0.5_dur_PA x0.5 corresponding alpha_dur_PA W0.5_dur_IN W0.5 corresponding alpha_dur_IN W0.5_dur_PA W0.5 corresponding alpha_dur_PA NFragPM_IN Number fragments per minutes NFragPM_PA Number PA fragments per minutes PA SD_dur_IN Standard deviation duration inactivity fragments SD_dur_PA Standard deviation duration physical activity fragments","code":""},{"path":"/reference/g.fragmentation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fragmentation metrics from time series. — g.fragmentation","text":"See package vignette description fragmentation metrics.   short, abbreviation \"TP\" refers transition probality metrics,   abbreviation \"CoV\" refers Coefficient Variance,   metric \"NFragPM\" refers Number fragments per minute. Regarding Lnames argument. class names included categorised   follows: Inactive, name includes character strings \"day_IN_unbt\" \"day_IN_bts\" LIPA, name includes character strings \"day_LIG_unbt\" \"day_LIG_bts\" MVPA, name includes character strings \"day_MOD_unbt\", \"day_VIG_unbt\",      \"day_MVPA_bts\"","code":""},{"path":"/reference/g.fragmentation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fragmentation metrics from time series. — g.fragmentation","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.fragmentation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fragmentation metrics from time series. — g.fragmentation","text":"","code":"if (FALSE) {     x = c(6, 5, 6, 7, 6, 6, 7, 6, 6, 5, 6, 6, 6, 5, 7, 6, 6, 5, 5, 5, 6, 7, 6,         6, 6, 6, 7, 6, 5, 5, 5, 5, 5, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6,         7, 7, 6, 5, 6, 5, 6, 5, rep(12, 11), 5, 6, 6, 6, 5, 6, rep(9, 14), 6,         5, 7, 7, 6, 7, 7, 7, 6, 6, 6, 5, 6, 5, 5, 5, 6, 5, 5, 5, 5, 5, 5, 5)   Lnames = c(\"spt_sleep\", \"spt_wake_IN\", \"spt_wake_LIG\", \"spt_wake_MOD\",             \"spt_wake_VIG\", \"day_IN_unbt\", \"day_LIG_unbt\", \"day_MOD_unbt\",             \"day_VIG_unbt\", \"day_MVPA_bts_10\", \"day_IN_bts_30\",              \"day_IN_bts_10_30\", \"day_LIG_bts_10\")   out = g.fragmentation(frag.metrics = \"all\",                         LEVELS = x,                         Lnames=Lnames)}"},{"path":"/reference/g.getbout.html","id":null,"dir":"Reference","previous_headings":"","what":"function to calculate bouts from vector of binary classes — g.getbout","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"detect bouts behaviour time series. function used g.analyse","code":""},{"path":"/reference/g.getbout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"","code":"g.getbout(x, boutduration, boutcriter = 0.8, ws3 = 5)"},{"path":"/reference/g.getbout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"x vector zeros /ones screened bouts ones boutduration duration bout epochs boutcriter Minimum percentage boutduration epoch values     expected meet threshold criterium ws3 epoch length seconds, needed bout.metric =3,   needs measure many epochs equal 1 minute breaks","code":""},{"path":"/reference/g.getbout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"Vector binary numbers indicator bouts detected","code":""},{"path":"/reference/g.getbout.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"Vincent T van Hees <v.vanhees@accelting.com>   Jairo Hidalgo Migueles","code":""},{"path":"/reference/g.getbout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"function to calculate bouts from vector of binary classes — g.getbout","text":"","code":"y = g.getbout(x=round(runif(1000, 0.4, 1)), boutduration = 120, boutcriter=0.9,     ws3 = 5)"},{"path":"/reference/g.getM5L5.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract M5 and L5 from time series — g.getM5L5","title":"Extract M5 and L5 from time series — g.getM5L5","text":"Extract M5 L5 time series, function used g.analyse   intended direct use package user. Please see g.analyse   clarification functionalities","code":""},{"path":"/reference/g.getM5L5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract M5 and L5 from time series — g.getM5L5","text":"","code":"g.getM5L5(varnum,ws3,t0_LFMF,t1_LFMF,M5L5res,winhr,qM5L5=c(),    iglevels=c(), MX.ig.min.dur=10)"},{"path":"/reference/g.getM5L5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract M5 and L5 from time series — g.getM5L5","text":"varnum Numeric vector epoch values ws3 Small epoch size seconds t0_LFMF Start hour day M5L5 analyses, e.g. 0 midnight t1_LFMF End hour day M5L5 analyses, e.g. 24 midnight M5L5res Resolution hte M5L5 analyses minutes winhr windowsize M5L5 analyses, e.g. 5 hours qM5L5 Percentiles (quantiles) calculated L5 M5 window. iglevels See  g.analyse. provided intensity gradient calculated     MX windows larger equal argument MX.ig.min.dur MX.ig.min.dur Minimum MX duration needed order intensity gradient calculated","code":""},{"path":"/reference/g.getM5L5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract M5 and L5 from time series — g.getM5L5","text":"DAYL5HOUR = Starting time hours L5 DAYL5VALUE = average acceleration L5 DAYM5HOUR = Starting time hours M5 DAYM5VALUE = average acceleration M5 V5NIGHT = average acceleration 1am 6am","code":""},{"path":"/reference/g.getM5L5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract M5 and L5 from time series — g.getM5L5","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.getM5L5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract M5 and L5 from time series — g.getM5L5","text":"","code":"if (FALSE) {     data(data.getmeta)     g.getM5L5(varnum=data.getmeta,ws3=5,t0_LFMF=0,t1_LFMF=24,M5L5res=10,winhr=5)   }"},{"path":"/reference/g.getmeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"Reads accelerometer file blocks, extracts various features stores average  feature   value per short long epoch. Acceleration angle metrics stored short   epoch length. non-wear indication score, clipping score, temperature   (available), light (available), Euclidean norm stored long epoch   length. function designed thoroughly tested accelerometer files   GENEA GENEActiv bin files. , function able cope ActiGraph gt3x   csv files, Axivity cwa csv files, Movisens bin files, ad-hoc csv files read   read.myacc.csv function.","code":""},{"path":"/reference/g.getmeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"","code":"g.getmeta(datafile, params_metrics = c(), params_rawdata = c(),                      params_general = c(), params_cleaning = c(), daylimit = FALSE,                      offset = c(0, 0, 0), scale = c(1, 1, 1), tempoffset = c(0, 0, 0),                      meantempcal = c(), myfun = c(), inspectfileobject = c(),                       verbose = TRUE, ...)"},{"path":"/reference/g.getmeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"datafile name accelerometer file params_metrics See details GGIR. params_rawdata See details GGIR. params_general See details GGIR. params_cleaning See details GGIR. daylimit number days limit (roughly), set FALSE daylimit     applied offset offset correction value per axis, usage:     value = scale(value,center = -offset, scale = 1/scale) scale scaling correction value per axis, usage:     value = scale(value,center = -offset, scale = 1/scale) tempoffset temperature offset correction value per axis, usage:     value = scale(value,center = -offset, scale = 1/scale)     + scale(temperature, center = rep(averagetemperate,3), scale = 1/tempoffset) meantempcal mean temperature corresponding data used     autocalibration. autocalibration done temperature     available leave blank (default) myfun External function object applied raw data.     See details applyExtFunction. inspectfileobject Output function g.inspectfile. verbose Boolean (default = TRUE). indicate whether console message printed.     Note warnings error always printed can suppressed     suppressWarning() suppressMessages(). ... argument used previous version g.getmeta, now     used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.getmeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"metalong dataframe long epoch meta-data: EN, non-wear score,   clipping score, temperature metashort dataframe short epoch meta-data: timestamp metric tooshort indicator whether file short processing (TRUE FALSE) corrupt indicator whether file considered corrupt (TRUE FALSE)","code":""},{"path":"/reference/g.getmeta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.getmeta.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"van Hees VT, Gorzelniak L, Dean Leon EC, Eder M, Pias M, et al. (2013) Separating     Movement Gravity Components Acceleration Signal Implications     Assessment Human Daily Physical Activity. PLoS ONE 8(4): e61691.     doi:10.1371/journal.pone.0061691 Aittasalo M, Vaha-Ypya H, Vasankari T, Husu P, Jussila , Sievanen H. Mean     amplitude deviation calculated raw acceleration data: novel method     classifying intensity adolescents physical activity irrespective accelerometer     brand. BMC Sports Science, Medicine Rehabilitation (2015).","code":""},{"path":"/reference/g.getmeta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to extract meta-data (features) from data in accelerometer file — g.getmeta","text":"","code":"if (FALSE) {     datafile = \"C:/myfolder/testfile.bin\"      #Extract meta-data:     M = g.getmeta(datafile)      #Inspect first couple of rows of long epoch length meta data:     print(M$metalong[1:5,])      #Inspect first couple of rows of short epoch length meta data:     print(M$metalong[1:5,])   }"},{"path":"/reference/g.getstarttime.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract start time of a measurement — g.getstarttime","title":"Extract start time of a measurement — g.getstarttime","text":"Extract start time measurement. GGIR calculates timestamps   using first timestamp sample frequency. intended   direct use package user","code":""},{"path":"/reference/g.getstarttime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract start time of a measurement — g.getstarttime","text":"","code":"g.getstarttime(datafile, P, header, mon, dformat, desiredtz,   configtz = NULL)"},{"path":"/reference/g.getstarttime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract start time of a measurement — g.getstarttime","text":"datafile Full path data file P Object extracted g.readaccfile header File header extracted g.inspectfile mon g.dotorcomma dformat g.dotorcomma desiredtz g.dotorcomma configtz g.dotorcomma","code":""},{"path":"/reference/g.getstarttime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract start time of a measurement — g.getstarttime","text":"starttime","code":""},{"path":"/reference/g.getstarttime.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract start time of a measurement — g.getstarttime","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.impute.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"Functions takes output g.getmeta information study   protocol label impute invalid time segments data.","code":""},{"path":"/reference/g.impute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"","code":"g.impute(M, I, params_cleaning = c(),   desiredtz=\"\", dayborder= 0, TimeSegments2Zero =c(), acc.metric = \"ENMO\", ID, ...)"},{"path":"/reference/g.impute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"M output g.getmeta output g.inspectfile params_cleaning See g.part1 desiredtz See g.part1 dayborder See g.part1 TimeSegments2Zero Optional data.frame specify time segments need ignored imputation,     acceleration metrics imputed zeros. data.frame expected     contain two columns named windowstart windowend, start- end     time time segment POSIXlt class. acc.metric See GGIR ID ID extracted g.part2. ... argument used previous version g.impute, now      used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.impute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"metashort imputed short epoch variables rout matrix clarify data imputed long epoch time window   reason imputation. Value = 1 indicates imputation.    Columns 1 = monitor non wear, column 2 = clipping, column 3 = additional nonwear,   column 4 = protocol based exclusion column5 = sum column 1,2,3 4. averageday matrix n columns n metrics values m rows   m short epoch time windows average 24 hours period","code":""},{"path":"/reference/g.impute.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.impute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to identify invalid periods in the meta-data as generated by g.getmeta\r\n  and to impute these invalid periods with the average of similar timepoints on other\r\n  days of the measurement — g.impute","text":"","code":"if (FALSE) {     #inspect file:     I = g.inspectfile(datafile)     #autocalibration:     C = g.calibrate(datafile)      #get meta-data:     M = g.getmeta(datafile)   }   data(data.getmeta)   data(data.inspectfile)   #impute meta-data:   IMP = g.impute(M=data.getmeta, I=data.inspectfile)"},{"path":"/reference/g.imputeTimegaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","title":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","text":"Removes sample zero three axes, (default)   imputes time  gaps last recorded value per axis normalised 1 _g_","code":""},{"path":"/reference/g.imputeTimegaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","text":"","code":"g.imputeTimegaps(x, xyzCol, timeCol = c(), sf, k = 0.25, impute = TRUE,                     PreviousLastValue = c(0,0,1),                     PreviousLastTime = NULL, epochsize = NULL)"},{"path":"/reference/g.imputeTimegaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","text":"x Data.frame raw accelerometer data, timestamp column     millisecond resolution. xyzCol Columnnames numbers x, y z column timeCol Column name number timestamp column sf Sample frequency Hertz k Minimum time gap length imputed impute Boolean indicate whether time gaps identified imputed PreviousLastValue Automatically identified last value previous chunk data read. PreviousLastTime Automatically identified last timestamp previous chunk data read. epochsize Numeric vector length two, short long epoch sizes.","code":""},{"path":"/reference/g.imputeTimegaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","text":"List including:   - x, data.frame based input x timegaps imputed (default)    recordings 0 values three axes removed (impute = FALSE)   - QClog, data.frame information number time gaps found    total time imputed minutes","code":""},{"path":"/reference/g.imputeTimegaps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Impute gaps in three axis raw accelerometer data — g.imputeTimegaps","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.inspectfile.html","id":null,"dir":"Reference","previous_headings":"","what":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","title":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","text":"Inspects accelerometer file key information, including: monitor brand, sample frequency file header","code":""},{"path":"/reference/g.inspectfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","text":"","code":"g.inspectfile(datafile, desiredtz = \"\", params_rawdata = c(),                          configtz = c(), ...)"},{"path":"/reference/g.inspectfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","text":"datafile name data file desiredtz Desired timezone, see documentation g.getmeta params_rawdata See g.part1 configtz ... ... argument used previous version g.getmeta, now     used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.inspectfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","text":"header fileheader monn monitor name (genea, geneactive) monc monitor brand code (0 - ad-hoc file format, 1 = genea (non-commercial),       2 = GENEActive, 3 = actigraph, 4 = Axivity (AX3, AX6), 5 = Movisense, 6 = Verisense) dformn data format name, e.g bin, csv, cwa, gt3x dformc data format code (1 = .bin, 2 = .csv, 3 = .wav, 4 = .cwa, 5 = ad-hoc .csv, 6 = .gt3x) sf samplefrequency Hertz filename filename","code":""},{"path":"/reference/g.inspectfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to inspect accelerometer file for brand, sample frequency and header — g.inspectfile","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.intensitygradient.html","id":null,"dir":"Reference","previous_headings":"","what":"Intensity gradient calculation — g.intensitygradient","title":"Intensity gradient calculation — g.intensitygradient","text":"Calculates intensity gradient based Rowlands et al. 2018. function assumes user already calculated value distribution.","code":""},{"path":"/reference/g.intensitygradient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intensity gradient calculation — g.intensitygradient","text":"","code":"g.intensitygradient(x,y)"},{"path":"/reference/g.intensitygradient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intensity gradient calculation — g.intensitygradient","text":"x Numeric vector mid-points bins (mg) y Numeric vector time spent bins (minutes)","code":""},{"path":"/reference/g.intensitygradient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intensity gradient calculation — g.intensitygradient","text":"y_intercept y-intercept linear regression line log-log space gradient Beta coefficient linear regression line log-log space rsquared R squared x y values log-log space","code":""},{"path":"/reference/g.intensitygradient.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Intensity gradient calculation — g.intensitygradient","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.intensitygradient.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Intensity gradient calculation — g.intensitygradient","text":"Rowlands , Edwardson CL, et al. (2018) Beyond Cut Points: Accelerometer Metrics    Capture Physical Activity Profile. MSSE 50(6):1.    doi:10.1249/MSS.0000000000001561","code":""},{"path":"/reference/g.IVIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates IV and IS — g.IVIS","title":"Calculates IV and IS — g.IVIS","text":"extract interdaily stability interdaily variability originally proposed   van Someren.","code":""},{"path":"/reference/g.IVIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates IV and IS — g.IVIS","text":"","code":"g.IVIS(Xi, epochsizesecondsXi = 5, IVIS_epochsize_seconds = c(),     IVIS_windowsize_minutes = 60, IVIS.activity.metric = 1,     IVIS_acc_threshold = 20, IVIS_per_daypair = FALSE)"},{"path":"/reference/g.IVIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates IV and IS — g.IVIS","text":"Xi Vector acceleration values, e.g. ENMO metric. epochsizesecondsXi Epoch size values Xi expressed seconds. IVIS_epochsize_seconds argument depricated. IVIS_windowsize_minutes Window size Intradaily Variability (IV) Interdaily     Stability () metrics minutes, needs able add 24 hours. IVIS.activity.metric Metric used activity calculation.     Value = 1, uses continuous scaled acceleration.     Value = 2, tries collapse acceleration binary score rest     versus active try simulate original approach. IVIS_acc_threshold Acceleration threshold distinguish inactive active IVIS_per_daypair Boolean indicate whether IVIS calculated per day pair     aggregated across day pairs weighted day completeness (default FALSE).","code":""},{"path":"/reference/g.IVIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates IV and IS — g.IVIS","text":"InterdailyStability  IntradailyVariability","code":""},{"path":"/reference/g.IVIS.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculates IV and IS — g.IVIS","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.IVIS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates IV and IS — g.IVIS","text":"Eus J. W. Van Someren, Dick F. Swaab, Christopher C. Colenda,      Wayne Cohen, W. Vaughn McCall & Peter B. Rosenquist. Bright Light Therapy:      Improved Sensitivity Effects Rest-Activity Rhythms Alzheimer      Patients Application Nonparametric Methods  Chronobiology     International. 1999. Volume 16, issue 4.","code":""},{"path":"/reference/g.IVIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates IV and IS — g.IVIS","text":"","code":"Xi = abs(rnorm(n = 10000,mean = 0.2))   IVISvariables = g.IVIS(Xi=Xi)"},{"path":"/reference/g.loadlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and clean sleeplog information — g.loadlog","title":"Load and clean sleeplog information — g.loadlog","text":"Loads sleeplog csv input file applies sanity checks   storing output dataframe","code":""},{"path":"/reference/g.loadlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and clean sleeplog information — g.loadlog","text":"","code":"g.loadlog(loglocation=c(),coln1=c(),colid=c(),     sleeplogsep=\",\", meta.sleep.folder = c(),   desiredtz=\"\")"},{"path":"/reference/g.loadlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and clean sleeplog information — g.loadlog","text":"loglocation Location spreadsheet (csv) sleep log information.     See package vignette explanation expected format coln1 Column number sleep log spreadsheet onset first   night starts colid Column number sleep log spreadsheet participant   ID code stored (default = 1)  sleeplogsep Value used sep argument reading sleeplog csv file, usually \",\" \";\".     argument deprecated. meta.sleep.folder Path part3 milestone data, specify sleeplog advanced format. desiredtz See g.part4","code":""},{"path":"/reference/g.loadlog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and clean sleeplog information — g.loadlog","text":"Data frame sleeplog, can either basic format advanced   format. See GGIR package vignette discussion two formats.","code":""},{"path":"/reference/g.loadlog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load and clean sleeplog information — g.loadlog","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.loadlog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and clean sleeplog information — g.loadlog","text":"","code":"if (FALSE) {   sleeplog = g.loadlog(loglocation=\"C:/mysleeplog.csv\",coln1=2,   colid=1) }"},{"path":"/reference/g.part1.html","id":null,"dir":"Reference","previous_headings":"","what":"function to load and pre-process acceleration files — g.part1","title":"function to load and pre-process acceleration files — g.part1","text":"Calls function g.getmeta g.calibrate, converts   output .RData-format input g.part2. ,   function generates folder structure keep track various output files.   reason g.part1 g.part2 merged one   generic shell function g.part1 takes much   longer involves minor decisions interest movement scientist.   Function g.part2 hand relatively fast comes   decisions directly impact variables interest   movement scientist. Therefore, user may want run g.part1 overnight   computing cluster, g.part2 can main playing ground   movement scientist. Function GGIR provides main shell   allows operating g.part1 g.part2.","code":""},{"path":"/reference/g.part1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to load and pre-process acceleration files — g.part1","text":"","code":"g.part1(datadir = c(), metadatadir = c(), f0 = 1, f1 = c(),           myfun = c(), params_metrics = c(), params_rawdata = c(),           params_cleaning = c(), params_general = c(), verbose = TRUE, ...)"},{"path":"/reference/g.part1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to load and pre-process acceleration files — g.part1","text":"datadir Directory accelerometer files stored, e.g.      \"C:/mydata\", list accelerometer filenames directories, e.g.      c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory output needs stored. Note      function attempt create folders directory uses     folder keep output. f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) myfun External function object applied raw data.     See details applyExtFunction. params_metrics See details GGIR. params_rawdata See details GGIR. params_cleaning See details GGIR. params_general See details GGIR. verbose See details GGIR. ... working non-standard csv formatted files, g.part1 also takes input     arguments needed function read.myacc.csv argument rmc.noise     get_nw_clip_block_params. First test argument function read.myacc.csv directly.     ensure compatibility R scripts written older GGIR versions, user can also     provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"function to load and pre-process acceleration files — g.part1","text":"GGIR comes many processing parameters, thematically grouped   parameter objects (R list). running print(load_params()) can   see default values parameter objects. g.part 1 used via GGIR   option specifiy configuration file, overrule default   parameter values. , user can set parameter values input argument g.part1   GGIR. Directly specified argument overrule configuration file default values. See GGIR package vignette details section GGIR elaborate overview parameter objects usage across GGIR.","code":""},{"path":"/reference/g.part1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to load and pre-process acceleration files — g.part1","text":"function provides values, ensures output  functions stored .RData(one file per accelerometer file) folder structure","code":""},{"path":"/reference/g.part1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to load and pre-process acceleration files — g.part1","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"function to load and pre-process acceleration files — g.part1","text":"van Hees VT, Gorzelniak L, Dean Leon EC, Eder M, Pias M, et al. (2013) Separating       Movement Gravity Components Acceleration Signal Implications       Assessment Human Daily Physical Activity. PLoS ONE 8(4): e61691.       doi:10.1371/journal.pone.0061691 van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI,       White T, Wareham NJ, Brage S. Auto-calibration accelerometer data       free-living physical activity assessment using local gravity temperature:       evaluation four continents. J Appl Physiol (1985). 2014 Aug 7 Aittasalo M, Vaha-Ypya H, Vasankari T, Husu P, Jussila , Sievanen H. Mean       amplitude deviation calculated raw acceleration data: novel method       classifying intensity adolescents physical activity irrespective accelerometer       brand. BMC Sports Science, Medicine Rehabilitation (2015).","code":""},{"path":"/reference/g.part1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"function to load and pre-process acceleration files — g.part1","text":"","code":"if (FALSE) {     datafile = \"C:/myfolder/mydata\"     outputdir = \"C:/myresults\"     g.part1(datadir,outputdir)   }"},{"path":"/reference/g.part2.html","id":null,"dir":"Reference","previous_headings":"","what":"function to analyse and summarize pre-processed output from g.part1 — g.part2","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"Loads output g.part1 applies g.impute   g.analyse, output converted .RData-format   used GGIR generate reports.   variables reports variables described   g.analyse.","code":""},{"path":"/reference/g.part2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"","code":"g.part2(datadir = c(), metadatadir = c(), f0 = c(), f1 = c(),         myfun = c(), params_cleaning = c(), params_247 = c(),         params_phyact = c(), params_output = c(), params_general = c(),         verbose = TRUE, ...)"},{"path":"/reference/g.part2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"datadir Directory accelerometer files stored, e.g.     \"C:/mydata\", list accelerometer filenames directories, e.g.     c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) myfun External function object applied raw data.     See details applyExtFunction. params_cleaning See details GGIR. params_247 See details GGIR. params_phyact See details GGIR. params_output See details GGIR. params_general See details GGIR. verbose See details GGIR. ... ensure compatibility R scripts written older GGIR versions,     user can also provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"function provides values, ensures functions called   output stored folder structure created g.part1.","code":""},{"path":"/reference/g.part2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"GGIR comes many processing parameters, thematically grouped   parameter objects (R list). running print(load_params()) can   see default values parameter objects. g.part 2 used via GGIR   option specifiy configuration file, overrule default   parameter values. , user can set parameter values input argument g.part2   GGIR. Directly specified argument overrule configuration file default values. See GGIR package vignette details section GGIR elaborate overview parameter objects usage across GGIR.","code":""},{"path":"/reference/g.part2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"van Hees VT, Gorzelniak L, Dean Leon EC, Eder M, Pias M, et al. (2013) Separating     Movement Gravity Components Acceleration Signal Implications     Assessment Human Daily Physical Activity. PLoS ONE 8(4): e61691.     doi:10.1371/journal.pone.0061691 van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI,     White T, Wareham NJ, Brage S. Auto-calibration accelerometer data     free-living physical activity assessment using local gravity temperature:     evaluation four continents. J Appl Physiol (1985). 2014 Aug 7","code":""},{"path":"/reference/g.part2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"function to analyse and summarize pre-processed output from g.part1 — g.part2","text":"","code":"if (FALSE) {     metadatadir = \"C:/myresults/output_mystudy\"     g.part2(metadatadir)   }"},{"path":"/reference/g.part3.html","id":null,"dir":"Reference","previous_headings":"","what":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"Function called function GGIR. estimates sustained inactivity   periods day, used input g.part4 labels   nocturnal sleep day time sustained inactivity periods.   Typical users work function GGIR .","code":""},{"path":"/reference/g.part3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"","code":"g.part3(metadatadir = c(), f0, f1, myfun = c(),    params_sleep = c(), params_metrics = c(), params_output = c(),    params_general = c(), verbose = TRUE,   ...)"},{"path":"/reference/g.part3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) myfun External function object applied raw data.     See details applyExtFunction. params_sleep See details GGIR. params_metrics See details GGIR. params_output See details GGIR. params_general See details GGIR. verbose See details GGIR. ... ensure compatibility R scripts written older GGIR versions,     user can also provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part3.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"GGIR comes many processing parameters, thematically grouped   parameter objects (R list). running print(load_params()) can   see default values parameter objects. g.part 3 used via GGIR   option specifiy configuration file, overrule default   parameter values. , user can set parameter values input argument g.part3   GGIR. Directly specified argument overrule configuration file default values. See GGIR package vignette details section GGIR elaborate overview parameter objects usage across GGIR.","code":""},{"path":"/reference/g.part3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"function provides values, ensures functions   called output stored .RData files.    night nightnumber definition definition sustained inactivity. example,     T10A5 refers 10 minute window 5 degree angle (see paper     explaination). start.time.day timestamp day started nsib.periods number sustained inactivity bouts tot.sib.dur.hrs total duration sustained inactivity bouts fraction.night.invalid fraction night     accelerometer data invalid, e.g. monitor worn sib.period number sustained inactivity period sib.onset.time onset time sustained inactivity period sib.end.time end time sustained inactivity period","code":""},{"path":"/reference/g.part3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part3.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"van Hees VT, Sabia S, et al. (2015) novel, open access method     assess sleep duration using wrist-worn accelerometer, PLoS ONE, November 2015 van Hees VT, Sabia S, et al. (2018) Estimating sleep parameters     using accelerometer without sleep diary. Scientific Reports.","code":""},{"path":"/reference/g.part3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detection of sustained inactivity periods as needed for sleep detection\r\n  in g.part4. — g.part3","text":"","code":"if (FALSE) {     metadatadir = \"C:/myfolder/meta\" # assumes that there is a subfolder in     # metadatadir named 'basic' containing the output from g.part1     g.part3(metadatadir=metadatadir, anglethreshold=5,     timethreshold=5, overwrite=FALSE)   }"},{"path":"/reference/g.part4.html","id":null,"dir":"Reference","previous_headings":"","what":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"Combines output g.part3 guider information estimate   sleep variables. See vignette paragraph \"Sleep full day   time-use analysis GGIR\" elaborate descript sleep detection.","code":""},{"path":"/reference/g.part4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"","code":"g.part4(datadir = c(), metadatadir = c(), f0 = f0, f1 = f1, params_sleep = c(),      params_metrics = c(),  params_cleaning = c(), params_output = c(),                    params_general = c(), verbose = TRUE, ...)"},{"path":"/reference/g.part4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"datadir Directory accelerometer files stored, e.g.      \"C:/mydata\", list accelerometer filenames directories, e.g.      c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) params_sleep List parameters used sleep analysis (GGIR part 3, 4, 5):      see documentation g.part3. params_metrics List parameters used metrics extraction (GGIR part 1):      see documentation g.part1. params_cleaning See details GGIR. params_output See details GGIR. params_general See details GGIR. verbose See details GGIR. ... ensure compatibility R scripts written older GGIR versions,     user can also provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"function produce values generates RData file   milestone subfolder ms4.incudes dataframe   named nightsummary. dataframe used g.report.part4 create   two reports one per night one per person. See package vignette    paragraph \"Output part 4\" description variables.","code":""},{"path":"/reference/g.part4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part4.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"van Hees VT, Sabia S, et al. (2018) AEstimating sleep parameters     using accelerometer without sleep diary, Scientific Reports. van Hees VT, Sabia S, et al. (2015) novel, open access method     assess sleep duration using wrist-worn accelerometer, PLoS ONE.","code":""},{"path":"/reference/g.part4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labels detected sustained inactivity periods by g.part3 as either\r\n  part of the Sleep Period Time window or not — g.part4","text":"","code":"if (FALSE) {     metadatadir = \"C:/myfolder/meta\" # assumes that there is a subfolder in     # metadatadir named 'ms3.out' containing the output from g.part3     g.part4(metadatadir=metadatadir)   }"},{"path":"/reference/g.part4_extradctid.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","title":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","text":"Extracts ID filename finds matching rows sleeplog. Function   designed direct use GGIR users.","code":""},{"path":"/reference/g.part4_extradctid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","text":"","code":"g.part4_extractid(idloc, fname, dolog, sleeplog, accid = c())"},{"path":"/reference/g.part4_extradctid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","text":"idloc See g.part4 fname Full patth filename dolog Boolean indicate whether rely sleeplog sleeplog Sleeplog data.frame passed g.part4 accid ID extracted acceleration file GGIR part3. available leave blank.","code":""},{"path":"/reference/g.part4_extradctid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","text":"List accid ID matching_indices_sleeplog vector matching row  indices sleeplog","code":""},{"path":"/reference/g.part4_extradctid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extracts ID from filename and finds matching rows in sleeplog — g.part4_extractid","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.addfirstwake.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","title":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","text":"intended direct use GGIR users.   Adds first wake missing part 4 output   part g.part5.","code":""},{"path":"/reference/g.part5.addfirstwake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","text":"","code":"g.part5.addfirstwake(ts, summarysleep, nightsi, sleeplog,   ID, Nepochsinhour, SPTE_end)"},{"path":"/reference/g.part5.addfirstwake.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","text":"ts Data.frame object passed g.part5 summarysleep Data.frame object passed g.part5     sleep summary information g.part4. nightsi Vector indices nights sleeplog Data.frame sleeplog information ID Participant ID Nepochsinhour Number epochs hour SPTE_end Sleep period time end index","code":""},{"path":"/reference/g.part5.addfirstwake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","text":"Data.frame ts updated first wakeup time","code":""},{"path":"/reference/g.part5.addfirstwake.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds first wake if it is missing in part 4 output. — g.part5.addfirstwake","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.addsib.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","title":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","text":"intended direct use GGIR users.   Adds sustained inactivity bout ts series   part g.part5.","code":""},{"path":"/reference/g.part5.addsib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","text":"","code":"g.part5.addsib(ts, epochSize, part3_output, desiredtz,               sibDefinition, nightsi)"},{"path":"/reference/g.part5.addsib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","text":"ts Data.frame object passed g.part5 epochSize Short epoch size seconds part3_output Segment part 3 output relevant current sleep definition desiredtz see GGIR sibDefinition Character indicate definition sib (sustained inactivity bout) nightsi Vector indices midnights","code":""},{"path":"/reference/g.part5.addsib.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","text":"Data.frame ts","code":""},{"path":"/reference/g.part5.addsib.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Adds the sustained inactivity bout to the ts series. — g.part5.addsib","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.analyseRest.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyse rest (internal function) — g.part5.analyseRest","title":"Analyse rest (internal function) — g.part5.analyseRest","text":"Analyses overlap self-reported napping, non-wear sib.   Internal function intended direct use GGIR end-user.","code":""},{"path":"/reference/g.part5.analyseRest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyse rest (internal function) — g.part5.analyseRest","text":"","code":"g.part5.analyseRest(sibreport = NULL, dsummary = NULL,                                 ds_names = NULL, fi = NULL,                                 di = NULL, time = NULL, tz = NULL,                                 possible_nap_dur = 0,                                 possible_nap_edge_acc = Inf)"},{"path":"/reference/g.part5.analyseRest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyse rest (internal function) — g.part5.analyseRest","text":"sibreport sibreport data.frame produced g.sibreport dsummary matrix created internally g.part5 ds_names character vector variable names corresponding dsummary     created internally g.part5 fi Numeric scalar indicate variable index, created internally g.part5 di Numeric scalar indicate recording index, created internally g.part5 time Daytime section time column ts object, created internally g.part5, tz Timezone database name possible_nap_dur Minimum sib duration considered. self-reported naps/nonwear     minimum duration 1 epoch. possible_nap_edge_acc Maximum acceleration SIB considered.","code":""},{"path":"/reference/g.part5.analyseRest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyse rest (internal function) — g.part5.analyseRest","text":"List updated objects dsummary, ds_names, fi, di","code":""},{"path":"/reference/g.part5.analyseRest.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analyse rest (internal function) — g.part5.analyseRest","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.classifyNaps.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","title":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","text":"Classify Naps identified sustained inactivty bouts, based model   originally trained hip-worn accelerometer data 3-3.5 year olds.   Assume metric ENMO used HASIB.algo set vanHees2015.","code":""},{"path":"/reference/g.part5.classifyNaps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","text":"","code":"g.part5.classifyNaps(sibreport = c(), desiredtz = \"\",          possible_nap_window = c(9, 18),         possible_nap_dur = c(15, 240),         nap_model = \"hip3yr\", HASIB.algo = \"vanHees2015\")"},{"path":"/reference/g.part5.classifyNaps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","text":"sibreport Object generated g.sibreport desiredtz See g.getmeta. possible_nap_window Numeric vector length two range clock hours naps     assumed take place. possible_nap_dur Numeric vector length two range duration (minutes) nap. nap_model Character specify classification model. Currently option \"hip3yr\",     corresponds model trained hip data 3-3.5 olds trained parent diary data. HASIB.algo See g.part3.","code":""},{"path":"/reference/g.part5.classifyNaps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","text":"Data.frame classified naps newly detected non-wear periods.","code":""},{"path":"/reference/g.part5.classifyNaps.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classify Naps from identified sustained inactivty bouts — g.part5.classifyNaps","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.definedays.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix missing night in part 4 output — g.part5.definedays","title":"Fix missing night in part 4 output — g.part5.definedays","text":"intended direct use GGIR users.   Defines day windows start end part g.part5.","code":""},{"path":"/reference/g.part5.definedays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix missing night in part 4 output — g.part5.definedays","text":"","code":"g.part5.definedays(nightsi, wi, indjump, nightsi_bu,                       epochSize, qqq_backup = c(), ts,                      timewindowi, Nwindows, qwindow, ID = NULL)"},{"path":"/reference/g.part5.definedays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix missing night in part 4 output — g.part5.definedays","text":"nightsi Vector indices midnights wi Numeric indicate window number indjump Number indices jump nightsi_bu See argument nightsi backup object epochSize Numeric epoch size seconds qqq_backup Backup qqq object, holds start end indices window ts Data.frame time series timewindowi Timewindow definition either \"MM\" \"WW\" Nwindows Number windows data qwindow qwindow argument ID ID participant","code":""},{"path":"/reference/g.part5.definedays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix missing night in part 4 output — g.part5.definedays","text":"List qqq qqq_backup","code":""},{"path":"/reference/g.part5.definedays.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix missing night in part 4 output — g.part5.definedays","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.fixmissingnight.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix missing night in part 4 output — g.part5.fixmissingnight","title":"Fix missing night in part 4 output — g.part5.fixmissingnight","text":"intended direct use GGIR users.   night missing part4 output function   tries fix part g.part5.","code":""},{"path":"/reference/g.part5.fixmissingnight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix missing night in part 4 output — g.part5.fixmissingnight","text":"","code":"g.part5.fixmissingnight(summarysleep, sleeplog = c(), ID)"},{"path":"/reference/g.part5.fixmissingnight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix missing night in part 4 output — g.part5.fixmissingnight","text":"summarysleep Object produced g.part4 sleeplog Sleeplog object passed g.part5 ID ID participant","code":""},{"path":"/reference/g.part5.fixmissingnight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix missing night in part 4 output — g.part5.fixmissingnight","text":"Corrected summarysleep_tmp2 object.","code":""},{"path":"/reference/g.part5.fixmissingnight.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix missing night in part 4 output — g.part5.fixmissingnight","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.handle_lux_extremes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","title":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","text":"Extreme values imputed mean neightbours occur isolated   sequence two, removed occure sequence 3 longer.","code":""},{"path":"/reference/g.part5.handle_lux_extremes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","text":"","code":"g.part5.handle_lux_extremes(lux)"},{"path":"/reference/g.part5.handle_lux_extremes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","text":"lux Vector lux values","code":""},{"path":"/reference/g.part5.handle_lux_extremes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","text":"List imputed lux values vector matching length named   correction_log indicating timestamps imputed (value=1),   replaced NA (value=2) untouched (value=0).","code":""},{"path":"/reference/g.part5.handle_lux_extremes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check lux values for extremes and imputes or removes them — g.part5.handle_lux_extremes","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge output from physical activity and sleep analysis into one report — g.part5","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"Function merge output g.part2 g.part4 one report enhanced   profiling sleep physical activity stratified across intensity levels   based bouted periods well non-bouted periods.","code":""},{"path":"/reference/g.part5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"","code":"g.part5(datadir = c(), metadatadir = c(), f0 = c(), f1 = c(),                    params_sleep = c(), params_metrics = c(),                    params_247 = c(), params_phyact = c(),                     params_cleaning = c(), params_output = c(),                    params_general = c(), verbose = TRUE, ...)"},{"path":"/reference/g.part5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"datadir Directory accelerometer files stored, e.g.      \"C:/mydata\", list accelerometer filenames directories, e.g.      c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) params_sleep See details GGIR. params_metrics See details GGIR. params_247 See details GGIR. params_phyact See details GGIR. params_cleaning See details GGIR. params_output See details GGIR. params_general See details GGIR. verbose See details GGIR. ... ensure compatibility R scripts written older GGIR versions,     user can also provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"function produce values generates RData file   milestone subfolder ms5.incudes dataframe   named output. dataframe used g.report.part5 create   two reports one per day one per person. See package vignette   paragraph \"Output part 5\" description variables.","code":""},{"path":"/reference/g.part5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge output from physical activity and sleep analysis into one report — g.part5","text":"","code":"if (FALSE) {     metadatadir = \"C:/myfolder/meta\"     g.part5(metadatadir=metadatadir)   }"},{"path":"/reference/g.part5.lux_persegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","title":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","text":"Extracts per segment day: mean lux, time 1000 lux, time awake,   time LUX imputed. Function intended   direct use package user.","code":""},{"path":"/reference/g.part5.lux_persegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","text":"","code":"g.part5.lux_persegment(ts, sse, LUX_day_segments, epochSize, desiredtz = \"\")"},{"path":"/reference/g.part5.lux_persegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","text":"ts Data.frame time series sse Indices corresponding current time window (e.g. MM WW) LUX_day_segments See GGIR epochSize Numeric epoch size seconds desiredtz See GGIR","code":""},{"path":"/reference/g.part5.lux_persegment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","text":"List values (vector) derived variables corresponding names (vector).","code":""},{"path":"/reference/g.part5.lux_persegment.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract key lux variables per segment of the data. — g.part5.lux_persegment","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.ontsetwaketiming.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","title":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","text":"intended direct use GGIR users.   Labels timing wakeing sleep onset part g.part5.","code":""},{"path":"/reference/g.part5.ontsetwaketiming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","text":"","code":"g.part5.onsetwaketiming(qqq, ts, min, sec, hour, timewindowi)"},{"path":"/reference/g.part5.ontsetwaketiming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","text":"qqq Start end index window analyses ts Data.frame time series created g.part5 min Numeric vector minute values sec Numeric vector second values hour Numeric vector hour values timewindowi Character indicate timewindow definition used either \"MM\" \"WW\"","code":""},{"path":"/reference/g.part5.ontsetwaketiming.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","text":"list objects: wake, onset, wakei, onseti, skiponset, skipwake.","code":""},{"path":"/reference/g.part5.ontsetwaketiming.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify wake and sleepperiod window timing — g.part5.onsetwaketiming","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.savetimeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Saves oart 5 time series to csv files — g.part5.savetimeseries","title":"Saves oart 5 time series to csv files — g.part5.savetimeseries","text":"intended direct use GGIR users.   Saves oart 5 time series csv files part g.part5.","code":""},{"path":"/reference/g.part5.savetimeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saves oart 5 time series to csv files — g.part5.savetimeseries","text":"","code":"g.part5.savetimeseries(ts, LEVELS, desiredtz, rawlevels_fname,                               save_ms5raw_format = \"csv\",                               save_ms5raw_without_invalid = TRUE,                               DaCleanFile = NULL,                               includedaycrit.part5 = 2/3,                               ID = NULL, sep_reports = \",\",                               params_247 = NULL)"},{"path":"/reference/g.part5.savetimeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saves oart 5 time series to csv files — g.part5.savetimeseries","text":"ts Data.frame time series LEVELS produced one objects output identify_levels desiredtz See GGIR. rawlevels_fname Path file output stored save_ms5raw_format See g.part5 save_ms5raw_without_invalid See g.part5 DaCleanFile Content data_cleaning_file documented g.report.part5.     used function save_ms5rawlevels TRUE,       affects time      series files stored. includedaycrit.part5 See g.report.part5. used function     save_ms5rawlevels TRUE,  affects time      series files stored. ID data_cleaning_file used argument specifies     participant ID data correspond . sep_reports Character (default = \",\"). Value used sep argument write.csv     writing csv files GGIR reports. params_247 See GGIR","code":""},{"path":"/reference/g.part5.savetimeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Saves oart 5 time series to csv files — g.part5.savetimeseries","text":"Function provide output, prepare data saving   saves file.","code":""},{"path":"/reference/g.part5.savetimeseries.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Saves oart 5 time series to csv files — g.part5.savetimeseries","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5.wakesleepwindows.html","id":null,"dir":"Reference","previous_headings":"","what":"Label wake and sleepperiod window — g.part5.wakesleepwindows","title":"Label wake and sleepperiod window — g.part5.wakesleepwindows","text":"intended direct use GGIR users.   Label wake sleepperiod window part g.part5.","code":""},{"path":"/reference/g.part5.wakesleepwindows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label wake and sleepperiod window — g.part5.wakesleepwindows","text":"","code":"g.part5.wakesleepwindows(ts, part4_output, desiredtz,                     nightsi, sleeplog, epochSize,ID, Nepochsinhour)"},{"path":"/reference/g.part5.wakesleepwindows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label wake and sleepperiod window — g.part5.wakesleepwindows","text":"ts data.frame time series part4_output cleaned output part 4 desiredtz GGIR nightsi vector indices midnights sleeplog Data.frame sleeplog information loaded g.loadlog epochSize Short epochsize seconds ID ID participant Nepochsinhour Number epochs hour","code":""},{"path":"/reference/g.part5.wakesleepwindows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label wake and sleepperiod window — g.part5.wakesleepwindows","text":"Object ts","code":""},{"path":"/reference/g.part5.wakesleepwindows.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Label wake and sleepperiod window — g.part5.wakesleepwindows","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part5_analyseSegment.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyses the time series per time segment for part 5 — g.part5_analyseSegment","title":"Analyses the time series per time segment for part 5 — g.part5_analyseSegment","text":"intended direct use GGIR users, part g.part5.","code":""},{"path":"/reference/g.part5_analyseSegment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyses the time series per time segment for part 5 — g.part5_analyseSegment","text":"","code":"g.part5_analyseSegment(indexlog, timeList, levelList,                                   segments,                                   segments_names,                                   dsummary, ds_names,                                   params_general, params_output,                                   params_sleep, params_247,                                   params_phyact,                                   sumSleep, sibDef,                                   fullFilename,                                   add_one_day_to_next_date,                                   lightpeak_available,                                   tail_expansion_log,                                   foldernamei, sibreport = NULL)"},{"path":"/reference/g.part5_analyseSegment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyses the time series per time segment for part 5 — g.part5_analyseSegment","text":"indexlog List objects related indices window, file, segment     passed g.part5 aid selecting time segments keeping track     file code . timeList List objects related time series passed g.part5. levelList List objects related intensity levels passed g.part5. segments List produced g.part5 segments_names Vector produced g.part5 dsummary Matrix hold daysummary (segment summary) ds_names Character vector column names dsummary matrix. code collects     separately vector assigns end. params_general See GGIR params_output See GGIR params_sleep See GGIR params_247 See GGIR params_phyact See GGIR sumSleep Section data.frame produced g.part4 passed g.part5. sibDef Character identify sib definition. fullFilename Character full filename processed add_one_day_to_next_date Boolean indicate whether one day added next date lightpeak_available Boolean indicate whether light peak available tail_expansion_log Object generated g.part1 passed g.part5      argument recordingEndSleepHour used. foldernamei Character folder name data file stored. sibreport Sibreport object passed g.part5","code":""},{"path":"/reference/g.part5_analyseSegment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyses the time series per time segment for part 5 — g.part5_analyseSegment","text":"List objects: indexlog, timeList, matrix prelimenary results   column names (dsummary ds_names, see input arguments )","code":""},{"path":"/reference/g.part5_initialise_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise time series data from for part 5 — g.part5_initialise_ts","title":"Initialise time series data from for part 5 — g.part5_initialise_ts","text":"Initialise time series dataframe ts, part g.part5.","code":""},{"path":"/reference/g.part5_initialise_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise time series data from for part 5 — g.part5_initialise_ts","text":"","code":"g.part5_initialise_ts(IMP, M, params_247, params_general)"},{"path":"/reference/g.part5_initialise_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise time series data from for part 5 — g.part5_initialise_ts","text":"IMP Object derived g.part2 M Object derived g.part1. params_247 See GGIR params_general See GGIR","code":""},{"path":"/reference/g.part5_initialise_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialise time series data from for part 5 — g.part5_initialise_ts","text":"Data.frame ts","code":""},{"path":"/reference/g.part6.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform temporal pattern analyses — g.part6","title":"Perform temporal pattern analyses — g.part6","text":"function aims facilitate time-pattern analysis building labelled time   series derived GGIR part 5","code":""},{"path":"/reference/g.part6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform temporal pattern analyses — g.part6","text":"","code":"g.part6(datadir = c(), metadatadir = c(), f0 = c(), f1 = c(),                    params_general = c(), params_phyact = c(), params_247 = c(),                    verbose = TRUE, ...)"},{"path":"/reference/g.part6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform temporal pattern analyses — g.part6","text":"datadir Directory accelerometer files stored, e.g.      \"C:/mydata\", list accelerometer filenames directories, e.g.      c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) params_general See details GGIR. params_phyact See details GGIR. params_247 See details GGIR. verbose See details GGIR. ... ensure compatibility R scripts written older GGIR versions,     user can also provide parameters listed params_ objects direct argument.","code":""},{"path":"/reference/g.part6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform temporal pattern analyses — g.part6","text":"function produce values generates RData file   milestone subfolder ms6.incudes ... (COMPLETED).   dataframe used g.report.part6 create   reports. See package vignette   paragraph (COMPLETED) description variables.","code":""},{"path":"/reference/g.part6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform temporal pattern analyses — g.part6","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.part6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform temporal pattern analyses — g.part6","text":"","code":"if (FALSE) {     metadatadir = \"C:/myfolder/meta\"     g.part6(metadatadir=metadatadir)   }"},{"path":"/reference/g.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"function to generate a plot for quality check purposes — g.plot","title":"function to generate a plot for quality check purposes — g.plot","text":"Function takes meta-data generated g.getmeta g.impute create visual representation imputed time periods","code":""},{"path":"/reference/g.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"function to generate a plot for quality check purposes — g.plot","text":"","code":"g.plot(IMP, M, I, durplot)"},{"path":"/reference/g.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"function to generate a plot for quality check purposes — g.plot","text":"IMP output g.impute M output g.getmeta output g.inspectfile durplot number days plot","code":""},{"path":"/reference/g.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"function to generate a plot for quality check purposes — g.plot","text":"function produces plot, values","code":""},{"path":"/reference/g.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"function to generate a plot for quality check purposes — g.plot","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"function to generate a plot for quality check purposes — g.plot","text":"","code":"if (FALSE) {   #inspect file:   I = g.inspectfile(datafile)      #autocalibration:   C = g.calibrate(datafile)       #get meta-data:   M = g.getmeta(datafile) } data(data.getmeta) data(data.inspectfile)  #impute meta-data: IMP = g.impute(M = data.getmeta, I = data.inspectfile, strategy = 1, hrs.del.start = 0, hrs.del.end = 0, maxdur = 0)  #plot data g.plot(IMP, M = data.getmeta, I = data.inspectfile, durplot=4)"},{"path":"/reference/g.plot5.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"Function called GGIR generate report. intended   direct use user","code":""},{"path":"/reference/g.plot5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"","code":"g.plot5(metadatadir = c(), dofirstpage = FALSE, viewingwindow = 1,   f0 = c(), f1 = c(), overwrite = FALSE, metric=\"ENMO\",desiredtz = \"\",   threshold.lig = 30, threshold.mod = 100, threshold.vig = 400,    visualreport_without_invalid = TRUE, includedaycrit = 0.66, includenightcrit = 0.66,   verbose = TRUE)"},{"path":"/reference/g.plot5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . dofirstpage Boolean indicate whether first page historgrams summarizing whole     measurement added viewingwindow See GGIR f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) overwrite See GGIR metric one metrics want consider describe behaviour.     metric interest need calculated M (see g.part1) desiredtz See GGIR threshold.lig See GGIR threshold.mod See GGIR threshold.vig See GGIR visualreport_without_invalid See GGIR includenightcrit See GGIR includedaycrit See GGIR verbose See GGIR","code":""},{"path":"/reference/g.plot5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"values, function generates plot","code":""},{"path":"/reference/g.plot5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"Vincent T van Hees <v.vanhees@accelting.com>   Matthew R Patterson <mpatterson@shimmersensing.com>","code":""},{"path":"/reference/g.plot5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate user-friendly visual report. The first part of the report summarizes important daily metrics in bar plot format.\r\n  The second part of the report shows the raw data and annotations in 24-hr periods.\r\n  Angle-z is shown with sleep annotations during the SPT (sleep period time) window.\r\n  ENMO is shown with daytime inactivity and PA (physical activity) annotations in the lower\r\n  section of each 24-hr plot. The PA annotations are based on a 10 minute bout metric and\r\n  80\r\n  of a 10 minute bout of MVPA. Vigorous PA is a short window of time above threshold.vig that\r\n  is part of a bout of MVPA. Light PA is a short window of time above threshold.lig that is\r\n  part of a bout of light PA. — g.plot5","text":"","code":"if (FALSE) {     # generate plots for the first 10 files:     g.plot5(metadatadir=\"C:/output_mystudy/meta/basic\",dofirstpage=TRUE,     viewingwindow = 1,f0=1,f1=10,overwrite=FALSE,desiredtz = \"Europe/London\",     threshold.lig,threshold.mod,threshold.vig)   }"},{"path":"/reference/g.readaccfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"function used g.getmeta g.calibrate   read large blocks accelerometer file, processed   deleted memory. needed memory management.","code":""},{"path":"/reference/g.readaccfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"","code":"g.readaccfile(filename, blocksize, blocknumber, filequality,                            ws, PreviousEndPage = 1, inspectfileobject = c(),                            PreviousLastValue = c(0,0,1), PreviousLastTime = NULL,                            params_rawdata = c(), params_general = c(), ...)"},{"path":"/reference/g.readaccfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"filename filename blocksize Size blocks (file pages) read blocknumber Block number relative start file filequality Single row dataframe columns: filetooshort, filecorrupt,     filedoesnotholdday. value TRUE FALSE ws Larger windowsize non-detection, see documentation g.part2 PreviousEndPage Page number previous block ended (automatically assigned within     g.getmeta g.calibrate). inspectfileobject Output function g.inspectfile. PreviousLastValue Automatically identified last value previous chunk data read. PreviousLastTime Automatically identified last timestamp previous chunk data read. params_rawdata See g.part1 params_general See g.part1 ... input arguments needed function read.myacc.csv     working non-standard csv formatted files. Furter,     argument used previous version g.readaccfile, now     used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.readaccfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"P Block object extracted file format specific     accelerometer brand filequality function arguments switchoffLD Boolean indicate whether worth     continueing read next block data endpage Page number blocked ends,     used input argument PreviousEndPage reading next block.","code":""},{"path":"/reference/g.readaccfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.readaccfile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic functiont to read large blocks of accelerometer data — g.readaccfile","text":"","code":"if (FALSE) {     filequality = data.frame(filetooshort = FALSE, filecorrupt = FALSE,     filedoesnotholdday = FALSE)     output = g.readaccfile(filename = \"C:/myfile.bin\",      blocksize = 20000, blocknumber = 1,     selectdaysfile = c(), filequality = filequality,     dayborder = 0, PreviousEndPage = c())    }"},{"path":"/reference/g.readtemp_movisens.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the temperature from movisens files. — g.readtemp_movisens","title":"Reads the temperature from movisens files. — g.readtemp_movisens","text":"Reads temperature movisens files, resamples adds    matrix accelerations stored","code":""},{"path":"/reference/g.readtemp_movisens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the temperature from movisens files. — g.readtemp_movisens","text":"","code":"g.readtemp_movisens(datafile, desiredtz = \"\", from = c(), to = c(),   interpolationType=1)"},{"path":"/reference/g.readtemp_movisens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the temperature from movisens files. — g.readtemp_movisens","text":"datafile Full path folder movisens bin files stored. Note      movisens store set bin file one folder per recording. GGIR read      pertinent bin file access temperature data. desiredtz See g.getmeta Origin point derive temperature movisens files (automatically      calculated GGIR) End point derive temperature movisens files (automatically      calculated GGIR) interpolationType Integer indicate type interpolation used resampling time series (mainly relevant Axivity sensors), 1=linear, 2=nearest neighbour.","code":""},{"path":"/reference/g.readtemp_movisens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the temperature from movisens files. — g.readtemp_movisens","text":"Data matrix temperature values resampled 64 Hz.","code":""},{"path":"/reference/g.readtemp_movisens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads the temperature from movisens files. — g.readtemp_movisens","text":"","code":"if (FALSE) {   P = g.readtemp_movisens(datafile, desiredtz = \"\", from = c(), to = c()) }"},{"path":"/reference/g.report.part2.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report from milestone data produced by g.part2 — g.report.part2","title":"Generate report from milestone data produced by g.part2 — g.report.part2","text":"Creates report milestone data produced g.part2. intended     direct use package user","code":""},{"path":"/reference/g.report.part2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report from milestone data produced by g.part2 — g.report.part2","text":"","code":"g.report.part2(metadatadir = c(), f0 = c(), f1 = c(), maxdur = 0,   selectdaysfile = c(), store.long = FALSE, do.part2.pdf = TRUE,    sep_reports = \",\", verbose = TRUE)"},{"path":"/reference/g.report.part2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report from milestone data produced by g.part2 — g.report.part2","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) maxdur see g.part2 selectdaysfile see g.part2 store.long Booelean indicate whether output stored long     format addition default wide format. Automatically turned     TRUE using day segmentation qwindow. .part2.pdf Boolean, see g.part2 sep_reports Character (default = \",\"). Value used sep argument write.csv writing csv files containing GGIR reports. verbose See details GGIR.","code":""},{"path":"/reference/g.report.part2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate report from milestone data produced by g.part2 — g.report.part2","text":"Function produce data, writes reports csv format visual reports pdf format","code":""},{"path":"/reference/g.report.part2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate report from milestone data produced by g.part2 — g.report.part2","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.report.part4.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report from milestone data produced by g.part4 — g.report.part4","title":"Generate report from milestone data produced by g.part4 — g.report.part4","text":"Creates report milestone data produced g.part4. intended   direct use package user","code":""},{"path":"/reference/g.report.part4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report from milestone data produced by g.part4 — g.report.part4","text":"","code":"g.report.part4(datadir = c(), metadatadir = c(), loglocation = c(), f0 = c(),   f1 = c(), storefolderstructure = TRUE, data_cleaning_file = c(),   sleepwindowType = \"SPT\", verbose = TRUE, sep_reports = \",\")"},{"path":"/reference/g.report.part4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report from milestone data produced by g.part4 — g.report.part4","text":"datadir Directory accelerometer files stored, e.g.      \"C:/mydata\", list accelerometer filenames directories, e.g.      c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . loglocation see g.part4 f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) storefolderstructure see g.part4 data_cleaning_file see g.part4 sleepwindowType see g.part4 verbose See details GGIR. sep_reports Character (default = \",\"). Value used sep argument write.csv writing csv files containing GGIR reports.","code":""},{"path":"/reference/g.report.part4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate report from milestone data produced by g.part4 — g.report.part4","text":"Function produce data, writes reports   csv format visual report pdf. following files stored root results folder:   part4_nightsummary_sleep_cleaned.csv   part4_summary_sleep_cleaned.csv following files stored folder results/QC:   part4_nightsummary_sleep_full.csv   part4_summary_sleep_full.csv sleeplog used *_full.csv stored QC folder includes estimates    nights data, *_cleaned.csv results folder includes   estimates nights data excluding nights   sleeplog entry valid accelerometer data. sleep log used * _cleaned.csv includes nights   *_full.csv excluding nights insufficient data. study sleeplog available subset   participants, want include individuals analysis,    use *_full.csv output clean night level data   excluding  rows cleaningcode > 1 cases   invalid accelerometer data present. means studies missing sleeplog entries   individuals nights using *_full.csv output excluding   rows (nights) cleaningcode > 1 lead   * _cleaned.csv plus sleep estimates nights missing   sleeplog, providing enough accelerometer data    nights. words, *_cleaned.csv perfect want rely    nights sleeplog use sleeplog .   scenarios advise using *_full.csv report clean    . See package vignette sections \"Sleep analysis\" \"Output part 4\"   elaborative description sleep analysis reporting.","code":""},{"path":"/reference/g.report.part4.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate report from milestone data produced by g.part4 — g.report.part4","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.report.part5.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report from milestone data produced by g.part5 — g.report.part5","title":"Generate report from milestone data produced by g.part5 — g.report.part5","text":"Creates report milestone data produced g.part5. intended   direct use package user","code":""},{"path":"/reference/g.report.part5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report from milestone data produced by g.part5 — g.report.part5","text":"","code":"g.report.part5(metadatadir = c(), f0 = c(), f1 = c(), loglocation = c(),                           params_cleaning = NULL,                           week_weekend_aggregate.part5 = FALSE,                           LUX_day_segments = c(),                            verbose = TRUE, sep_reports = \",\")"},{"path":"/reference/g.report.part5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report from milestone data produced by g.part5 — g.report.part5","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) loglocation see g.part4 params_cleaning See details GGIR. week_weekend_aggregate.part5 Boolean indicate whether week weekend-days aggregates    stored. turned default generates     large number extra columns output report. LUX_day_segments see g.part5 verbose See details GGIR. sep_reports Character (default = \",\"). Value used sep argument write.csv writing csv files containing GGIR reports.","code":""},{"path":"/reference/g.report.part5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate report from milestone data produced by g.part5 — g.report.part5","text":"Function produce data, writes reports   csv format following files stored root results folder:   part5_daysummary_*   part5_personsummary_* following files stored folder results/QC:   part5_daysummary_full_* See package vignette paragraph \"Waking-waking 24 hour time-use analysis\"   \"Output part 5\" elaborative description   full day time-use analysis reporting.","code":""},{"path":"/reference/g.report.part5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate report from milestone data produced by g.part5 — g.report.part5","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.report.part5_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","title":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","text":"Creates data dictionary definitions outcomes exported   reports milestone data produced g.part5. intended   direct use package user.","code":""},{"path":"/reference/g.report.part5_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","text":"","code":"g.report.part5_dictionary(metadatadir, sep_reports = \",\")"},{"path":"/reference/g.report.part5_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . sep_reports Character (default = \",\").     Value used sep argument write.csv writing      csv files containing GGIR reports.","code":""},{"path":"/reference/g.report.part5_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","text":"Function produce data, writes data dictionaries   reports csv format following files stored root results folder:   part5_dictionary_daysummary_*   part5_dictionary_personsummary_*","code":""},{"path":"/reference/g.report.part5_dictionary.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate data dictionary for reports from milestone data produced by g.part5 — g.report.part5_dictionary","text":"Vincent T van Hees <v.vanhees@accelting.com>   Jairo Hidalgo Migueles <jairo@jhmigueles.com>","code":""},{"path":"/reference/g.report.part6.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate report from milestone data produced by g.part6 — g.report.part6","title":"Generate report from milestone data produced by g.part6 — g.report.part6","text":"Creates report milestone data produced g.part6. intended   direct use package user","code":""},{"path":"/reference/g.report.part6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate report from milestone data produced by g.part6 — g.report.part6","text":"","code":"g.report.part6(metadatadir = c(), f0 = c(), f1 = c(),                           params_cleaning = NULL,                           verbose = TRUE, sep_reports = \",\")"},{"path":"/reference/g.report.part6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate report from milestone data produced by g.part6 — g.report.part6","text":"metadatadir Directory holds folder 'meta' inside folder 'basic'     contains milestone data produced g.part1. folderstructure     normally created g.part1 GGIR recognise     value metadatadir . f0 File index start (default = 1). Index refers filenames sorted     alphabetical order f1 File index finish (defaults number files available, .e., f1 = 0) params_cleaning See details GGIR. verbose See details GGIR. sep_reports Character (default = \",\"). Value used sep argument write.csv writing csv files containing GGIR reports.","code":""},{"path":"/reference/g.report.part6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate report from milestone data produced by g.part6 — g.report.part6","text":"Function produce data, writes reports   csv format following files stored root results folder:   part6_summary.csv See package vignette \"HouseHoldCoanalysis\".","code":""},{"path":"/reference/g.report.part6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate report from milestone data produced by g.part6 — g.report.part6","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.shell.GGIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper function around function GGIR — g.shell.GGIR","title":"Wrapper function around function GGIR — g.shell.GGIR","text":"function used central function package,   renamed GGIR. can still use function call g.shell.GGIR   arguments passed function GGIR. done preserve   consistency older use cases GGIR package. documentation can   now found GGIR.","code":""},{"path":"/reference/g.shell.GGIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper function around function GGIR — g.shell.GGIR","text":"","code":"g.shell.GGIR(...)"},{"path":"/reference/g.shell.GGIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper function around function GGIR — g.shell.GGIR","text":"... parameters used GGIR.","code":""},{"path":"/reference/g.shell.GGIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper function around function GGIR — g.shell.GGIR","text":"function provides values, ensures functions called   output stored. See GGIR.","code":""},{"path":"/reference/g.shell.GGIR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Wrapper function around function GGIR — g.shell.GGIR","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.sib.det.html","id":null,"dir":"Reference","previous_headings":"","what":"sustiained inactivty bouts detection — g.sib.det","title":"sustiained inactivty bouts detection — g.sib.det","text":"Detects sustiained inactivty bouts. Function intended   direct use package user","code":""},{"path":"/reference/g.sib.det.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sustiained inactivty bouts detection — g.sib.det","text":"","code":"g.sib.det(M, IMP, I, twd = c(-12, 12),              acc.metric = \"ENMO\", desiredtz = \"\",              myfun=c(), sensor.location = \"wrist\", params_sleep = c(), zc.scale = 1, ...)"},{"path":"/reference/g.sib.det.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sustiained inactivty bouts detection — g.sib.det","text":"M Object produced g.getmeta IMP Object produced g.impute Object produced g.inspectfile twd Vector length 2, indicating time window consider     hours relative midnight. acc.metric one metrics want consider analyze L5.      metric interest need calculated     M (see g.part1) desiredtz See g.part3 myfun External function object applied raw data.     See details applyExtFunction. sensor.location Character indicate sensor location, default wrist.     hip HDCZA algorithm also requires longitudinal axis sensor     -45 +45 degrees. params_sleep See g.part3 zc.scale Used zero-crossing counts . Scaling factor applied     counts calculated (GGIR part 3). See GGIR. ... argument used previous version g.sib.det, now      used overrule arguments specified parameter objects.","code":""},{"path":"/reference/g.sib.det.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sustiained inactivty bouts detection — g.sib.det","text":"output = Dataframe every epoch classification detection.failed = Boolean whether detection failed L5list = L5 every day (defined noon noon)","code":""},{"path":"/reference/g.sib.det.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sustiained inactivty bouts detection — g.sib.det","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.sib.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot of sustained inactivity bouts — g.sib.plot","title":"Create plot of sustained inactivity bouts — g.sib.plot","text":"Function create plot sustained inactivity bouts quality   check purposes part g.part3. intended direct use package user","code":""},{"path":"/reference/g.sib.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot of sustained inactivity bouts — g.sib.plot","text":"","code":"g.sib.plot(SLE, M, I, plottitle, nightsperpage=7, desiredtz=\"\")"},{"path":"/reference/g.sib.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot of sustained inactivity bouts — g.sib.plot","text":"SLE Output g.sib.det M Output g.getmeta Output g.inspectfile plottitle Title used plot nightsperpage Number nights show per page desiredtz See g.part3","code":""},{"path":"/reference/g.sib.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create plot of sustained inactivity bouts — g.sib.plot","text":"Function output plot","code":""},{"path":"/reference/g.sib.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot of sustained inactivity bouts — g.sib.plot","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.sib.sum.html","id":null,"dir":"Reference","previous_headings":"","what":"sustiained inactivty bouts detection — g.sib.sum","title":"sustiained inactivty bouts detection — g.sib.sum","text":"Detects sustiained inactivty bouts. Function intended   direct use package user","code":""},{"path":"/reference/g.sib.sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"sustiained inactivty bouts detection — g.sib.sum","text":"","code":"g.sib.sum(SLE,M,ignorenonwear=TRUE,desiredtz=\"\")"},{"path":"/reference/g.sib.sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"sustiained inactivty bouts detection — g.sib.sum","text":"SLE Output g.sib.det M Object produced g.getmeta ignorenonwear TRUE ignore detected monitor non-wear periods avoid   confusion monitor non-wear time sustained inactivity   (default = TRUE) desiredtz See g.part3","code":""},{"path":"/reference/g.sib.sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"sustiained inactivty bouts detection — g.sib.sum","text":"Dataframe per night per definition sustained inactivity bouts   start end time sustained inactivity bout","code":""},{"path":"/reference/g.sib.sum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sustiained inactivty bouts detection — g.sib.sum","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.sibreport.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate sustiained inactivty bouts report — g.sibreport","title":"Generate sustiained inactivty bouts report — g.sibreport","text":"Generate sustained inactivity bout report. Function intended   direct use package user","code":""},{"path":"/reference/g.sibreport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate sustiained inactivty bouts report — g.sibreport","text":"","code":"g.sibreport(ts, ID, epochlength, logs_diaries=c(), desiredtz=\"\")"},{"path":"/reference/g.sibreport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate sustiained inactivty bouts report — g.sibreport","text":"ts Data frame time series created inside function g.part5 ID Recording identifier (character numeric) epochlength Numeric indicate epoch length seconds ts object logs_diaries Object produced g.loadlog function desiredtz See g.getmeta","code":""},{"path":"/reference/g.sibreport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate sustiained inactivty bouts report — g.sibreport","text":"Dataframe one row per sustained inactivity bout corresponding    properties stored data.frame columns.","code":""},{"path":"/reference/g.sibreport.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate sustiained inactivty bouts report — g.sibreport","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.weardec.html","id":null,"dir":"Reference","previous_headings":"","what":"Detects whether accelerometer is worn — g.weardec","title":"Detects whether accelerometer is worn — g.weardec","text":"Uses object produced g.part1 assess   whether accelerometer worn","code":""},{"path":"/reference/g.weardec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detects whether accelerometer is worn — g.weardec","text":"","code":"g.weardec(M, wearthreshold, ws2, nonWearEdgeCorrection = TRUE)"},{"path":"/reference/g.weardec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detects whether accelerometer is worn — g.weardec","text":"M Object produced g.getmeta wearthreshold Number axis least need meet non-wear criteria ws2 Large windowsize used seconds apply non-wear detection     Small window size needed, inherent object M nonWearEdgeCorrection Boolean indicated whether EdgeCorrection described 2013     applied (default = TRUE, consistent code )","code":""},{"path":"/reference/g.weardec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detects whether accelerometer is worn — g.weardec","text":"r1 Participant id extracted file r2 Night number r3 Detected onset sleep expressed hours      since previous midnight LC fraction 15 minute windows 5 percent     clipping LC2 fraction 15 minute windows 80     percent clipping","code":""},{"path":"/reference/g.weardec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Detects whether accelerometer is worn — g.weardec","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/g.weardec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detects whether accelerometer is worn — g.weardec","text":"","code":"data(data.getmeta)   output = g.weardec(M = data.getmeta, wearthreshold = 2, ws2 = 900)"},{"path":"/reference/getfolderstructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts folderstructure based on data directory. — getfolderstructure","title":"Extracts folderstructure based on data directory. — getfolderstructure","text":"Extracts folderstructure based data directory. used   accelerometer files stored hierarchical folder structure   user likes reference exact position folder   tree, rather just filename.  Function   intended direct use package user.","code":""},{"path":"/reference/getfolderstructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts folderstructure based on data directory. — getfolderstructure","text":"","code":"getfolderstructure(datadir=c(),referencefnames=c())"},{"path":"/reference/getfolderstructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts folderstructure based on data directory. — getfolderstructure","text":"datadir Argument datadir used various functions GGIR referencefnames vector filename filter ","code":""},{"path":"/reference/getfolderstructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts folderstructure based on data directory. — getfolderstructure","text":"List items:  fullfilenames: vector full paths folders including     name file foldername: vector names folder file     stroed (distal folder folder tree).","code":""},{"path":"/reference/getfolderstructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts folderstructure based on data directory. — getfolderstructure","text":"","code":"if (FALSE) {     folderstructure = getfolderstructure(datadir)   }"},{"path":"/reference/get_nw_clip_block_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Set monitor brand specific parameters — get_nw_clip_block_params","title":"Set monitor brand specific parameters — get_nw_clip_block_params","text":"Set monitor brand specific thresholds non-wear detection, clipping   etection, blocksizes loaded.   designed direct use user.","code":""},{"path":"/reference/get_nw_clip_block_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set monitor brand specific parameters — get_nw_clip_block_params","text":"","code":"get_nw_clip_block_params(chunksize, dynrange, monc, rmc.noise=c(),   sf, dformat, rmc.dynamic_range)"},{"path":"/reference/get_nw_clip_block_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set monitor brand specific parameters — get_nw_clip_block_params","text":"chunksize See g.calibrate dynrange See g.getmeta monc See g.inspectfile rmc.noise Noise level acceleration signal _g_-units, used working ad-hoc .csv data formats     using read.myacc.csv. read.myacc.csv take rmc.noise argument,     interacting GGIR g.part1 rmc.noise used.     , rmc.noise taken params_rawdata object explicitly specified user. sf Numeric, sample frequency Hertz dformat See g.dotorcomma rmc.dynamic_range Optional, please see read.myacc.csv","code":""},{"path":"/reference/get_nw_clip_block_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Set monitor brand specific parameters — get_nw_clip_block_params","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/get_starttime_weekday_meantemp_truncdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get starttime (adjusted), weekday, mean temp, and adjust data accordingly. — get_starttime_weekday_meantemp_truncdata ","title":"Get starttime (adjusted), weekday, mean temp, and adjust data accordingly. — get_starttime_weekday_meantemp_truncdata ","text":"Function intended direct use user.   Used inside g.getmeta intermediate step   loading raw data calibrating . step includes extracting   starttime adjusting nearest integer number long epoch window   lengths hour, truncating data accordingly, extracting    corresponding weekday mean temperature (temperature available).","code":""},{"path":"/reference/get_starttime_weekday_meantemp_truncdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get starttime (adjusted), weekday, mean temp, and adjust data accordingly. — get_starttime_weekday_meantemp_truncdata ","text":"","code":"get_starttime_weekday_meantemp_truncdata(temp.available, monc,    dformat, data, P, header, desiredtz, sf, i,   datafile, ws2, starttime, wday, wdayname, configtz = NULL)"},{"path":"/reference/get_starttime_weekday_meantemp_truncdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get starttime (adjusted), weekday, mean temp, and adjust data accordingly. — get_starttime_weekday_meantemp_truncdata ","text":"temp.available Boolean whether temperate available. monc See g.inspectfile dformat See g.dotorcomma data Data part g.readaccfile output P data loaded accelerometer file g.readaccfile header Header part g.readaccfile output desiredtz See g.getmeta sf Numeric, sample frequency Hertz Integer index passed g.getmeta     indicate data block read. datafile See g.getmeta ws2 Long epoch length starttime calculate remembered fed function ,     recalulated. wday calculate remembered fed function ,     recalulated. wdayname calculate remembered fed function ,     recalulated. configtz See g.getmeta","code":""},{"path":"/reference/get_starttime_weekday_meantemp_truncdata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get starttime (adjusted), weekday, mean temp, and adjust data accordingly. — get_starttime_weekday_meantemp_truncdata ","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/GGIR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A package to process multi-day raw accelerometer data — GGIR-package","title":"A package to process multi-day raw accelerometer data — GGIR-package","text":"Disclaimer: new GGIR user please see   package vignette    introduction GGIR.   document primarily aimed documenting functions input arguments.   Please note google discussion group package (link ).   can thank us sharing code package developing   generic purpose tool citing package name   citing supporting publications (e.g. Migueles et al. 2019) publications.","code":""},{"path":[]},{"path":"/reference/GGIR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A package to process multi-day raw accelerometer data — GGIR-package","text":"Vincent T van Hees <v.vanhees@accelting.com> main creator developer Zhou Fang developed calibration algorithm used function g.calibrate Joe Heywood helped develop functionality process specific recording days Severine Sabia, Mathilde Chen, Manasa Yerramalla extensively tested provided feedback various functions Joan Capdevila Pujol helped improve various functions Jairo H Migueles <jairohm@ugr.es> helped improve various functions Matthew R Patterson helped enhancing visual report. Lena Kushleyeva helped fix bug sleep detection. Taren Sanders helped tidy parallel processing functionality","code":""},{"path":"/reference/GGIR-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A package to process multi-day raw accelerometer data — GGIR-package","text":"Migueles JH, Rowlands AV, et al. GGIR: Research Community-Driven Open Source     R Package Generating Physical Activity Sleep Outcomes Multi-Day Raw     Accelerometer Data. Journal Measurement Physical Behaviour. 2(3) 2019.     doi:10.1123/jmpb.2018-0063. van Hees VT, Gorzelniak L, Dean Leon EC, Eder M, Pias M, et al. (2013) Separating     Movement Gravity Components Acceleration Signal Implications     Assessment Human Daily Physical Activity. PLoS ONE 8(4): e61691.     doi:10.1371/journal.pone.0061691 van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI,     White T, Wareham NJ, Brage S. Auto-calibration accelerometer data     free-living physical activity assessment using local gravity temperature:     evaluation four continents. J Appl Physiol (1985). 2014 Aug 7 van Hees VT, Sabia S, et al. (2015) novel, open access method     assess sleep duration using wrist-worn accelerometer, PLoS ONE, November 2015","code":""},{"path":"/reference/GGIR-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A package to process multi-day raw accelerometer data — GGIR-package","text":"","code":"if (FALSE) {     #inspect file:     I = g.inspectfile(datafile)      #autocalibration:     C = g.calibrate(datafile)      #get meta-data:     M = g.getmeta(datafile)   }   data(data.getmeta)   data(data.inspectfile)   data(data.calibrate)    #impute meta-data:   IMP = g.impute(M = data.getmeta, I = data.inspectfile)   #analyse and produce summary:   A = g.analyse(I = data.inspectfile, C = data.calibrate, M = data.getmeta, IMP, ID = \"01wk0\")   #plot data   g.plot(IMP, M = data.getmeta, I = data.inspectfile, durplot=4)"},{"path":"/reference/GGIR.html","id":null,"dir":"Reference","previous_headings":"","what":"Shell function for analysing an accelerometer dataset. — GGIR","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"function designed help users operate steps   analysis. helps generate structure milestone data,   produces user-friendly reports. function acts shell   calls g.part1, g.part2, g.part3,   g.part4 g.part5.","code":""},{"path":"/reference/GGIR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"","code":"GGIR(mode = 1:5,      datadir = c(),      outputdir = c(),      studyname = c(),      f0 = 1, f1 = 0,      do.report = c(2, 4, 5, 6),      configfile = c(),      myfun = c(),      verbose = TRUE, ...)"},{"path":"/reference/GGIR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"mode Numeric (default = 1:5).     Specify five parts need run, e.g., mode = 1 makes     g.part1 run; mode = 1:5 makes     whole GGIR pipeline run, g.part1 g.part5. datadir Character (default = c()).     Directory accelerometer files stored, e.g.,     \"C:/mydata\", list accelerometer filenames directories, e.g.     c(\"C:/mydata/myfile1.bin\", \"C:/mydata/myfile2.bin\"). outputdir Character (default = c()).     Directory output needs stored. Note     function attempt create folders directory uses     folder keep output. studyname Character (default = c()).     datadir folder, study given name     data directory. datadir list filenames studyname specified     input argument used name study. f0 Numeric (default = 1).     File index start (default = 1). Index refers filenames sorted     alphabetical order. f1 Numeric (default = 0).     File index finish (defaults number files available). .report Numeric (default = c(2, 4, 5, 6)).     parts generate summary spreadsheet: 2, 4, 5, /6. Default c(2, 4, 5, 6).     report generated based available milestone data. creating     milestone data multiple machines advisable turn report     generation generating milestone data, value = c(),     merge milestone data turn report generation back     setting overwrite FALSE. configfile Character (default = c()).     Configuration file previously generated function GGIR. See details. myfun List (default = c()).     External function object applied raw data. See package vignette detailed tutorial     examples use function embedding:     https://cran.r-project.org/package=GGIR/vignettes/ExternalFunction.pdf verbose Boolean (default = TRUE).     indicate whether console message printed. Note warnings error     always printed can suppressed suppressWarning() suppressMessages(). ... parameters used GGIR. Given large number parameters used GGIR     grouped objects start \"params_\". documented     details section. provide objects argument function GGIR,     can provide parameters inside input function GGIR.","code":""},{"path":"/reference/GGIR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"function provides values, ensures functions called   output stored. , configuration file stored containing   argument values used facilitate reproducibility.","code":""},{"path":"/reference/GGIR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"used function GGIR output directory (outputdir) filled   milestone data results. Function GGIR stores explicitely   entered argument values default values argument explicitely   provided csv-file named config.csv stored root output folder.   config.csv file accepted input GGIR argument configfile   replace specification arguments, except datadir outputdir. practical value eases replication analysis,   instead share R script, sharing config.csv file   sufficient. , config.csv file contribute reproducibility   data analysis. Note: combining configuration file explicitely provided argument   values, explicitely provided argument values overrule   argument values configuration file. parameter neither provided   via configuration file input GGIR uses default paramter values   can inspected command print(load_params()), specifically   interested certain subgroup parameters, e.g., physical activity,   can print(load_params()$params_phyact). defaults part GGIR   code changed user. parameters can used GGIR :","code":""},{"path":"/reference/GGIR.html","id":"params-general","dir":"Reference","previous_headings":"","what":"params_general","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used across GGIR parts fall     categories. overwrite Boolean (default = FALSE).         want overwrite analysis milestone         data exists? overwrite = FALSE, milestone data previous analysis         used available visual reports created . dayborder Numeric (default = 0).         Hour days start end (dayborder = 4 mean 4 ). .parallel Boolean (default = TRUE).         Whether use multi-core processing (works least 4 CPU cores available). maxNcores Numeric (default = NULL).         Maximum number cores use argument .parallel set true.         GGIR default uses either maximum number available cores number files         process (whichever lower), argument allows set lower maximum. acc.metric Character (default = \"ENMO\").         one acceleration metrics want use acceleration magnitude         analyses GGIR part 5 visual report? example: \"ENMO\", \"LFENMO\", \"MAD\",         \"NeishabouriCount_y\", \"NeishabouriCount_vm\". one acceleration metric can specified         selected metric needs calculated part 1 (see g.part1)         via arguments .enmo = TRUE .mad = TRUE. part5_agg2_60seconds Boolean (default = FALSE).         Wether use aggregate epochs 60 seconds part GGIR g.part5 analysis. print.filename Boolean (default = FALSE).         Whether print filename analysing (case .parallel = FALSE).         Printing filename can useful investigate         problems (e.g., verify file read). desiredtz Character (default = \"\", .e., system timezone).         Timezone device configured experiments took place.         experiments took place different timezone, use         argument timezone experiments took place         argument configtz specify device configured.         See also https://en.wikipedia.org/wiki/Zone.tab configtz Character (default = \"\", .e., system timezone).         moment functional GENEActiv .bin, AX3 cwa, ActiGraph .gt3x,         ad-hoc csv file format moment.         Timezone accelerometer configured. use argument         timezone configuration timezone recording took         place different. See also https://en.wikipedia.org/wiki/Zone.tab sensor.location Character (default = \"wrist\").         indicate sensor location, default wrist. hip, HDCZA algorithm sleep detection         also requires longitudinal axis sensor -45 +45 degrees. windowsizes Numeric vector, three values         (default = c(5, 900, 3600)).         indicate lengths windows c(window1, window2, window3):         window1 short epoch length seconds, default 5, time          window acceleration angle metrics calculated;         window2 long epoch length seconds non-wear signal clipping          defined, default 900 (expected multitude 60 seconds);         window3 window length data used non-wear detection default 3600 seconds.         , window3 larger window2 use overlapping windows,         window2 equals window3 non-wear periods assessed non-overlapping windows. idloc Numeric (default = 1).         idloc = 1 code assumes ID number stored obvious header field. Note ActiGraph data         ID never stored file header.         value set 2, 5, 6, 7, GGIR looks filename extracts character string preceding first         occurance \"_\" (idloc = 2), \" \" (space, idloc = 5), \".\" (dot, idloc = 6),         \"-\" (idloc = 7), respectively.         may noticed idloc 3 4 skipped, used one study 2012,         actively maintained anymore, legacy code omitted. expand_tail_max_hours Numeric (default = NULL).         parameter replaced recordingEndSleepHour. recordingEndSleepHour Numeric (default = NULL).         Time (hours) recording end (later) expand         g.part1 output synthetic data trigger sleep detection last night.         Using argument recordingEndSleepHour implies assumption         participant fell asleep end recording recording         ended recordingEndSleepHour hour last day. assumption may         always hold true used caution.         synthetic data metashort entails: timestamps continuing         regularly, zeros acceleration metrics EN, one EN.         Angle columns created way triggers sleep detection using         equation: round(sin((1:length_expansion) / (900/epochsize))) * 15.         keep track tail expansion g.part1 stores lenght expansion         RData files, passed via g.part2, g.part3,         g.part4 g.part5. g.part5 tail expansion         size included additional variable csv-reports.         g.part4 csv-report last nigth omitted, know         sleep estimates last night trustworthy. Similarly,         g.part5 output columns related sleep assessment         omitted last window avoid biassing averages ,         synthetic data also ignored visualizations time series         output avoid biased output. dataFormat Character (default = \"raw\").         indicate format data datadir.         Current alternatives: ukbiobank_csv, actiwatch_csv, actiwatch_awd, correspond         5, 15 60 second epoch level data files provided UK Biobank         csv format, Actiwatch csv format, Actiwatch awd format.         Actiwatch data functionality tested example data         one research group. Please let us know difficulties using         functionality data. maxRecordingInterval Numeric (default = NULL).         indicate maximum gap hours repeated measurements         ID recordings appended. , assumption         ID can matched, make sure argument idloc set correctly.         argument maxRecordingInterval set NULL (default) recordings         appended. recordings overlap GGIR use data         latest recording. recordings seperated timegap         recordings filled data points resembale monitor worn.         maximum value maxFile gap 504 (21 days). recordings         accelerometer brand appended. part 2 csv report         show number appended recordings, sampling rate , time overlap gap          names filenames respective recording. extEpochData_timeformat Character (default = \"%d-%m-%Y %H:%M:%S\").         specify time format used external epoch level data         argument dataFormat set \"actiwatch_csv\", \"actiwatch_awd\",          \"actigraph_csv\". example \"%Y-%m-%d %:%M:%S %p\"          \"2023-07-11 01:24:01 PM\" \"%m/%d/%Y %H:%M:%S\" \"2023-07-11 13:24:01\"","code":""},{"path":"/reference/GGIR.html","id":"params-rawdata","dir":"Reference","previous_headings":"","what":"params_rawdata","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used related reading pre-processing     raw data, excluding parameters related metrics     params_metrics object. backup.cal.coef Character (default = \"retrieve\").         Option use backed-calibration coefficient instead         deriving calibration coefficients analysing file twice.         Argument backup.cal.coef two usecase. Use case 1: auto-calibration         fails user option provide back-        calibration coefficients via argument. value argument needs         name directory csv-spreadsheet following column names         subsequent values: \"filename\" names accelerometer files         calibration coefficients need applied case auto-calibration fails;         \"scale.x\", \"scale.y\", \"scale.z\" scaling coefficients; \"offset.x\",         \"offset.y\", \"offset.z\" offset coefficients, ;         \"temperature.offset.x\", \"temperature.offset.y\", \"temperature.offset.z\"         temperature offset coefficients. can useful analysing         short lasting laboratory experiments insufficient sphere data perform         auto-calibration, calibration coefficients can derived         alternative way.  users responsibility compile         csv-spreadsheet. Instead building file user can also         Use case 2: user wants avoid performing auto-calibration repeatedly         file. backup.cal.coef value set \"retrieve\" (default)         GGIR look \"data_quality_report.csv\" file outputfolder         QC, holds previously generated calibration coefficients.         want happen, deleted data_quality_report.csv         QC folder set value \"redo\". minimumFileSizeMB Numeric (default = 2).         Minimum File size MB required enter processing.         argument can help avoid short uninformative files enter analyses.         Given typical accelerometer collects several MBs per hour,         default setting skip tiny files. .cal Boolean (default = TRUE).         Whether apply auto-calibration g.calibrate.         Recommended setting TRUE. imputeTimegaps Boolean (default = TRUE).         indicate whether timegaps larger 1 sample imputed.         Currently used .gt3x data ActiGraph .csv format, timegaps         can expected result Actigraph's idle sleep.mode configuration. spherecrit Numeric (default = 0.3).         minimum required acceleration value (g) sides 0 g         axis. Used judge whether sphere sufficiently populated minloadcrit Numeric (default = 72).         minimum number hours code needs read         autocalibration procedure effective (sensitive multitudes 12 hrs,         values ceiled). loading hours extra data loaded         calibration error reduced 0.01 g. printsummary Boolean (default = FALSE).         TRUE print summary calibration procedure console done. chunksize Numeric (default = 1).         Value 0.2 1 specificy size chunks         loaded fraction 12 hour period, e.g., 0.5 equals 6 hour chunks, 1 equals 12 hour chunks.         machines less 4Gb RAM memory value 1 recommended. dynrange Numeric (default = NULL).         Provide dynamic range 8 gravity. interpolationType Integer (default = 1).         indicate type interpolation used         resampling time series (mainly relevant Axivity sensors),         1=linear, 2=nearest neighbour. rmc.file Character (default = NULL).         Filename file read working directory,         full path file otherwise. rmc.nrow Numeric (default = NULL).         Number rows read, nrow argument read.csv nrows fread.         whole file read default (.e., rmc.nrow = Inf). rmc.skip Numeric (default = 0).         Number rows skip, skip argument read.csv fread. rmc.dec Character (default = \".\").         Decimal used numbers, dec argument read.csv fread. rmc.firstrow.acc Numeric (default = NULL).         First row (number) acceleration data. rmc.firstrow.header Numeric (default = NULL).         First row (number) header. Leave blank file header. rmc.header.length Numeric (default = NULL).         file header, specify header length (number rows). rmc.col.acc Numeric, three values         (default = c(1, 2, 3)).         Vector three column (numbers) acceleration signals         stored. rmc.col.temp Numeric (default = NULL).         Scalar column (number) temperature stored.         Leave default setting temperature avaible. temperature         used g.calibrate. rmc.col.time Numeric (default = NULL).         Scalar column (number) timestamps stored.         Leave default setting timestamps stored. rmc.unit.acc Character (default = \"g\").         Character unit acceleration values: \"g\", \"mg\", \"bit\". rmc.unit.temp Character (default = \"C\").         Character unit temperature values: (K)elvin, (C)elsius, (F)ahrenheit. rmc.unit.time Character (default = \"POSIX\").         Character unit timestamps: \"POSIX\", \"UNIXsec\" (seconds since origin, see argument rmc.origin),         \"character\", \"ActivPAL\" (exotic timestamp format used ActivPAL         activity monitor). rmc.format.time Character (default = \"         Character  giving date-time format used strptime.         used rmc.unit.time: character POSIX. rmc.bitrate Numeric (default = NULL).         unit acceleration bit provide bit rate, e.g., 12 bit. rmc.dynamic_range Numeric character (default = NULL).         unit acceleration bit provide dynamic range deviation         g zero, e.g., +/-6g mean argument needs 6. give         argument character value code search file header elements         name equal character value use corresponding numeric value         next dynamic range. rmc.unsignedbit Boolean (default = TRUE).         unsignedbit = TRUE means bits positive numbers.         unsignedbit = FALSE bits positive negative. rmc.origin Character (default = \"1970-01-01\").         Origin time unit time UNIXsec, e.g., 1970-1-1. rmc.desiredtz Character (default = NULL).         Timezone experiments took place. argument scheduled         deprecated now used overwrite desiredtz provided. rmc.configtz Character (default = NULL).         Timezone device configured. argument scheduled         deprecated now used overwrite configtz provided. rmc.sf Numeric (default = NULL).         Sample rate Hertz, stored file header used         instead (see argument rmc.headername.sf). rmc.headername.sf Character (default = NULL).         file header: Row name sample frequency can found. rmc.headername.sn Character (default = NULL).         file header: Row name serial number can found. rmc.headername.recordingid Character (default = NULL).         file header: Row name recording ID can found. rmc.header.structure Character (default = NULL).         Used split header name header value, e.g., \":\" \" \". rmc.check4timegaps Boolean (default = FALSE).         indicate whether gaps time imputed zeros.         sensing equipment provides accelerometer gaps time. rest         GGIR designed , setting argument TRUE gaps         time filled zeros. rmc.col.wear Numeric (default = NULL).         external wear detection outcome stored part data can used GGIR.         argument specifies column wear detection (Boolean) stored. rmc.doresample Boolean (default = FALSE).         indicate whether resample data based available timestamps extracted         sample rate file header. rmc.noise Numeric (default = 13).         Noise level acceleration signal mg-units, used working ad-hoc .csv data formats         using read.myacc.csv. read.myacc.csv take rmc.noise argument,         interacting GGIR g.part1 rmc.noise used. rmc.scalefactor.acc Numeric value (default 1) scale acceleration signals via multiplication.         example, data provided m/s2 setting 1/9.81         derive gravitational units. frequency_tol Number (default = 0.1) passed readAxivity GGIRread package.         Represents frequency tolerance fraction 0 1. relative bias         per data block larger fraction data block imputed         lack movement gravitational oriationed guessed recent         valid data block. applicable Axivity .cwa data.","code":""},{"path":"/reference/GGIR.html","id":"params-metrics","dir":"Reference","previous_headings":"","what":"params_metrics","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used specify signal metrics need extract GGIR g.part1. .anglex Boolean (default = FALSE).         TRUE, calculates angle X axis relative horizontal:         $$angleX = (\\tan{^{-1}\\frac{acc_{rollmedian(x)}}{(acc_{rollmedian(y)})^2 +         (acc_{rollmedian(z)})^2}}) * 180/\\pi$$ .angley Boolean (default = FALSE).         TRUE, calculates angle Y axis relative horizontal:         $$angleY = (\\tan{^{-1}\\frac{acc_{rollmedian(y)}}{(acc_{rollmedian(x)})^2 +         (acc_{rollmedian(z)})^2}}) * 180/\\pi$$ .anglez Boolean (default = TRUE).         TRUE, calculates angle Z axis relative horizontal:         $$angleZ = (\\tan{^{-1}\\frac{acc_{rollmedian(z)}}{(acc_{rollmedian(x)})^2 +         (acc_{rollmedian(y)})^2}}) * 180/\\pi$$ .zcx Boolean (default = FALSE).         TRUE, calculates metric zero-crossing count x-axis. computation specifics         see source code function g.applymetrics .zcy Boolean (default = FALSE).         TRUE, calculates metric zero-crossing count y-axis. computation specifics         see source code function g.applymetrics .zcz Boolean (default = FALSE).         TRUE, calculates metric zero-crossing count z-axis. computation         specifics see source code function g.applymetrics .enmo Boolean (default = TRUE).         TRUE, calculates metric: $$ENMO = \\sqrt{acc_x^2 + acc_y^2 + acc_z^2} - 1$$         (ENMO < 0, ENMO = 0). .lfenmo Boolean (default = FALSE).         TRUE, calculates metric ENMO low-pass filtered accelerations         (computation specifics see source code function g.applymetrics).         filter bound defined parameter hb. .en Boolean (default = FALSE).         TRUE, calculates Euclidean Norm raw accelerations:         $$EN = \\sqrt{acc_x^2 + acc_y^2 + acc_z^2}$$ .mad Boolean (default = FALSE).         TRUE, calculates Mean Amplitude Deviation:         $$MAD = \\frac{1}{n}\\Sigma|r_i - \\overline{r}|$$ .enmoa Boolean (default = FALSE).         TRUE, calculates metric:         $$ENMOa = \\sqrt{acc_x^2 + acc_y^2 + acc_z^2} - 1$$ (ENMOa < 0, ENMOa = |ENMOa|). .roll_med_acc_x Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .roll_med_acc_y Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .roll_med_acc_z Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .dev_roll_med_acc_x Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .dev_roll_med_acc_y Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .dev_roll_med_acc_z Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .bfen Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .hfen Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .hfenplus Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .lfen Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .lfx Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .lfy Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .lfz Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .hfx Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .hfy Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .hfz Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .bfx Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .bfy Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .bfz Boolean (default = FALSE).         TRUE, calculates metric. computation         specifics see source code function g.applymetrics. .brondcounts Boolean (default = FALSE).         OPTION DEPRECATED (October2022) DUE ISSUES ACTIVITYCOUNTS PACKAGE,         ADD BACK ISSUES ACTIVITYCOUNTS PACKAGE ADDRESSED.         TRUE, calculates metric via R package activityCounts.         call BrondCounts large number acitivty counts         physical activity sleep research field. calling _brondcounts_         clarify counts proposed Jan Br&#248;nd implemented         R Ruben Brondeel. _brondcounts_ intended imitation         counts produced one closed source ActiLife software ActiGraph. .neishabouricounts Boolean (default = FALSE).         TRUE, calculates metric via R package actilifecounts,          implementation algorithm used closed-source software ActiLife          ActiGraph (methods published doi: 10.1038/s41598-022-16003-x). use          name first author (instead ActiLifeCounts) paper          call NeishabouriCount uncertainty ActiLife implement          algorithm time. use Neishabouri counts physical          activity intensity classification part 5 (.e., metric threshold.lig,          threshold.mod, threshold.vig applied), acc.metric          argument needs set one following: \"NeishabouriCount_x\",         \"NeishabouriCount_y\", \"NeishabouriCount_z\", \"NeishabouriCount_vm\" use          counts x-, y-, z-axis vector magnitude, respectively. lb Numeric (default = 0.2).         Lower boundary frequency filter (Hertz) used filter-based metrics. hb Numeric (default = 15).         Higher boundary frequency filter (Hertz) used filter-based metrics. n Numeric (default = n).         Order frequency filter used filter-based metrics. zc.lb Numeric (default = 0.25).         Used zero-crossing counts . Lower boundery cut-frequency filter. zc.hb Numeric (default = 3).         Used zero-crossing counts . Higher boundery cut-frequencies filter. zc.sb Numeric (default = 0.01).         Stop band used calculation zero crossing counts. Value acceleration threshold         g units  acceleration rounded zero. zc.order Numeric (default = 2).         Used zero-crossing counts . Order frequency filter. zc.scale Numeric (default = 1)         Used zero-crossing counts . Scaling factor applied         counts calculated (GGIR part 3). actilife_LFE Boolean (default = FALSE).         TRUE, calculates NeishabouriCount metric low-frequency extension filter         proposed closed source ActiLife software ActiGraph. applicable         metric NeishabouriCount.","code":""},{"path":"/reference/GGIR.html","id":"params-cleaning","dir":"Reference","previous_headings":"","what":"params_cleaning","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used across GGIR parts releated masking     imputing data, abbreviated \"cleaning\". .imp Boolean (default = TRUE).         Whether impute missing values (e.g., suspected monitor non-wear clippling)         g.impute GGIR g.part2. Recommended setting TRUE. TimeSegments2ZeroFile Data frame (default = NULL).         Optional data.frame specify time segments need ignored imputation,         acceleration metrics imputed zeros. data.frame expected         contain two columns named windowstart windowend, start- end         time time segment POSIXlt class. data_cleaning_file Character (default = NULL).         Optional path csv file create holds four columns:         ID, day_part5, relyonguider_part4, night_part4. ID hold         participant ID. Columns day_part5 night_part4 allow specify         day(s) night(s) need excluded g.part5 g.part4, respectively.         , done regardless whether rest GGIR thinks day(s)/night(s)         valid. Column relyonguider_part4 allows specify nights         g.part4 fully rely guider. See also package vignette. excludefirstlast.part5 Boolean (default = FALSE).         TRUE first last window (waking-waking         midnight-midnight) ignored g.part5. excludefirstlast Boolean (default = FALSE).         TRUE first last night measurement ignored         sleep assessment g.part4. excludefirst.part4 Boolean (default = FALSE).         TRUE first night measurement ignored sleep          assessment g.part4. excludelast.part4 Boolean (default = FALSE).         TRUE last night measurement ignored sleep          assessment g.part4. includenightcrit Numeric (default = 16).         Minimum number valid hours per night (24 hour window noon noon),         used sleep assessment g.part4. minimum_MM_length.part5 Numeric (default = 23).         Minimum length hours MM day included cleaned g.part4 results. study_dates_file Character (default = c()).         Full path csv file containing first last date expected          wear period every study participant (dates provided per individual).         Expected format activity diary : First column headers followed          one row per recording. three columns: first column          recording ID, needs match ID GGIR extracts          accelerometer file; second column contain first date          study; third column last date study. Date columns         default format \"23-04-2017\", date format  specified          argument study_dates_dateformat (). specified (default),          GGIR use first last day recording beginning          end study. Note dates used top          data_masking_strategy selected. study_dates_dateformat Character (default = \"         specify date format used study_dates_file used          strptime. strategy Numeric (default = 1).         See data_masking_strategy . data_masking_strategy Numeric (default = 1).         deal knowledge study protocol.         data_masking_strategy = 1 means select data based hrs.del.start hrs.del.end.         data_masking_strategy = 2 makes data first         midnight last midnight used.         data_masking_strategy = 3 selects active X days file X         specified argument ndayswindow, days series          24-h blocks starting time day (X hours begining end         period can deleted arguments hrs.del.start hrs.del.end)         data_masking_strategy = 4 use data first midnight.         data_masking_strategy = 5 similar data_masking_strategy = 3, selects X complete         calendar days X specified argument ndayswindow          (X hours begining end period can deleted          arguments hrs.del.start hrs.del.end). hrs.del.start Numeric (default = 0).         many HOURS start experiment wearing         monitor start? Used GGIR g.part2 data_masking_strategy = 1. hrs.del.end Numeric (default = 0).         many HOURS end experiment         wearing monitor definitely end? Used GGIR g.part2 data_masking_strategy = 1. maxdur Numeric (default = 0).         many DAYS start experiment experiment         definitely stop? (set zero unknown). ndayswindow Numeric (default = 7).         data_masking_strategy set 3 5, size window         number days. data_masking_strategy 3 value can fractional, e.g. 7.5,         data_masking_strategy 5 needs integer. includedaycrit.part5 Numeric (default = 2/3).         Inclusion criteria number valid hours, either         expressed ratio 1 number hours 24 hour day. segmentWEARcrit.part5 Numeric (default = 0.5).         Fraction qwindow segment expected valid part 5,          0.3 indicates least 30 percent time valid. segmentDAYSPTcrit.part5 Numeric vector length 2 (default = c(0.9, 0)).         Inclusion criteria proportion segment          classified day (awake) spt (sleep period time) considered          valid. One two numbers 0, defines          proportion segment classified day spt, respectively.         default setting focus waking hour         segments includes segments overlap least 90 percent          waking hours. order shift focus SPT use         c(0, 0.9) ensures segments overlap least         90 percent SPT included.         Setting zero problematic allowed introduce         bias behavioural estimates following reason: complete segment         averaged incomplete segments (someone going bed waking         middle segment) longer clear whether person         less active sleeps segment. Similarly         clear whether person wakefulness SPT segment         woke went bed segment. Therefore,          minimum value 0.5 required value closer 1         better. includedaycrit Numeric (default = 16).         Minimum required number valid hours day specific analysis         (NOTE: minimum required number hours per day summary         entire measurement, every available hour used make best possible         inference average metric value per average day). max_calendar_days Numeric (default = 0).       maximum number calendar days include (set zero unknown). nonWearEdgeCorrection Boolean (default = TRUE).         TRUE non-wear detection around edges recording (first         last 3 hours) corrected following description vanHees2013         default since . functionality advisable working          sleep clinic exercise lab data typically lasting less day. nonwear_approach Character (default = \"2023\").         Whether use traditional version non-wear detection algorithm          (nonwear_approach = \"2013\") new version (nonwear_approach = \"2023\").          2013 version use longsize window (windowsizes[3], one hour          default) check conditions nonwear identification          flag nonwear mediumsize window (windowsizes[2], 15 min default)          middle. 2023 version differs flag nonwear          full longsize window. 2013 method longsize window centered          centre mediumsize window, 2023 method longsizewindow          aligned left edge left edge mediumsize window.","code":""},{"path":"/reference/GGIR.html","id":"params-phyact","dir":"Reference","previous_headings":"","what":"params_phyact","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters releated physical activity used GGIR g.part2 GGIR g.part5. mvpathreshold Numeric (default = 100).         Acceleration threshold MVPA estimation GGIR g.part2.         can single number array numbers, e.g., mvpathreshold = c(100, 120).         later case code estimate MVPA seperately threshold.         variable left blank, e.g., mvpathreshold = c(), MVPA estimated. mvpadur Numeric (default = 10).         bout duration(s) MVPA calculated. used GGIR g.part2. boutcriter Numeric (default = 0.8).         number 0 1, defines fraction bout needs         mvpathreshold, used GGIR g.part2. threshold.lig Numeric (default = 40).         g.part5: Threshold light physical activity         separate inactivity light. Value can one number array multiple         numbers, e.g., threshold.lig =c(30,40). multiple numbers entered         analysis repeated combination threshold values. Threshold         applied first metric milestone data, specified         .enmo = TRUE applied ENMO. threshold.mod Numeric (default = 100).         g.part5: Threshold moderate physical activity         separate light moderate. Value can one number array         multiple numbers, e.g., threshold.mod = c(100, 120).         multiple numbers entered analysis repliced         ombination threshold values. Threshold applied first metric         milestone data, specified .enmo = TRUE         applied ENMO. threshold.vig Numeric (default = 400).         g.part5: Threshold vigorous physical activity         separate moderate vigorous. Value can one number array         multiple numbers, e.g., threshold.vig =c(400,500). multiple numbers         entered analysis repliced combination threshold values.         Threshold applied first metric milestone data,         specified .enmo = TRUE applied ENMO. boutdur.mvpa Numeric (default = c(1, 5, 10)).         Duration(s) MVPA bouts minutes extracted.         start identification longest shortest duration.         default setting, start 10 minute bouts, followed 5 minute         bouts rest data, followed 1 minute bouts rest data. boutdur.Numeric (default = c(10, 20, 30)).         Duration(s) inactivty bouts minutes extracted.         Inactivity bouts detected segments data         labelled sleep MVPA bouts.         start identification longest shortest duration.         default setting, start identification 30 minute bouts,         followed 20 minute bouts rest data, followed 10 minute         bouts rest data. Note use term inactivity instead         sedentary behaviour lowest intensity level behaviour. reason         GGIR attempt classifying activity type         sitting moment, feel using term sedentary         behaviour fail communicate . boutdur.lig Numeric (default = c(1, 5, 10)).         Duration(s) light activty bouts minutes         extracted. Light activity bouts detected segments data         labelled sleep, MVPA, inactivity bouts.         start identification longest shortest duration.         default setting, start identification         10 minute bouts, followed 5 minute bouts rest data, followed         1 minute bouts rest data. boutcriter.mvpa Numeric (default = 0.8).         number 0 1, defines fraction bout needs threshold.mod. boutcriter.Numeric (default = 0.9).         number 0 1, defines fraction bout needs threshold.lig. boutcriter.lig Numeric (default = 0.8).         number 0 1, defines fraction bout needs         threshold.lig threshold.mod. frag.metrics Character (default = NULL).         Fragmentation metric exract. Can \"mean\", \"TP\", \"Gini\",         \"power\", \"CoV\", \"NFragPM\", metrics \"\".         See package vignette description fragmentation metrics. part6_threshold_combi Character (default = \"40_100_120\") indicate threshold combination derived         part 5 used part 6","code":""},{"path":"/reference/GGIR.html","id":"params-sleep","dir":"Reference","previous_headings":"","what":"params_sleep","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used configure sleep analysis performend     GGIR g.part3 g.part4. relyonguider Boolean (default = FALSE).         TRUE, sleep onset waking time defined based         timestamps derived guider. participants instructed wear accelerometer         waking hours set TRUE, scenarios set FALSE. relyonsleeplog Boolean (default = FALSE).         use, now replaced argument relyonguider.         Values provided argument relyonsleeplog passed         argument relyonguider preserve functionality old R scripts. def.noc.sleep Numeric (default = 1).         time window sustained         inactivity assumed represent sleep, e.g., def.noc.sleep = c(21, 9).         used sleep log entry available.         left blank def.noc.sleep = c() 12 hour window centred         least active 5 hours 24 hour period used         instead. , L5 hardcoded change changing         argument winhr function g.part2. def.noc.sleep filled         single integer, e.g., def.noc.sleep=c(1) window         detected based built algorithms.         See argument HASPT.algo HASPT specifying         algorithms use. sleepwindowType Character (default = \"SPT\").         indicate type information sleeplog, \"SPT\" sleep period time.         Set \"TimeInBed\" sleep log recorded time bed enable calculation         sleep latency sleep efficiency. nnights Numeric (default = NULL).         argument deprecated. loglocation Character (default = NULL).         Path csv file sleep log information.         See package vignette format file. colid Numeric (default = 1).         Column number sleep log spreadsheet participant ID code stored. coln1 Numeric (default = 2).         Column number sleep log spreadsheet onset first night starts. ignorenonwear Boolean (default = TRUE).         TRUE ignore detected monitor non-wear periods avoid         confusion monitor non-wear time sustained inactivity. constrain2range Boolean (default = TRUE).         Whether constrain range         threshold used diary free sleep period time window detection. HASPT.algo Character (default = \"HDCZA\").         indicate algorithm used sleep period time detection.         Default \"HDCZA\" Heuristic algorithm looking Distribution Change Z-Angle         described van Hees et al. 2018. options included:         \"HorAngle\", based HDCZA replaces non-movement detection         HDCZA algorithm looking time segments angle         longitudinal sensor axis angle relative horizontal plane         -45 +45 degrees. HASPT.ignore.invalid Boolean (default = FALSE).         indicate whether invalid time segments ignored         Sleep Period Time detection. HASIB.algo Character (default = \"vanHees2015\").         indicate algorithm used define         sustained inactivity bouts (.e., likely sleep).         Options: \"vanHees2015\", \"Sadeh1994\", \"Galland2012\". Sadeh_axis Character (default = \"Y\").         indicate axis use Sadeh1994 algorithm,  algortihms         relied count-based Actigraphy Galland2012. sleeplogsep Character (default = NULL).         argument deprecated. nap_model Character (default = NULL).         specify classification model. Currently option \"hip3yr\",         corresponds model trained hip data 3-3.5 olds trained parent diary data. longitudinal_axis Integer (default = NULL).         indicate axis longitudinal axis.         provided, function estimate longitudinal axis. used         sensor.location = \"hip\" HASPT.algo = \"HorAngle\". anglethreshold Numeric (default = 5).         Angle threshold (degrees) sustained inactivity periods detection.         algorithm look periods time (timethreshold)         angle variability lower anglethreshold.         can specified multiple thresholds, implemented, e.g.,         anglethreshold = c(5,10). timethreshold Numeric (default = 5).         Time threshold (minutes) sustained inactivity periods detection.         algorithm look periods time (timethreshold)         angle variability lower anglethreshold.         can specified multiple thresholds, implemented, e.g.,         timethreshold = c(5,10). possible_nap_window Numeric (default = c(9, 18)).         Numeric vector length two range clock hours naps         assumed take place, e.g., possible_nap_window = c(9, 18). Currently         used context explorative nap classification algortihm         trained 3.5 year olds. possible_nap_dur Numeric (default = c(15, 240)).         Numeric vector length two range duration (minutes) nap,         e.g., possible_nap_dur = c(15, 240). Currently         used context explorative nap classification algortihm         trained 3.5 year olds. sleepefficiency.metric Numeric (default = 1).         1 (default), sleep efficiency calculated detected sleep time         SPT window divided log-derived time bed. 2, sleep efficiency         calculated detected sleep time SPT window divided detected         duration sleep period time plus sleep latency (sleep latency refers         difference time bed sleep onset). sleepefficiency.metric considered         argument sleepwindowType = \"TimeInBed\" possible_nap_edge_acc Minimum acceleration SIB nap considered.","code":""},{"path":"/reference/GGIR.html","id":"params-","dir":"Reference","previous_headings":"","what":"params_247","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters releated description 24/7 behaviours fall     conventional physical activity sleep outcomes, parameters used     GGIR g.part2 GGIR g.part5: qwindow Numeric character (default = c(0, 24)).         specify windows variables calculated, e.g., acceleration          distribution, number valid hours, LXMX analysis, MVPA.         numeric, qwindow length two, e.g., qwindow = c(0, 24),         variables calculated full 24 hours day.         qwindow = c(8, 24) variables calculated window 0-8, 8-24 0-24.         days recording segmented based values.         want use day specific segmentation day can set          qwindow full path activity diary file (character). Expected          format activity diary : First column headers followed one row          per recording, first column recording ID, needs match          ID GGIR extracts accelerometer file. Followed date column          format \"23-04-2017\", date format specified argument          qwindow_dateformat (). Use character combination date,          Date DATE column name. followed one multiple columns          start times activity types day format hours:minutes:seconds.          header column used label activity type.          Insert new date column continuing activity types next day.          Leave missing values empty. activitylog used individuals          appear activitylog still processed value          qwindow = c(0, 24). Dates activiy log data can skipped,         need column date followed column next          date. times activity diary multiple short window          size (epoch length), next epoch considered (e.g., epoch 5          seconds, 8:00:02 redefined 8:00:05 activity log).         using qwindow functionality combination GGIR part 5         make sure check arguments segmentWEARcrit.part5          segmentDAYSPTcrit.part5 specfied research needs. qwindow_dateformat Character (default = \"         specify date format used activity log used strptime. M5L5res Numeric (default = 10).         Resolution L5 M5 analysis minutes. winhr Numeric (default = 5).         Vector window size(s) (unit: hours) L5 M5 analysis. qlevels Numeric (default = NULL).         Array percentiles value needs extracted. need          expressed fraction 1, e.g., c(0.1, 0.5, 0.75). limit          number percentiles. left empty percentiles extracted.          Distribution derived short epoch metric data. Argument qlevels          can example used MX-metrics (e.g. Rowlands et al) discussed         main package vignette ilevels Numeric (default = NULL).         Levels acceleration value frequency distribution mg, e.g.,          ilevels = c(0,100,200). limit number levels.          left empty intensity levels extracted. Distribution          derived short epoch metric data. window.summary.size Numeric (default = 10).         Functionality designed London Centre         Longidutinal studies. Size minutes summary window iglevels Numeric (default = NULL).         Levels acceleration value frequency distribution         mg used intensity gradient calculation (according method         Rowlands 2018). default argument empty intensity gradient         calculation done. user can either provide single value ()         make intensity gradient use bins iglevels = c(seq(0,4000,=25), 8000)         user specify distribution. constriction         number levels. IVIS_windowsize_minutes Numeric (default = 60).         Window size Intradaily Variability (IV) Interdaily         Stability () metrics minutes, needs able add 24 hours. IVIS_epochsize_seconds Numeric (default = NULL).         argument deprecated. IVIS.activity.metric Numeric (default = 2).         Metric used activity calculation.         Value = 1, uses continuous scaled acceleration.         Value = 2, tries collapse acceleration binary score rest         versus active try similate original approach. IVIS_acc_threshold Numeric (default = 20).         Acceleration threshold distinguish inactive active. qM5L5 Numeric (default = NULL).         Percentiles (quantiles) calculated L5 M5 window. MX.ig.min.dur Numeric (default = 10).         Minimum MX duration needed order intensity gradient calculated. LUXthresholds Numeric (default = c(0, 100, 500, 1000, 3000, 5000, 10000)).         Vector numeric sequece corresponding         thresholds used calculate time spent LUX ranges. LUX_cal_constant Numeric (default = NULL).         LUX_cal_constant LUX_cal_exponent         provided LUX values converted based formula y = constant * exp(x * exponent) LUX_cal_exponent Numeric (default = NULL).         LUX_cal_constant LUX_cal_exponent provided LUX         LUX values converted based formula y = constant * exp(x * exponent) LUX_day_segments Numeric (default = NULL).         Vector hours day segmented         LUX analysis. L5M5window Argument deprecated version 1.5-24.         argument used define start end time, 24 hour clock hours,         L5M5 needs calculated. Now done argument qwindow. cosinor Boolean (default = FALSE). Whether apply cosinor analysis ActCR package. part6CR Boolean (default = FALSE) indicate whether circadian rhythm analysis run part 6. part6HCA Boolean (default = FALSE) indicate whether Household Co Analysis          run part 6. part6Window Character vector length two (default = c(\"start\", \"end\")) indicate         start end time series used circadian rhythm analysis         part 6. words, parameters used Household co-analysis.         Alternative values : \"Wx\", \"Ox\", \"Hx\", \"x\" number indicat         xth wakeup, onset hour recording. Negative values \"x\"         also possible count relative end recording. example,         c(\"W1\", \"W-1\") goes first till last wakeup, c(\"H5\", \"H-5\")          ignores first last 5 hours, c(\"O2\", \"W10\") goes second         onset till 10th wakeup time.","code":""},{"path":"/reference/GGIR.html","id":"params-output","dir":"Reference","previous_headings":"","what":"params_output","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"list parameters used specify whether GGIR stores output various stages     process. storefolderstructure Boolean (default = FALSE).         Store folder structure accelerometer data. .part2.pdf Boolean (default = TRUE).         g.part2: Whether generate pdf g.part2. .part3.pdf Boolean (default = TRUE).         g.part3: Whether generate pdf g.part3. timewindow Character (default = c(\"MM\", \"WW\")).         g.part5: Timewindow summary statistics derived.         Value can \"MM\" (midnight midnight), \"WW\" (waking time waking time),         \"OO\" (sleep onset sleep onset), combination . save_ms5rawlevels Boolean (default = FALSE).         g.part5: Whether save time series classification (levels)         csv RData files (defined save_ms5raw_format). save_ms5raw_format Character (default = \"csv\").         g.part5: specify data stored: either \"csv\"          \"RData\". used save_ms5rawlevels = TRUE. save_ms5raw_without_invalid Boolean (default = TRUE).         g.part5: indicate whether remove invalid days          time series output files. used save_ms5rawlevels = TRUE. epochvalues2csv Boolean (default = FALSE).         g.part2: TRUE epoch values exported csv file.         , non-wear time imputed possible. .sibreport Boolean (default = FALSE).         g.part4: indicate whether generate report sustained          inactivity bouts (SIB). set TRUE advanced sleep diary         available part 4 part 5 use generate summary statistics         overlap self-reported nonwear napping SIB. ,         SIB cna filter based argument possible_nap_edge_acc first value         possible_nap_dur .visual Boolean (default = TRUE).         g.part4: TRUE, function generate pdf visual         representation overlap sleeplog entries accelerometer         detections. can used visually verify sleeplog entries         come obvious mistakes. outliers.Boolean (default = FALSE).         g.part4: used .visual = TRUE. FALSE,         available nights included visual representation data sleeplog.         TRUE, nights difference onset waking time         larger variable argument criterror included. criterror Numeric (default = 3).         g.part4: used .visual = TRUE outliers.= TRUE.         criterror specifies number minimum number hours difference         sleep log  accelerometer estimate night         included visualisation. visualreport Boolean (default = TRUE).         TRUE, generate visual report based combined output         g.part2 g.part4. Please note visual report         initially developed provide something show study participants         data quality checking purposes. time improved         visual report also useful QC-ing data. However,         scorings shown visual report created visual report         may reflect scorings main GGIR analyses reported         quantitative csv-reports. effort past 10 years gone         making sure csv-report correct, visualreport         mostly side project. unfortunate hope find funding         future design new report specifically purpose         QC-ing anlayses done GGIR. viewingwindow Numeric (default = 1).         Centre day displayed around noon (viewingwindow = 1) around          midnight (viewingwindow = 2) visual report generated          visualreport = TRUE. week_weekend_aggregate.part5 Boolean (default = FALSE).         g.part5: indicate whether week weekend-days aggregates         stored. turned default generates         large number extra columns output report. dofirstpage Boolean (default = TRUE).         indicate whether first page histograms summarizing whole         measurement added file summary reports generated visualreport = TRUE. sep_reports Character (default = \",\").         Value used sep argument write.csv writing csv files containing         GGIR reports. sep_config Character (default = \",\").         Value used sep argument write.csv writing GGIR config file. visualreport_without_invalid Boolean (default = TRUE).           TRUE, reports generated visualreport = TRUE show           windows sufficiently valid data according includedaycrit           viewingwindow = 1 includenightcrit viewingwindow = 2","code":""},{"path":"/reference/GGIR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/GGIR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"van Hees VT, Gorzelniak L, Dean Leon EC, Eder M, Pias M, et al. (2013) Separating     Movement Gravity Components Acceleration Signal Implications     Assessment Human Daily Physical Activity. PLoS ONE 8(4): e61691.     doi:10.1371/journal.pone.0061691 van Hees VT, Fang Z, Langford J, Assah F, Mohammad , da Silva IC, Trenell MI,     White T, Wareham NJ, Brage S. Auto-calibration accelerometer data     free-living physical activity assessment using local gravity temperature:     evaluation four continents. J Appl Physiol (1985). 2014 Aug 7 van Hees VT, Sabia S, et al. (2015) novel, open access method     assess sleep duration using wrist-worn accelerometer, PLoS ONE, November 2015","code":""},{"path":"/reference/GGIR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shell function for analysing an accelerometer dataset. — GGIR","text":"","code":"if (FALSE) {   mode = c(1,2,3,4,5)   datadir = \"C:/myfolder/mydata\"   outputdir = \"C:/myresults\"   studyname =\"test\"   f0 = 1   f1 = 2   GGIR(#-------------------------------        # General parameters        #-------------------------------        mode = mode,        datadir = datadir,        outputdir = outputdir,        studyname = studyname,        f0 = f0,        f1 = f1,        overwrite = FALSE,        do.imp = TRUE,        idloc = 1,        print.filename = FALSE,        storefolderstructure = FALSE,        #-------------------------------        # Part 1 parameters:        #-------------------------------        windowsizes = c(5,900,3600),        do.cal = TRUE,        do.enmo = TRUE,        do.anglez = TRUE,        chunksize = 1,        printsummary = TRUE,        #-------------------------------        # Part 2 parameters:        #-------------------------------        data_masking_strategy = 1,        ndayswindow = 7,        hrs.del.start = 1,        hrs.del.end = 1,        maxdur = 9,        includedaycrit = 16,        L5M5window = c(0,24),        M5L5res = 10,        winhr = c(5,10),        qlevels = c(c(1380/1440),c(1410/1440)),        qwindow = c(0,24),        ilevels = c(seq(0,400,by=50),8000),        mvpathreshold = c(100,120),        #-------------------------------        # Part 3 parameters:        #-------------------------------        timethreshold = c(5,10),        anglethreshold = 5,        ignorenonwear = TRUE,        #-------------------------------        # Part 4 parameters:        #-------------------------------        excludefirstlast = FALSE,        includenightcrit = 16,        def.noc.sleep = 1,        loglocation = \"D:/sleeplog.csv\",        outliers.only = FALSE,        criterror = 4,        relyonguider = FALSE,        colid = 1,        coln1 = 2,        do.visual = TRUE,        #-------------------------------        # Part 5 parameters:        #-------------------------------        # Key functions: Merging physical activity with sleep analyses        threshold.lig = c(30,40,50),        threshold.mod = c(100,120),        threshold.vig = c(400,500),        excludefirstlast = FALSE,        boutcriter = 0.8,        boutcriter.in = 0.9,        boutcriter.lig = 0.8,        boutcriter.mvpa = 0.8,        boutdur.in = c(10,20,30),        boutdur.lig = c(1,5,10),        boutdur.mvpa = c(1,5,10),        timewindow = c(\"WW\"),        #-----------------------------------        # Report generation        #-------------------------------        do.report = c(2,4,5))         # For externally derived Actiwatch data in .AWD format:        GGIR(datadir = \"/media/actiwatch_awd\", # folder with epoch level .AWD file           outputdir = \"/media/myoutput\",           dataFormat = \"actiwatch_awd\",           extEpochData_timeformat = \"%m/%d/%Y %H:%M:%S\",           mode = 1:5,           do.report = c(2, 4, 5),           windowsizes = c(60, 900, 3600), # 60 is the expected epoch length           visualreport = FALSE,           outliers.only = FALSE,           overwrite = TRUE,           HASIB.algo = \"Sadeh1994\",           def.noc.sleep = c()) # <= because we cannot use HDCZA for ZCY         # For externally derived Actiwatch data in .CSV format:        GGIR(datadir = \"/media/actiwatch_csv\", # folder with epoch level .AWD file           outputdir = \"/media/myoutput\",           dataFormat = \"actiwatch_csv\",           extEpochData_timeformat = \"%m/%d/%Y %H:%M:%S\",           mode = 1:5,           do.report = c(2, 4, 5),           windowsizes = c(15, 900, 3600), # 15 is the expected epoch length           visualreport = FALSE,           outliers.only = FALSE,           HASIB.algo = \"Sadeh1994\",           def.noc.sleep = c()) # <= because we cannot use HDCZA for ZCY         # For externally derived UK Biobank data in .CSV format:        GGIR(datadir = \"/media/ukbiobank\",            outputdir = \"/media/myoutput\",            dataFormat = \"ukbiobank_csv\",            extEpochData_timeformat = \"%m/%d/%Y %H:%M:%S\",            mode = c(1:2),            do.report = c(2),            windowsizes = c(5, 900, 3600), # We know that data was stored in 5 second epoch            desiredtz = \"Europe/London\", # We know that data was collected in the UK            visualreport = FALSE,            overwrite = TRUE)                 # For externally derived ActiGraph count data in .CSV format assuming        # a study protocol where sensor was not worn during the night:        GGIR(datadir = \"/examplefiles\",            outputdir = \"\",            dataFormat = \"actigraph_csv\",            mode = 1:5,            do.report = c(2, 4, 5),            windowsizes = c(5, 900, 3600),            threshold.in = round(100 * (5/60), digits = 2),            threshold.mod = round(2500 * (5/60), digits = 2),            threshold.vig = round(10000 * (5/60), digits = 2),            extEpochData_timeformat = \"%m/%d/%Y %H:%M:%S\",            do.neishabouricounts = TRUE,            acc.metric = \"NeishabouriCount_x\",            HASPT.algo = \"NotWorn\",            HASIB.algo = \"NotWorn\",            do.visual = TRUE,            includedaycrit = 10,            includenightcrit = 10,            visualreport = FALSE,            outliers.only = FALSE,            save_ms5rawlevels = TRUE,            ignorenonwear = FALSE,            HASPT.ignore.invalid = FALSE,            save_ms5raw_without_invalid = FALSE)   }"},{"path":"/reference/HASIB.html","id":null,"dir":"Reference","previous_headings":"","what":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","title":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","text":"Apply heuristic algorithms sustiained inactivty bouts detection.   Function intended direct use package user","code":""},{"path":"/reference/HASIB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","text":"","code":"HASIB(HASIB.algo = \"vanHees2015\", timethreshold = c(), anglethreshold = c(),                   time = c(), anglez = c(), ws3 = c(), zeroCrossingCount = c(),                  BrondCount = c(),                  NeishabouriCount = c(), activity = NULL)"},{"path":"/reference/HASIB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","text":"HASIB.algo Character indicator sib algorithm used.     Default value: \"vanHees2015\". options: \"Sadeh1994\", \"Galland2012\", \"ColeKripke1992\" anglethreshold See g.sib.det timethreshold See g.sib.det time Vector time per short epoch anglez Vector z-angle per short epoch ws3 See g.getmeta zeroCrossingCount Vector zero crossing counts per epoch required count-based algorithms BrondCount Vector Brond counts per epoch used count-based algorithms NeishabouriCount Vector Neishabouri counts per epoch used count-based algorithms activity Magnitude acceleration, used HASIB.algo set NotWorn.     Acceleration metric used specified argument acc.metric      elsewhere GGIR.","code":""},{"path":"/reference/HASIB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","text":"Vector binary indicator sustained inactivity bout, 1 yes, 0 .","code":""},{"path":"/reference/HASIB.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heuristic algorithms for sustiained inactivty bouts detection — HASIB","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/HASPT.html","id":null,"dir":"Reference","previous_headings":"","what":"Heuristic Algorithms estimating SPT window. — HASPT","title":"Heuristic Algorithms estimating SPT window. — HASPT","text":"used function g.sib.det. Function intended direct use   GGIR user.","code":""},{"path":"/reference/HASPT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heuristic Algorithms estimating SPT window. — HASPT","text":"","code":"HASPT(angle, perc = 10, spt_threshold = 15, sptblocksize = 30,        spt_max_gap = 60, ws3 = 5, constrain2range = FALSE,       HASPT.algo=\"HDCZA\", invalid, HASPT.ignore.invalid=FALSE, activity)"},{"path":"/reference/HASPT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heuristic Algorithms estimating SPT window. — HASPT","text":"angle Vector epoch level estimates angle perc Number indicate percentage threshold (default 10 corresponds 2018     paper) spt_threshold Numeric threshold used HASPT algorithm (default 15 corresponds      2018 paper) sptblocksize Number indicate minimum SPT block size (minutes) spt_max_gap Number indicate maximum gap (minutes) SPT window blocks. ws3 Number representing epoch length seconds constrain2range Bolean indicate whether threshold constrained range HASPT.algo Character indicate algortihm used. Default \"HDCZA\"      Heuristic algorithm looking Distribution Change Z-Angle     described van Hees et al. 2018. options included:     \"HorAngle\", based HDCZA replaces non-movement detection      HDCZA algorithm looking time segments angle      longitudinal sensor axis angle relative horizontal plane     -45 +45 degrees. invalid Integer vector per epoch indicator valid(=0) invalid(=1) epoch. HASPT.ignore.invalid Boolean indicate whether invalid time segments ignored activity Magnitude acceleration, used HASPT.algo set NotWorn.     Acceleration metric used specified argument acc.metric      elsewhere GGIR.","code":""},{"path":"/reference/HASPT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heuristic Algorithms estimating SPT window. — HASPT","text":"List start end times SPT window threshold used.","code":""},{"path":"/reference/HASPT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Heuristic Algorithms estimating SPT window. — HASPT","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/identify_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies levels of behaviour for g.part5 function. — identify_levels","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"Identifies levels behaviour acceleratioon   sustained inactivity sibdetection (using angles). Function   intended direct use package user.","code":""},{"path":"/reference/identify_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"","code":"identify_levels(ts, TRLi,TRMi,TRVi,                   ws3, params_phyact, ...)"},{"path":"/reference/identify_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"ts Data.frame time series genrated .gpart5 TRLi Numeric acceleration threshold light TRMi Numeric acceleration threshold moderate TRVi Numeric acceleration threshold vigorous ws3 Numeric size epoch seconds params_phyact See g.part2 ... argument used previous version identify_level, now      used overrule arguments specified parameter objects.","code":""},{"path":"/reference/identify_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"List items:  LEVELS OLEVELS Lnames bc.mvpa bc.lig bc.ts","code":""},{"path":"/reference/identify_levels.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/identify_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies levels of behaviour for g.part5 function. — identify_levels","text":"","code":"if (FALSE) {     levels = identify_levels(TRLi,TRMi,TRVi,                                boutdur.mvpa,boutcriter.mvpa,                                boutdur.lig,boutcriter.lig,                                boutdur.in,boutcriter.in,                                ws3,bout.metric)   }"},{"path":"/reference/is.ISO8601.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether character timestamp is in iso8601 format. — is.ISO8601","title":"Check whether character timestamp is in iso8601 format. — is.ISO8601","text":"Checks whether timestamp stored character format ISO8601 format ","code":""},{"path":"/reference/is.ISO8601.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether character timestamp is in iso8601 format. — is.ISO8601","text":"","code":"is.ISO8601(x)"},{"path":"/reference/is.ISO8601.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether character timestamp is in iso8601 format. — is.ISO8601","text":"x Timestamps character format either ISO8601 \"yyyy-mm-dd hh:mm:ss\".","code":""},{"path":"/reference/is.ISO8601.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether character timestamp is in iso8601 format. — is.ISO8601","text":"","code":"x =\"1980-1-1 18:00:00\" is.ISO8601(x) #> [1] FALSE"},{"path":"/reference/isfilelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","title":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","text":"Checks whether argument datadir used various functions  GGIR name directory includes data files whether vector full paths one data files","code":""},{"path":"/reference/isfilelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","text":"","code":"isfilelist(datadir)"},{"path":"/reference/isfilelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","text":"datadir Argument datadir used various functions GGIR","code":""},{"path":"/reference/isfilelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","text":"Boolean whether list files (TRUE) (FALSE)","code":""},{"path":"/reference/isfilelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether datadir is a directory or a vector with\r\nfilenames — isfilelist","text":"","code":"if (FALSE) { isitafilelist = isfilelist(datadir) }"},{"path":"/reference/ismovisens.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","title":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","text":"Checks whether files datadir folder files collected   movisens accelerometers. Note movisens data stored one folder per recording includes multiple bin-files   (instead one file per recording usual accelerometer brands). Therefore, datadir indicates   directory recording folders stored, , GGIR reads pertinent bin files   every folder.","code":""},{"path":"/reference/ismovisens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","text":"","code":"ismovisens(data)"},{"path":"/reference/ismovisens.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","text":"data Full path recording folder (bin files inside)      datadir (recording folders stored).","code":""},{"path":"/reference/ismovisens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","text":"Boolean whether movisens file (TRUE) (FALSE)","code":""},{"path":"/reference/ismovisens.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks whether the files to process are collected with movisens accelerometers. — ismovisens","text":"","code":"if (FALSE) {     is.mv = ismovisens(data)   }"},{"path":"/reference/iso8601chartime2POSIX.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert iso8601 timestamps to POSIX timestamp — iso8601chartime2POSIX","title":"Convert iso8601 timestamps to POSIX timestamp — iso8601chartime2POSIX","text":"avoid ambiguities sharing comparing timestamps. timestamps expressed iso8601 format: https://en.wikipedia.org/wiki/ISO_8601 However, generate plots R need convert back POSIX","code":""},{"path":"/reference/iso8601chartime2POSIX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert iso8601 timestamps to POSIX timestamp — iso8601chartime2POSIX","text":"","code":"iso8601chartime2POSIX(x,tz)"},{"path":"/reference/iso8601chartime2POSIX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert iso8601 timestamps to POSIX timestamp — iso8601chartime2POSIX","text":"x Vector timestamps iso8601 character format tz Timezone data collection, e.g. \"Europe/London\".   See List_of_tz_database_time_zones Wikipedia  full list.","code":""},{"path":"/reference/iso8601chartime2POSIX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert iso8601 timestamps to POSIX timestamp — iso8601chartime2POSIX","text":"","code":"x =\"2017-05-07T13:00:00+0200\" tz = \"Europe/Amsterdam\" x_converted = iso8601chartime2POSIX(x,tz)"},{"path":"/reference/is_this_a_dst_night.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","title":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","text":"Tests whether night follows input calendar date night day saving time (DST) hour time moved.","code":""},{"path":"/reference/is_this_a_dst_night.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","text":"","code":"is_this_a_dst_night(calendar_date=c(),tz=\"Europe/London\")"},{"path":"/reference/is_this_a_dst_night.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","text":"calendar_date Character format dd/mm/yyyy tz Time zone \"Europe/London\" format.","code":""},{"path":"/reference/is_this_a_dst_night.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","text":"dst_night_or_not value=0 DST, value=1 time moved forward,   value=-1 time moved forward dsthour Either double hour hour skipped,    differs countries","code":""},{"path":"/reference/is_this_a_dst_night.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether the night starting on a calendar date has DST. — is_this_a_dst_night","text":"","code":"test4dst = is_this_a_dst_night(\"23/03/2014\",tz=\"Europe/London\")"},{"path":"/reference/load_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Load default parameters — load_params","title":"Load default parameters — load_params","text":"Loads default paramter values   intended direct use GGIR users.","code":""},{"path":"/reference/load_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load default parameters — load_params","text":"","code":"load_params(topic = c(\"sleep\", \"metrics\", \"rawdata\", \"247\",                         \"phyact\", \"cleaning\", \"output\", \"general\"))"},{"path":"/reference/load_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load default parameters — load_params","text":"topic Character vector parameter groups loaded.","code":""},{"path":"/reference/load_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load default parameters — load_params","text":"Lists parameter objects","code":""},{"path":"/reference/load_params.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Load default parameters — load_params","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/parametersVignette.html","id":null,"dir":"Reference","previous_headings":"","what":"Builds Section for Parameters Vignette — parametersVignette","title":"Builds Section for Parameters Vignette — parametersVignette","text":"Function extracts documentation given GGIR argument provided GGIR documentation   builds structure Parameters Vignette.   Function designed direct use package user.","code":""},{"path":"/reference/parametersVignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Builds Section for Parameters Vignette — parametersVignette","text":"","code":"parametersVignette(params = \"sleep\")"},{"path":"/reference/parametersVignette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Builds Section for Parameters Vignette — parametersVignette","text":"params Character (default = \"sleep\").      Name parameters object build corresponding section Parameters vignette.","code":""},{"path":"/reference/parametersVignette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Builds Section for Parameters Vignette — parametersVignette","text":"Structure vignette subsection.","code":""},{"path":"/reference/parametersVignette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Builds Section for Parameters Vignette — parametersVignette","text":"Jairo Hidalgo Migueles <jairo.hidalgo.migueles@gmail.com>","code":""},{"path":"/reference/part6AlignIndividuals.html","id":null,"dir":"Reference","previous_headings":"","what":"part6AlignIndividuals — part6AlignIndividuals","title":"part6AlignIndividuals — part6AlignIndividuals","text":"Align individual time series per household households identified   character number string first second '-' filename.","code":""},{"path":"/reference/part6AlignIndividuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"part6AlignIndividuals — part6AlignIndividuals","text":"","code":"part6AlignIndividuals(GGIR_ts_dir = NULL, outputdir = NULL,                       path_ggirms = NULL, desiredtz = \"\", verbose = TRUE)"},{"path":"/reference/part6AlignIndividuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"part6AlignIndividuals — part6AlignIndividuals","text":"GGIR_ts_dir Character, path time series directory GGIR output outputdir Directory like store output path_ggirms path GGIR created folder named meta, milestone data files desiredtz Character, specifying timezone database name timezone      data collected . verbose See details GGIR.","code":""},{"path":"/reference/part6AlignIndividuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"part6AlignIndividuals — part6AlignIndividuals","text":"object returned, files created output directory","code":""},{"path":"/reference/part6PairwiseAggregation.html","id":null,"dir":"Reference","previous_headings":"","what":"part6PairwiseAggregation — part6PairwiseAggregation","title":"part6PairwiseAggregation — part6PairwiseAggregation","text":"Pairwise aggregation time series group.","code":""},{"path":"/reference/part6PairwiseAggregation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"part6PairwiseAggregation — part6PairwiseAggregation","text":"","code":"part6PairwiseAggregation(outputdir = NULL, desiredtz = \"\", verbose = TRUE)"},{"path":"/reference/part6PairwiseAggregation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"part6PairwiseAggregation — part6PairwiseAggregation","text":"outputdir Directory like store results desiredtz Character, specifying timezone database name      timezone data collected verbose See details GGIR.","code":""},{"path":"/reference/part6PairwiseAggregation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"part6PairwiseAggregation — part6PairwiseAggregation","text":"object returned, files created output directory","code":""},{"path":"/reference/POSIXtime2iso8601.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","title":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","text":"avoid ambiguities sharing comparing timestamps. timestamps expressed iso8601 format: https://en.wikipedia.org/wiki/ISO_8601","code":""},{"path":"/reference/POSIXtime2iso8601.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","text":"","code":"POSIXtime2iso8601(x,tz)"},{"path":"/reference/POSIXtime2iso8601.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","text":"x Vector timestamps POSIX format tz Timezone data collection, e.g. \"Europe/London\".  See  https://en.wikipedia.org/wiki/List_of_tz_database_time_zones  full list","code":""},{"path":"/reference/POSIXtime2iso8601.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/POSIXtime2iso8601.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert POSIX to iso8601 timestamp — POSIXtime2iso8601","text":"","code":"if (FALSE) { x =\"2017-05-07 13:15:17 CEST\" tz = \"Europe/Amsterdam\" x_converted = POSIXtime2iso8601(x,tz) }"},{"path":"/reference/read.myacc.csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read custom csv files with accelerometer data — read.myacc.csv","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"Loads csv files accelerometer data standardises    output format (incl. unit measurement, timestamp format,   header format, column locations) make data compatible   GGIR functions.","code":""},{"path":"/reference/read.myacc.csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"","code":"read.myacc.csv(rmc.file=c(), rmc.nrow=Inf, rmc.skip = c(), rmc.dec=\".\",                           rmc.firstrow.acc = 1, rmc.firstrow.header=c(),                           rmc.header.length = c(),                           rmc.col.acc = 1:3, rmc.col.temp = c(),                            rmc.col.time=c(),                           rmc.unit.acc = \"g\", rmc.unit.temp = \"C\",                            rmc.unit.time = \"POSIX\",                           rmc.format.time = \"%Y-%m-%d %H:%M:%OS\",                           rmc.bitrate = c(), rmc.dynamic_range = c(),                            rmc.unsignedbit = TRUE,                           rmc.origin = \"1970-01-01\",                           rmc.desiredtz = NULL,                           rmc.configtz = NULL,                           rmc.sf = c(),                           rmc.headername.sf = c(),                           rmc.headername.sn = c(),                           rmc.headername.recordingid = c(),                           rmc.header.structure = c(),                           rmc.check4timegaps = FALSE,                           rmc.col.wear = c(),                           rmc.doresample = FALSE,                           rmc.scalefactor.acc = 1,                           interpolationType=1,                            PreviousLastValue = c(0, 0, 1),                           PreviousLastTime = NULL,                           epochsize = NULL,                           desiredtz = NULL,                           configtz = NULL)"},{"path":"/reference/read.myacc.csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"rmc.file Filename file read working directory, full path file otherwise. rmc.nrow Number rows read, nrow argument read.csv nrows fread. whole file read default (.e., rmc.nrow = Inf). rmc.skip Number rows skip, skip argument read.csv fread. rmc.dec Decimal used numbers, skip argument read.csv fread. rmc.firstrow.acc First row (number) acceleration data. rmc.firstrow.header First row (number) header. Leave blank file     header. rmc.header.length file header, specify header length (numeric). rmc.col.acc Vector three column (numbers) acceleration signals     stored rmc.col.temp Scalar column (number) temperature stored.     Leave default setting temperature avaible. temperature     used g.calibrate. rmc.col.time Scalar column (number) timestamps stored.     Leave default setting timestamps stored. rmc.unit.acc Character unit acceleration values: \"g\", \"mg\", \"bit\" rmc.unit.temp Character unit temperature values: (K)elvin, (C)elsius, (F)ahrenheit rmc.unit.time Character unit timestamps: \"POSIX\",     \"UNIXsec\" (seconds since origin, see argument rmc.origin), \"character\",     \"ActivPAL\" (exotic timestamp format used ActivPAL     activity monitor).  rmc.format.time Character string giving date-time format used strptime. used rmc.unit.time: character POSIX. rmc.bitrate Numeric: unit acceleration bit provide bit rate, e.g. 12 bit. rmc.dynamic_range Numeric, unit acceleration bit provide dynamic range deviation     g zero, e.g. +/-6g mean argument needs 6. give     argument character value code search file header elements     name equal character value use corresponding numeric value     next dynamic range. rmc.unsignedbit Boolean, unsignedbit = TRUE means bits positive numbers.    unsignedbit = FALSE bits positive negative. rmc.origin Origin time unit time UNIXsec, e.g. 1970-1-1 rmc.desiredtz Deprecated, please see desiredtz. rmc.configtz Deprecated, please see configtz. rmc.sf Sample rate Hertz, stored file header used     instead. rmc.headername.sf file header: Row name (character) sample     frequency can found. rmc.headername.sn file header: Row name (character)     serial number can found. rmc.headername.recordingid file header: Row name (character)     recording ID can found. rmc.header.structure Character used split header name header     value, e.g. \":\" \" \" rmc.check4timegaps Boolean indicate whether gaps time imputed zeros.     sensing equipment provides accelerometer gaps time. rest      GGIR designed , setting argument TRUE gaps     time filled zeros. rmc.col.wear external wear detection outcome stored part data can used GGIR.     argument specifies column wear detection (Boolean) stored. rmc.doresample Boolean indicate whether resample data based available timestamps extracted     sample rate file header rmc.scalefactor.acc Numeric value (default 1) scale acceleration signals via multiplication.     example, data provided m/s2 setting 1/9.81     derive gravitational units. interpolationType Integer indicate type interpolation used resampling time series (mainly relevant Axivity sensors), 1=linear, 2=nearest neighbour. PreviousLastValue Automatically identified last value previous chunk data read. PreviousLastTime Automatically identified last timestamp previous chunk data read. epochsize Numeric vector length two, short long epoch sizes. used GGIR internally. desiredtz Timezone device worn. configtz Timezone device configured. equal desiredtz can leave     default value.","code":""},{"path":"/reference/read.myacc.csv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"use function context GGIR use arguments function,   except rmc.file, rmc.nrow,  rmc.skip input function GGIR g.part1 also specify argument rmc.noise, part function needed tell GGIR noise level expect data. rmc.noise taken params_rawdata object explicitly specified user.","code":""},{"path":"/reference/read.myacc.csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"List objects data holding time series acceleration,   header available orignal file.","code":""},{"path":"/reference/read.myacc.csv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"Vincent T van Hees <v.vanhees@accelting.com>","code":""},{"path":"/reference/read.myacc.csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read custom csv files with accelerometer data — read.myacc.csv","text":"","code":"# create test files: No header, with temperature, with time   N = 30   sf = 30   x = Sys.time()+((0:(N-1))/sf)   timestamps = as.POSIXlt(x, origin=\"1970-1-1\", tz = \"Europe/London\")   mydata = data.frame(x = rnorm(N), time = timestamps, y = rnorm(N), z = rnorm(N),             temp = rnorm(N) + 20)   testfile = \"testcsv1.csv\"   write.csv(mydata, file= testfile, row.names = FALSE)   loadedData = read.myacc.csv(rmc.file=testfile, rmc.nrow=20, rmc.dec=\".\",                       rmc.firstrow.acc = 1, rmc.firstrow.header=c(),                       desiredtz = \"\",                       rmc.col.acc = c(1,3,4), rmc.col.temp = 5, rmc.col.time=2,                       rmc.unit.acc = \"g\", rmc.unit.temp = \"C\", rmc.origin = \"1970-01-01\")   if (file.exists(testfile)) file.remove(testfile) #> [1] TRUE"},{"path":"/reference/ShellDoc2Vignette.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Definition from Shell Documentation — ShellDoc2Vignette","title":"Extract Definition from Shell Documentation — ShellDoc2Vignette","text":"Function extracts documentation given GGIR argument provided GGIR documentation.   Function designed direct use package user.","code":""},{"path":"/reference/ShellDoc2Vignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Definition from Shell Documentation — ShellDoc2Vignette","text":"","code":"ShellDoc2Vignette(argument = \"mode\")"},{"path":"/reference/ShellDoc2Vignette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Definition from Shell Documentation — ShellDoc2Vignette","text":"argument Character (default = \"mode\").      Name argument extract definition.","code":""},{"path":"/reference/ShellDoc2Vignette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Definition from Shell Documentation — ShellDoc2Vignette","text":"Character object definition argument.","code":""},{"path":"/reference/ShellDoc2Vignette.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Definition from Shell Documentation — ShellDoc2Vignette","text":"Jairo Hidalgo Migueles <jairo.hidalgo.migueles@gmail.com>","code":""},{"path":"/reference/tidyup_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"Identifies columns can coerced numeric data frame,    transforms columns numeric round specified digits.    also replaces NA NaNs values blank.","code":""},{"path":"/reference/tidyup_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"","code":"tidyup_df(df = c(), digits = 3)"},{"path":"/reference/tidyup_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"df Data frame digits Integer indicating number decimal places (round) significant digits (signif) used","code":""},{"path":"/reference/tidyup_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"Data frame possible columns numeric rounded specified number digits","code":""},{"path":"/reference/tidyup_df.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"Jairo H Migueles","code":""},{"path":"/reference/tidyup_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Round numeric columns and replace NA/NaN values by blank — tidyup_df","text":"","code":"# Test data frame   df = data.frame(a = c(\"a\", \"b\"), b = as.character(c(1.543218, 8.216856483)))   tidyup_df(df = df, digits = 3) #>   a     b #> 1 a 1.543 #> 2 b 8.217"},{"path":"/reference/updateBlocksize.html","id":null,"dir":"Reference","previous_headings":"","what":"Update blocksize of data to be read depending on available memory. — updateBlocksize","title":"Update blocksize of data to be read depending on available memory. — updateBlocksize","text":"Function queries available memory either lower increase blocksize   used function g.readaccfile","code":""},{"path":"/reference/updateBlocksize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update blocksize of data to be read depending on available memory. — updateBlocksize","text":"","code":"updateBlocksize(blocksize, bsc_qc)"},{"path":"/reference/updateBlocksize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update blocksize of data to be read depending on available memory. — updateBlocksize","text":"blocksize Number filepages (binary data) rows (dataformats). bsc_qc Data.frame columns time (timestamp Sys.time) size (memory size).     used housekeeping g.calibrate g.getmeta","code":""},{"path":"/reference/updateBlocksize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update blocksize of data to be read depending on available memory. — updateBlocksize","text":"List blocksize bsc_qc, format input, although bsc_qc one new   row.","code":""},{"path":"/RELEASE_CYCLE.html","id":null,"dir":"","previous_headings":"","what":"Version numbering","title":"Version numbering","text":"use version encoding .B-C: increases major changes affect backward compatibility previous releases like changes function names, function arguments file format. B increases every CRAN release. aim avoid four CRAN releases per year. C increases every GitHub release. aim avoid one GitHub release per month.","code":""},{"path":"/RELEASE_CYCLE.html","id":"github-releases","dir":"","previous_headings":"","what":"GitHub releases","title":"Version numbering","text":"releasing, please make sure check following: Create GitHub issue least 1 weeks intended release announce release indicate release. Make sure change log inst/NEWS.Rd date says “GitHub--release date” rather “release date” Make sure third (last) digit version number incremented one relative master branch date present date. applies files DESCRIPTION, GGIR-package.Rd NEWS.Rd file. Use function prepareNewRelease.R root GGIR double check version number date consistent files. Update package contributor list new people contributed. Run R CMD check ---cran make sure tests checks pass. Note GitHub releases require release name. typically choose random name city town South America. Whatever choose easy read remember word.","code":""},{"path":"/RELEASE_CYCLE.html","id":"cran-releases","dir":"","previous_headings":"","what":"CRAN releases","title":"Version numbering","text":"CRAN release, follow following steps: Create GitHub issue least 4 weeks intended CRAN release announcing release indicating release list. CRAN release come major changes covered GitHub-releases. change log now say “release date” rather “GitHub--release date”. Second digit version number incremented 1 relative current CRAN version. Check whether new R version released coming make sure GGIR also tested version. Run RStudio devtools::check( manual = TRUE, remote = TRUE, incoming = TRUE) help check urls Ask Vincent (GitHub tag: vincentvanhees) submit release CRAN needs come e-mail address.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-30-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 3.0-1","title":"CHANGES IN GGIR VERSION 3.0-1","text":"Part 2: Added possibility csv file date-oriented definition study protocol #943 Part 5: New function provide definition variable names part 5 reports #938 Part 2: Bug fix csv report generation appending part 2 milestone data differing number columns #951 Part 1: Bug fix gt3x data reading avoiding duplication seconds appending chunks data #952 Part 1 + 2: Log information regarding number time gaps total time imputed function g.imputeTimeGaps #571 Part 6: Added new part now Household co-analysis Cosinor analysis","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-30-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 3.0-0","title":"CHANGES IN GGIR VERSION 3.0-0","text":"CRAN release: 2023-10-16 Part 1 2: Change default value nonwear_approach “2023” labels entire window nonwear conditions met. instead middle 15 minutes case “2013” setting. , setting “2023” now uses 5 Hertz version signals non-wear detection, clipping detection code uses original signal. Part 2: Move cosinor analysis code function order ease re-using part 2 part 6. Part2: Expand cosinor analysis R2 Part 2: Arguments hrs.del.start hrs.del.end combined strategy = 3 strategy = 5 now count relative start end active time window identified. #905 Part 5: Change default segmentDAYSPTcrit.part5 c(0,0) c(0, 0.9) now prohibiting use c(0, 0) gives biased estimates. knew , users started using default without attempting understand , seems necessary force sensible default. #940 Add contributing guidelines github.io documentation #923 Part 5: Added optioned “OO” argument timewindow, defines windows sleep Onset sleep Onset #931","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-210-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.10-4","title":"CHANGES IN GGIR VERSION 2.10-4","text":"Part 4: Now better able handle nights without sustained inactivity bouts (rest) #911 Part 5: Function g.fragmentation code cleaned , TP formulas revised following feedback Ian Danilevicz, code now also produces sleep fragmentation #817 Part 1: Fixed issue #914 relating specifying timezone processing ad-hoc csv format raw data. Part 1: Improved recognition ActiGraph csv occassionally confused Axivity csv #918 Part 1: Added argument rmc.scalefactor.acc used read.myacc.csv #887 Vignette: Expanded paragraph minimum recording duration #835 Part 4: informative error message advanced sleep log duplicate missing dates #925 Fix recently introduced bug GGIR environment exported cluster GGIR part 1, 2, 3, 5 #910","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-210-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.10-3","title":"CHANGES IN GGIR VERSION 2.10-3","text":"Part 1: Fixed minor bug ismovisens failed datadir started “./” #897 Part 5: Now able assess overlap self-reported naps nonwear sustained inactivity bouts order facilitate research nap detection. Fixes #687 Part 5: Time series now also exported recording includes one night, even though sufficient main part 5 analyses. #894 , time series now also come lightpeak (LUX). Visualreport: Bug fixed extracting numeric value days exclude g.plot5 #879 Part 1: Fixed minor bug keep calibration data data quality report re-running parts 1 2 overwrite = TRUE backup.cal.coef = “retrieve” #896 Part 5: Fix minor bug GGIR skipped last day measurement finishes midnight timewindow = MM #891 Part 4: Added parameter sleepefficiency.metric decide -bed time (denominator) guider_spt acc_spt + latency #811","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-210-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.10-2","title":"CHANGES IN GGIR VERSION 2.10-2","text":"Part 1: Revision readability code (credits: Lena Kushleyeva) Part 1: Improved handling corrupted .gt3x files #873 Part 1 + 2: Bug fixed logging file health Axivity data Part 2: Addresses confusing error message users #888","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-210-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.10-1","title":"CHANGES IN GGIR VERSION 2.10-1","text":"CRAN release: 2023-08-10 Part 1 + 2: File health log captured dependency GGIRread::readAxivity incorporated data_quality_report #866 Part 1: Fix ID extraction externally generated epoch files #869 Sleep log: Argument nnigths now deprecated number nights detected automatically sleep logs #856 Sleep log: Minor fixed related misplaced parenthesis g.loadlog automatic extension sleeplog matrix needed avoid error #867 General: recording starts midnight 4am, wake time first day now derived parts 3-4 used part 5 #859 Part 1: Fix major bug .gt3x data autocalibration (ActiGraph), autocalibration done applied data #864 Refactored code functions g.analyse.perfile various functions name starts “g.part5”","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-6","title":"CHANGES IN GGIR VERSION 2.9-6","text":"Part 1: Fix .gt3x file serial number firmware extraction #850 Part 5: Now able segment days based qwindow #815 Part 5: Fix minor bug related definition MM window (biased 1 epoch) #838 Part 5: Now g.part5.lux_persegment able handle timestamp iso8601 format #848 Part 5: Fix minor bug GGIR skipped last day measurement starts midnight timewindow = MM #852 Activity log: Fix minor bug appeared seconds activity log compatible epoch length used GGIR #844 Config file: Fix minor bug ignoring local function getExt config file #846 Update authors’ information DESCRIPTION CITATION files Added structure github.io documentation page","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-5","title":"CHANGES IN GGIR VERSION 2.9-5","text":"Part 4: Now able handle first night without sustained inactivity bout detected #812 Vignettes: Buchan et al. 2023 cut-points adults included cut-points vignette #804 Part 4: Identification column names advanced sleeplog now case insensitive #812 Part 1: Functionality append recordings ID, see argument maxRecordingInterval #972 Part 1: Handling external derived epoch data now able handle empty lines, user can now specify format timestamps argument extEpochData_timeformat, ActiGraph count data also facilitated. Part 1: Deprecate functionality file formats .wav (Axivity Ltd) .bin (Unilever Discover) keeping code date newer R versions took lot time. interestedin re-inserting functionality contributing ongoing maintenance please contact us. Part 1: Fully deprecate function g.cwaread migrated GGIRread year ago. Address #834 using POSIXct possible avoiding use POSIXlt data.frame.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-4","title":"CHANGES IN GGIR VERSION 2.9-4","text":"Open-Source Software License GGIR changed Apache 2.0 General: included functionality allow user select separator csv files written GGIR: reports part 2, part 4 part 5, data_quality_report.csv, config.csv #770. General: increased flexibility read csv files related sleeplog, activity log, data cleaning file, csv containing calibration coefficients, automatically detecting separator argument set [,;] function data.table::fread #770. Part 4: Bug fixed determination SPT daysleeper #802","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-3","title":"CHANGES IN GGIR VERSION 2.9-3","text":"General: automatic detection missing suggested packages GGIRread code recognises needed #786. Vignettes: instruction expanded install additional R packages #786. Part 2: minor bug fixed strategy = 3 strategy = 5 (now consider first ndaywindow equal max activity level) #796 Visualreport: Argument visualreport_without_invalid added #780 Adding keyword internal many GGIR functions intended direct used user reduce size package pdf documentation ease navigation user #679 Vignette documentation: Adding motivation using term sedentary behaviour warning visualreport optimised quality checking GGIR results. Visualreport: now flags non-wear plot based part 2 milestone data.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-2","title":"CHANGES IN GGIR VERSION 2.9-2","text":"Part 1: function new algorithm non-wear time detection flags full ws3 window non-wear #645. Part 1: Can now handle ActiGraph csv first timegap occurs first day recording #784 #790 Vignettes: expansion cut-point vignette information activity counts-based cut-points #771. Reports: Part 5 rows now ordered numerically #769.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-1","title":"CHANGES IN GGIR VERSION 2.9-1","text":"General: warnings added inform user rmc.desiredtz rmc.configtz deprecated #765. Part 1: Function g.calibrate now able handle zero variation temperature data #785. Part 1: Facilitate working epoch level data produced external software #756 Part 2: strategy = 5 implemented variation strategy 3 (allows select active X calendar days) #768. Part 2: fixed bug strategy = 3 now selects acc.metric interest #768. Part 3 + 4: Update date handling SleepRegularityIndex compatible latest R version #782. Part 5: minor bug #775 fixed separation first second day one set thresholds defined MM WW timewindows extracted. Part 5: intensity gradient now also calculated full window part 5 column names now indicate window intensity gradient calculated (.e., “day” “day_spt”) #763.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-29-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.9-0","title":"CHANGES IN GGIR VERSION 2.9-0","text":"CRAN release: 2023-03-24 Sleep log: fixed bug related reading last day advanced sleeplog. Reports: nights part 4 reports now correctly ordered. Documentation: improved documentation use acceleration metrics Part 2: Functionality storefolderstructure now consistent part 5","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-7","title":"CHANGES IN GGIR VERSION 2.8-7","text":"Part 1: Deprecating dependency GENEAread package, now onward GGIRread used reading GENEActiv binary data #627 Part 2: Argument nonWearEdgeCorrection added control whether part nonwear detection algorithm used #749. Minor edits make GGIR code backward compatible R version 3.3 . Reports: GGIR now skips csv visualreport generation required milestone data available. Part 5: Speed improvements functions g.part5.addsib g.part5.wakesleepwindow Part 5: Bug fixed relation long recordings many days non-wear data part 5 #727 Now able handle OS Windows-friendly double backward slash filepaths datadir, outputdir, qwindow, loglocation data_cleaning_file arguments #570. verbose argument added allow turning console message #652 Relevant GGIR developers : GGIR can now tested source without GGIR needing installed #704","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-6","title":"CHANGES IN GGIR VERSION 2.8-6","text":"Part 2: Bug fixed caused columns N valid week/weekend days omitted #747. Vignettes: Add cross-references vignettes ease navigation link R introduction tutorial #720. Vignette: Section added MX-metrics (thanks Alex Rowlands + Ben Maylor input) #723. Part 1: Expand timegap imputation functionality also imputation timestamps #742 Part 1: Add configtz argument function read.myacc.csv #740 Part 1: Interpolate timestamps lack decimal places #705 Part 5: fixed minor bug axivity light data stored factor part 1.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-5","title":"CHANGES IN GGIR VERSION 2.8-5","text":"Part 1: cwa now detected ignoring case file extension g.inspectfile #731 Part 2: Bug fixes accounting 25 hour days part 2 day level analyses #728. Part 2: Seconds activitylog timestamps now handled g.conv.actlog Part 2: Fixed #733 related qwindows first recording day Part 4: argument sleeplogidnum deprecated, ID class now auto-detected. Part 1, 2, 4, 5: Fixes bug (#732 first half). Filenames longer ordered prior processing make robust work raw data stratified across multiple subdirectories. Visual report: Now uses part 3 milestone data consistently reference avoid inconsistencies part 3 milestone data files generated #732 (second half).","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-4","title":"CHANGES IN GGIR VERSION 2.8-4","text":"Part 1: Improved handling expand_tail_max_hours functionality replacing argument recordingEndSleepHour. , expanded time now ignored reports visualizations. Part 5: dayborder != 0 now handled g.part5.wakesleepwindow Part 5: excludefirstlast.part5 now applied per window type g.report.part5 Part 2 5: arguments bout.metric closedbout deprecated, g.getbout function simplified single algorithm. Part 2 5: Bout detection fixed can now detect bouts equal epoch length, epochs less 30 seconds overestimate bout length 1 epoch.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-3","title":"CHANGES IN GGIR VERSION 2.8-3","text":"Reports: storing nonwear part4 reports fixed number nights >= 10. Fixed test battery voltage cwa file #678 Reports: nonwear_perc_spt appear reports part4 WW windows available Vignettes: main vignette revised undesired spaces extended handling nonwear_perc_spt part 4 reports Part 4: Fixed bug #686 causing last sleeplog night ignored sleeplog night missing","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-2","title":"CHANGES IN GGIR VERSION 2.8-2","text":"CRAN release: 2022-10-06 Timestamp conversion functions tidied #661. Part 1: Deprecate brondcounts due issues activityCounts package Part 5: Fixes #655 (unable handle M5HOUR falls midnight exactly). Part 5: Additional updates missed 2.8-1 POSIXlt character conversion compatible R-devel update svn revision r82904 (2022-09-24 19:32:52) Part5: Fixes #655 (unable handle M5HOUR falls midnight exactly). Reports: Fixes #672 (improved speed reports generation).","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-1","title":"CHANGES IN GGIR VERSION 2.8-1","text":"CRAN release: 2022-10-01 Changed POSIXlt character conversion compatible R-devel update svn revision r82904 (2022-09-24 19:32:52) Part 1: Added neishabouricounts metrics dependency actilifecounts package Part 2: Fixed time mismatch metashort activity log first day start Part 2 report: Improving f0 != 1 handled first recording data Part 4 report: now also able handle longitudinal studies repeated measurement ID Documentation: minor fix ShellDoc2Vignette affected parameters vignette midnight Documentation: Added information Neishabouri counts help files main vignette","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-28-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.8-0","title":"CHANGES IN GGIR VERSION 2.8-0","text":"CRAN release: 2022-09-19 Documentation: New package vignette added cut-points. Documentation: New package vignette added arguments Documentation: GGIR function manual parameter/argument vignette auto-integrate default values avoid inconsistencies. Documentation: Main vignette sections cut-points input argument shortened reference new vignettes. Documentation: Paragraph added processing time.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-7","title":"CHANGES IN GGIR VERSION 2.7-7","text":"Part 1: Long timegaps ActiGraph data ad-hoc .csv data result idle sleep mode now dealt metric level rather raw data level. Part 1: Speed code changing GENEActiv data converted matrix changing rolling median derived. Part 1” Deprecate option read raw data RData files, connected selectdaysfile functionality deprecated previous release. Remove zenodo .cff file simplify package citation avoid tracking RSD (issue #636) Part 1: Add extra arguments modify zero-crossing count calculation. Part 3: Adding ColeKripke sleep detection algorithm.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-6","title":"CHANGES IN GGIR VERSION 2.7-6","text":"Part 1: Deprecated g.cwaread internally replaced GGIRread::readAxivity. Part 1: Deprecated g.binread internally replaced GGIRread::readGenea. Part 1: Deprecated resample internally replaced GGIRread::resample. Part 1: Added temporary option choose using GENEAread GGIRread::readGENEActiv reading GENEActiv .bin files. Part 1 + 2: Deprecated selectdaysfile functionality. Deprecated function g.getidfromheaderobject, functionality merged g.extractheadervars","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-5","title":"CHANGES IN GGIR VERSION 2.7-5","text":"Part 1: AX6 gyroscope data correctly ignored g.getmeta.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-4","title":"CHANGES IN GGIR VERSION 2.7-4","text":"Part 1: Arguments configtz desiredtz now also used .gt3x data. Part 1: Temporary copy read.gt3x code replaced direct dependency read.gt3x Vignette: Cut-point documentation paragraph improved. Part 1: Mismatches reading ActiGraph csv files handled (mainly header = TRUE resulted acceleration values disregarded considered header iteration). Part 1: Fixed issue #573 (code redundancy impute time gaps read.myacc.csv g.imputeTimegaps) Part 1: g.imputeTimegaps extended now can handle time gaps begining, end file, time gaps one chunk next one. Part 2: QC plot now legend minor updates layout. Part 4: Person level aggregation now takes place per filename instead per ID, prevent identical IDs repeated recordings get aggregated single ling. Part 4: ID matching accelerometer file sleep log improved ignore spaces.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-3","title":"CHANGES IN GGIR VERSION 2.7-3","text":"Part1: Added option expand last day recording trigger analyses day, see argument expand_tail_max_hours params_general. Part 1: Add extraction ID serial number Movisens data Part 2: Corrected calendar date time stamps daysummary report last day recording. Part 2: , improvement activity diary functionality warn user date format inconsistent. Part 2: Missing values activity diary now skipped non-neighboring cells valid data can define segments. Part 3: Improved handling sleep ends hour noon last day recording. Part 4: Fixing #592 concerning using set time window guider sleep analyses Part 4: Fixed issue #592 caused GGIR incorrectly warn used using set time window guider functionality correctly","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-2","title":"CHANGES IN GGIR VERSION 2.7-2","text":"Part 4: Fixing timezone sensitivity OSx Pacific timezone gloadlog function. Inform user (onAttach) local GGIR version behind CRAN version. Part 2: Enhancing activity diary functionality warn user date format inconsistent treat cells dot missing values. Part 1: Fixing issue #577 concerning use temperature data ad-hoc csv file format Part 5: Fixing issue #582 affecting windows single fragment spans entire window.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-1","title":"CHANGES IN GGIR VERSION 2.7-1","text":"CRAN release: 2022-05-30 Fixing bug #566 concerning decision parallel process made late Part 4: Attempt fix timezone sensitivity OSx Pacific timezone gloadlog function.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-27-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.7-0","title":"CHANGES IN GGIR VERSION 2.7-0","text":"CRAN release: 2022-05-23 Renaming function g.shell.GGIR GGIR adding new function g.shell.GGIR wrapper function around GGIR function preserve functionality. Deprecating functionality read GENEA bin files (confused GENEActiv), dependency matlab archived. matlab back online reinsert functionality. Cosinor analysis now accounts DST (see vignette details)","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-6","title":"CHANGES IN GGIR VERSION 2.6-6","text":"Part 2: Dependency added ActCR perform Cosinor Extended cosinor analyses, see new argument cosinor. Part 2: g.IVIS function now able handle missing data points, used cosinor analaysis Part 2: g.IVIS function now option specify acceleration threshold using IVIS.activity.metric=2, used cosinor analaysis General: 1 file processed code skips setting parallel processing interface.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-5","title":"CHANGES IN GGIR VERSION 2.6-5","text":"Vignette read.myacc.csv function included. Parameter objects documentation moved g.shell.GGIR. Part 4: Advanced sleeplog handling improved now also handles dates sleeplog far beyond recording dates. Part 2 report: Number days plot now auto scales length measurement. Part 2 report: Fixed bug introduced 2.6-3 making impossible generate report 1 file fix bug introduced 2.6-4 messing merging files. Part 1: Now auto-converts files GT3X extension gt3x required read.gt3x. Part 4: Removed unnecessary warning loading sleeplog.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-4","title":"CHANGES IN GGIR VERSION 2.6-4","text":"Part4: Bug fixed handling advanced sleeplog data start acc recording match start sleeplog Deprecated functionality reading GENEActiv csv files without read.myacc.csv functionality.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-3","title":"CHANGES IN GGIR VERSION 2.6-3","text":"Part2: Non-user facing arguments object named BodyLocation replaced sensor.location consistent term used part 3. Minor documentation updates cover brondcounts reflect bout.metric longer 4 default Minor change parallel processing GGIR create cluster larger number files process. Fixes #535 Part 4: Fixes bug #531 re. sleeplog ignored first night missing Part 4: Now relies ID extraction part 1-3 attempts extract ID filename fails. Previously extracted ID twice. General: Speeded-implementation rounding decimal places introduced release 2.6-1","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-2","title":"CHANGES IN GGIR VERSION 2.6-2","text":"Part 1: Can now handle .gt3x produced CentrePoint now user needs change upercase file extension lowercase Part 1: Fixed issue #520 handling Movisens data Part 1: Fixed issue #523 calibration ActiGraph csv files General: Prevent redundant warnings resulting unnecessary checks params objects Report generation per window: Fix undefined function call introduced 2.6-1","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-1","title":"CHANGES IN GGIR VERSION 2.6-1","text":"Part 1: Fixed bug prohibitted processing files subfolders. Part 1: Dynamic range can now extracted Axivity .cwa files equal 8g. Part 2: Qwindows logically ordered reports. Part 2: Fixed bug #516 regarding passing dateformat. Part 4: Fixed bug introduced 2.6-0 relating sleeplog guider assined even sleeplog used. Part 5: Improved handling missing sleep estimate first night. General: Fixes bug introduced 2.6-0 relating storage configuration file comma-separated machines General: GGIR reports now saved maximum 3 decimal places numeric variables.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-26-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.6-0","title":"CHANGES IN GGIR VERSION 2.6-0","text":"CRAN release: 2022-02-02 Part 1: Fixed warning working vector filenames argument datadir. Part 2: Added argument max_calendar_days allow user control maximum number calendar days include analysis, irrespective argument strategy value. Part 2: Argument maxdur longer specific strategy 1, applied irrespective value argument strategy. Part 4: Fixed issue sleeplog indicated guider even corresponding timestamp resolve timestamp. Part 5: Time series output filenames now auto-stripped [.]|rdata|csv|cwa|gt3x|bin character string. Fixed issues introduced 2.5-6 release: maxNcores defined part 1, params_output passed part 3, params objects unneccesarily repeatedly checked.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-6","title":"CHANGES IN GGIR VERSION 2.5-6","text":"Internal re-structuring: Arguments now internally passed via parameter objects make code code documentation easier navigate. break backward compatibility users able continue working older R scripts.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-5","title":"CHANGES IN GGIR VERSION 2.5-5","text":"Fixed bug #484 affecting part 5 report able generate non-matching columns milestone data Part 2: Recently introduced BrondCounts ZeroCrosssing Counts long auto-scaled 1000 like metrics gravity-units. Part 3: Fixed warning SRI calculated DST day 23 hours Part 5: sibreport timeseries now stored per sib definition.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-4","title":"CHANGES IN GGIR VERSION 2.5-4","text":"Part 1: Now able process modern .gt3x data thanks R package read.gt3x. Part 1: Timegaps zeros across three axes ActiGraph data (.csv .gt3x) now automatically imputed last recorded value normalise vector 1. Adding BrondCounts optional acceleration metric dependency activityCounts, enabling Sadeh Galland algorithms use sleep estimation.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-3","title":"CHANGES IN GGIR VERSION 2.5-3","text":"Part 1: Deprecating function g.metric functionality taken g.applymetrics (announced users warning year now). Part 2: Adding warning ID extracted file based argument idloc. Part 4: Empty incomplete sleeplog rows now better ignored Part 4: longer R warning given ID missing sleeplog, common user can already see csv reports.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-2","title":"CHANGES IN GGIR VERSION 2.5-2","text":"Part 3: Now makes sure HASPT skipped user configures def.noc.sleep set time window. feature probaly people use nowadays broke 2.5-0 release. g.shell.GGIR: Now gives warning user supplies double arguments. Part 4: Now warns none IDs sleeplog matched accelerometer data. Part 1: read.myacc.csv fixes bug argument rmc.check4timegaps Part 3: Fixes #472 SRI calculation possible complete absence sleep recording Part 5: Experimental nap detection added report time series, currently model 3.5 year olds available.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-1","title":"CHANGES IN GGIR VERSION 2.5-1","text":"g.shell.GGIR: Removing forced assignment sleepwindowType argument “SPT” g.shell.GGIR: Reviving setwindow option def.noc.sleep, broke","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-25-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.5-0","title":"CHANGES IN GGIR VERSION 2.5-0","text":"CRAN release: 2021-10-26 Minor updates function documentation vignettes visualreport: Month now displayed name rather number avoid confusion format.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-24-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.4-3","title":"CHANGES IN GGIR VERSION 2.4-3","text":"Vignette expanded documentation non-default variables part 4 csv report Vignette added tutorial perform segmented day analysis Part 1: sensor fusion functionality introduced version 2.2-2, bit experimental development, now removed GGIR added value turned limited. Part 2: Code ID extraction tidied , new idloc argument options added. Part 2: Activity log can now also empty days. Part 2: Now also exported long format qwindow length longer 2. Part 3 4 expanded Sleep Regularity Index. Part 4 number awakenings now also output. Part 5 LUX per segment calculation bug fixes. visualreport code modified visualises day least 30 minutes data unless sleep estimated corresponding night.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-24-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.4-2","title":"CHANGES IN GGIR VERSION 2.4-2","text":"Part 1 now able derive zero-crossing counts needed Sadeh algorithm Part 2 function g.conv.actlog use activity log guide qwindow now able tailor dateformat Part 3 now option tailor SPT detection hip data using horizontal longitudinal angle indicator lying Part 3 code restructured estimate SPT SIB separated function (HASIB HASPT) g.sib.det readable. Part 3 now option select SIB algorithm, including: vanHees2015, Sadeh1994, Galland2012 Part 4 now able handle advance sleeplog format also contain nap nonwear entries per date Part 4 report now includes guider estimates also ‘cleaned’ report Part 4 WASO NOA (Number awakenings) added output Part 4 Able handle time bed diaries/algorithms, generates sleep latency sleep efficiency estimate available Part 5 now able export sustained inactivity bouts self-reported naps nonwear csv report aid nap analysis Part 5 numeric timing MX-metrics changed hour day Part 5 Lux per segment variables now turn LUX SPT zero Part 4 legend added visualisation Part 5 bug fixed caused part5 single row output stored single column","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-24-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.4-1","title":"CHANGES IN GGIR VERSION 2.4-1","text":"Part 1 fixed bug related g.getmeta reading movisens files Part 1 resampling function expanded option choose interpolation technique Part 3 fixed bug introduced 2.4-0 making impossible process long recordings many sustained inactivity bouts","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-24-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.4-0","title":"CHANGES IN GGIR VERSION 2.4-0","text":"CRAN release: 2021-06-03 Part 5 LUX variables per segment day improved Removing calls closeAllConnections requested CRAN","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-23-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.3-3","title":"CHANGES IN GGIR VERSION 2.3-3","text":"Part 5 fragmentation analysis added Part 5 report, added argument week_weekend_aggregate.part5 Part 5 intensity gradient now also extracted waking hours Part 5 LUX variables added (beta-implementation) Part 2 5, Bout detection algorithm improved, see bout.metric 6 Parts 1, 2, 3 5: Added argument maxNcores control maximum number cores used parallel processing mode Part 1 fixed bug related ENMOa calculation made metashort data frame empty Part 2 fixed bug report generation part 2 Fixed bug related visualization report file processed part 4","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-23-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.3-2","title":"CHANGES IN GGIR VERSION 2.3-2","text":"Part 1 using ad-hoc data format: now able handle timestamp column. Part 2 report using ad-hoc data format header: now able extract store serial number part2 report. Test file generation unit tests improved. Thanks Lena Kushleyeva. Part 2 estimation longitudinal axis related error handling improved","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-23-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.3-1","title":"CHANGES IN GGIR VERSION 2.3-1","text":"Part 3 bug fixed usage argument dayborder 0. Thanks Ruben Brondeel spotting . Part 3 bug fixed recognition fraction night invalid first night. Thanks Ruben Brondeel spotting. Part 1 fixed warning related closing connection bin files. Thanks John Muschelli. Part 2 fixed warning deprecated IVIS argument exist","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-23-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.3-0","title":"CHANGES IN GGIR VERSION 2.3-0","text":"CRAN release: 2021-02-17 Part 5 bug fixed g.part5.fixmissingnight night also missing sleeplog Part 1 Documentation sensor fusion functionality improved Part 2 csv report generation speeded ","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-22-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.2-2","title":"CHANGES IN GGIR VERSION 2.2-2","text":"Part 5 bug fix waking time first night, WW mode HDCZA guider Various minor function expansions documentation vignette Part 2 Earlier draft implementation IV metrics now better tested bugs fixed. Part 2 Default value argument IVIS.activity.metric changed 2. Migrate codecoverage testing Github Actions Part 1 Implemented initial sensor fusion functionality AX6 cwa data","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-22-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.2-1","title":"CHANGES IN GGIR VERSION 2.2-1","text":"Part 3 Fixes bug introduced 2.2-0 recordings without sustained inactivity bouts Transitioned Travis+Appveyor CI GitHub Actions Part 5 fixed issue expected max number files process Enabled console display GGIR version number running g.shell.shell Windows Embedded new GGIR logo update layout vignette","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-22-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.2-0","title":"CHANGES IN GGIR VERSION 2.2-0","text":"CRAN release: 2020-11-22 Part 5 improved midnights identification recording starts 0am Part 5 fixed days misclassification MM output recordings starts non-wear days Documentation added vignette L5TIME_num M5TIME_num","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-21-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.1-3","title":"CHANGES IN GGIR VERSION 2.1-3","text":"Deprecating sessionInfo storage caused problems large scale parallel processing Part 1 fix 1 minute time shift recording starts full minute. Improved compatibility older .cwa file formats.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-21-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.1-2","title":"CHANGES IN GGIR VERSION 2.1-2","text":"Part 5 bug fixed day name date allocation daysleepers MM report Fixes bug part 4 5 missing nights accounted assessing max night number. Fixes bug part 3 introduced version 2.1-0 re. SPT detection daysleepers. Fixes redefinition time windows (“MM”) part 5 include recording days measurement starts multiple non-wear days. GGIR version now displayed console running GGIR Bout metric 5 added enable allowing gaps bouts.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-21-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.1-1","title":"CHANGES IN GGIR VERSION 2.1-1","text":"Part2 argument qwindow now able handle person specific activity diary Intensity gradient now also extracted long MX windows, see MX.ig.min.dur","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-21-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.1-0","title":"CHANGES IN GGIR VERSION 2.1-0","text":"CRAN release: 2020-08-27 Part 2 now able guided activity log (see qwindow) Part 2 now stores output also long format day segmented Actigraph serial number now extracted csv fileheader Actigraph serial number now used assign correct dynamic range per Actigraph generation (6 8 g respectively). Previously 8 assumed. Part 2 indicator added axis correlated 24 hours, hip data may indicator vertical axis orientation. Part 1 bug fixed timestamp generation caused measurements start exactly hour 0 minutes 1 minute offset time. Part 1 reduce data storage size epoch level metric values now rounded 4 decimal places. Part 4 report, issue fixed double night entries. Bug fixed Actigraph starttime recognition machine language English months expressed b hh format. Bug fixed accounting daysleeper first night ofr recording.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-20-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.0-2","title":"CHANGES IN GGIR VERSION 2.0-2","text":"Visual report, fixed argument viewingwindow g.plot5 (visualreport) Part 1 rmc.myacc.csv now raises warning timestamps recognised Part 1 fixed rmc.dynamic_range correctly passed 2.0-1 Part 5 sub-function round_seconds_to_ws3new now handles missing values","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-20-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.0-1","title":"CHANGES IN GGIR VERSION 2.0-1","text":"Now able read gzipped csv files Part 2 Fixed midnight selection one sample Part 1 tidied metric calculation added metrics Part 2 Added strategy 4 (ignore data first midnight) Data movisens accelerometers can now processe Part 5 timestamps timeseries output RData format (new since 2.0) now correctly accounts timezone Part 4 now option exclude first last night","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-20-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 2.0-0","title":"CHANGES IN GGIR VERSION 2.0-0","text":"CRAN release: 2020-05-01 Now R version 4.0 compatible Part 1 Clipping detection expanded: value block 150 percent dynamic range ignore entire block. Part 2 report now able handle changing variable count due missing data Part 2 L5M5 better able handle small qwindow intervals Part 3 HDCZA algorithm expanded able detect daysleepers Part 3 various improvements qc plots. Part 5 now also stores full cleaned output Part 5 now better handles missing days part 4 output. Part 5 behavioral class SIB removed daytime Part 5 time series export user-friendly. Part 5 function code split 7 new functions. Part 4 + 5 argument data_cleaning_file added. Part 4 + 5 output variable names improved documented vignette Numunpack function moved back c++ Various updates visualreport (plot5 function) External function embedding feature added now consistently refer ID (id) calendar_date, spelling inconsistent. Vignette now documentation sleep time-use analysis.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-111-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.11-1","title":"CHANGES IN GGIR VERSION 1.11-1","text":"Metric ENMOa now facilitated MVPA calculation Bug fixed part4 daysleeper handling Part5 WW window calculation improved, first day now uses sleeplog HDCZA algorithm estimate, last day ignored sleep estimates available. also affects csv exports argument save_ms5rawlevels. Added explanation vignette use published cut-points. Axivity AX6 (acc + gyro) cwa format now supported file reading, actually using gyro data feature calculation future work. mean time, gyro signal ignored rest GGIR. Axivity AX3 acc data cwa format can now also read dynamic range 8g. Previously possible. Fixed bug related visual report generation qwindow set non-default value. Added way handle Actigraph files start several days zeros complicates auto-calibration. Default desiredtz timezone machine.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-111-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.11-0","title":"CHANGES IN GGIR VERSION 1.11-0","text":"CRAN release: 2019-12-04 Fixed bug emerged previous version GENEActiv .bin data processed g.getmeta files. read.myacc.csv now able resample data irregular sample rates handle timestamps character format. function resample can now handle matrix size, previous 3 columns. Fixed bug using multiple non-angle metrics part1 trying calculate 1to6am average metric value part 2. Expanded Actigraph date format recognition ability. visualisationreport (function g.plot5) enhanced colour coding activity classes. Fixed bug sleep period time recognition first day measurement.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-110-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.10-7","title":"CHANGES IN GGIR VERSION 1.10-7","text":"CRAN release: 2019-10-06 Fixed functionality supply calibration coefficients file backup.cal.coef. Fixes OSx flavor released CRAN previous version. Upgrades foreach loop ease package maintenance Documentation part4 expanded clarify difference full cleaned report. Non-wear detection now possible 1 minute resolution, previously 5 minute. Function read.myacc.csv now able utilize 3rd party wear detection.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-110-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.10-5","title":"CHANGES IN GGIR VERSION 1.10-5","text":"Device serial number recognition Axivity cwa files fixed New GitHub release, previous version install.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-110-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.10-4","title":"CHANGES IN GGIR VERSION 1.10-4","text":"CRAN release: 2019-09-09 Fixed bug introduced version 1.10-1 conversion numeric character sleep times Dependencies dependencies removed DESCRIPTION file Fixed 1to6am variables, wrong version 1.10-1 Added functionality handle accelerometer data accelerometer brand stored csv files via read.myacc.csv. Pass arguments function g.shell.GGIR use functionality. Added reference new GGIR paper documentation","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-110-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.10-1","title":"CHANGES IN GGIR VERSION 1.10-1","text":"CRAN release: 2019-08-23 Configuration file option now added g.shell.GGIR documented vignette metric lfen added (low-pass filter signels followed Euclidean norm) issues fixed passing hb lb arguments argument backup.cal.coef can now also handle data_quality_reports.csv files part 1 now automatically uses previously generated calibration coefficients datafile previously processed, see documentation g.part1 details. Enabled multiple values argument winhr, part2 can now calculated example L3M3, L5M5, L6M6, L10M10 one go. , option added (qM5L5) extract percentiles (quantiles) value distribution corresponding windows. Moved IVIS calculation seperate function, split function g.analyse. Now possible specify time windows need ignored imputation, see TimeSegments2ZeroFile. Default value argument mode changed mode = c(1,2) mode = 1:5, perform parts. Checks added user write read access permission, subsequent warnings given.. Parts 1, 2, 3, 5 can now use multi CPU cores speeds processing. Argument minimumFileSizeMB added g.part1 aid filtering small data files.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-19-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.9-2","title":"CHANGES IN GGIR VERSION 1.9-2","text":"CRAN release: 2019-07-03 Added functionality work studies accelerometer configured one timezone used timezone. functional AX3 cwa data moment. See argument ‘configtz’. Sleep estimation now skipped day one sustained inactivity bout Arguments ignorenonwear default value changed TRUE def.noc.sleep default changed 1 line literature. Fixed AX3 csv format starttimestamp recognition Part5 csv export now also includes class labels (previously class numbers).","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-19-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.9-1","title":"CHANGES IN GGIR VERSION 1.9-1","text":"CRAN release: 2019-05-08 Fixed part5 output midnight-midnight window monitor worn first days. Fixed assumption using argument idloc=2 ID letter end, automatically removes last value index. code now first checks assumption. Update vignette elaborate explanation optional arguments g.shell.GGIR.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-19-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.9-0","title":"CHANGES IN GGIR VERSION 1.9-0","text":"CRAN release: 2019-03-15 functionality storefilestructure now store filestructure output part 2, 4 5. filelocationkey.csv previously written storefilestructure redundant removed. sessioninfo storage improved. Fixed bug caused part2 provide incorrect window specific estimates first day. measurement day incomplete (23, 24 25 hours). Calibrate function now better able handle files week data, auto-calibration struggles find enough sphere data first week. Fixed part5 output midnight-midnight window monitor worn first days.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-18-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.8-1","title":"CHANGES IN GGIR VERSION 1.8-1","text":"CRAN release: 2019-01-11 Part4 handling clocktime 9am corrected addition fix version 1.7-1. Fixed bug Actigraph csv header recognition column 2 3 NA (prevented processing ) Fixed bug g.report.part5 calculation total number valid days per person. Fixed bug caused part5 struggle timezones west greenwhich time. desiredtz added explicit argument g.inspectfile, g.cwaread, g.dotorcomma. Fixed bug pageindexing g.readaccfile machine runs memory. Fixed bug pageindexing Actigraph csv files (10 rows raw data skipped every block (day)) data. Added informative warning message g.report.part2 file read. Fixed bug scenario person daysleeper wakingup time occurs noon, 12 hours early. Fixed bug re. storefolderstructure=TRUE causing 2 variables drop g.report.part4 storefolderstructure=TRUE. g.intensitygradient enabled handle absense data. tidied redundant even confusiong information printer console","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-17-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.7-1","title":"CHANGES IN GGIR VERSION 1.7-1","text":"CRAN release: 2018-11-25 Fixed order Nbouts output g.part5 consistent bout duration. Functionality added read AX3 Axivity csv files following characteristics: Raw data g-units, resampled, timestamps stored first column. Fixed bug caused date last measurement day part5 output one day ahead argument dayborder=12. Part5 struggled process measurements 40 days, now fixed. g.getstarttime can now also handle dates Actigraph csv-file headers dot separated, e.g. 20.05.2016, handled 20-05-2016 20/05/2016. Part4 handling clocktime 9am corrected. Filename identification part5 improved saving raw level data. Fixed ability read wav file header shorter expected. Fixed issue CWA read functionality causing files completely read","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-16-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.6-7","title":"CHANGES IN GGIR VERSION 1.6-7","text":"CRAN release: 2018-09-23 Link Zenodo doi generation removed. Broken url fixed vignette.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-16-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.6-1","title":"CHANGES IN GGIR VERSION 1.6-1","text":"Report part 4: Count available nights accelerometer data fixed Report part 4: NA NaN values replaced empty cells like reports Intensity gradient analysis added part2 output according Rowlands et al. MSSE 2018, doi: 10.1249/MSS.0000000000001561 Documentation part4 output variables improved. Providing incorrect value sleeplogidnum part4 now provide informative error message Added functionality handle timestamps start year.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-16-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.6-0","title":"CHANGES IN GGIR VERSION 1.6-0","text":"CRAN release: 2018-07-29 Fixed timezone dependency g.analyse (affected order columns), g.part5 (affected time detection), consequently test_chainof5parts.R Read functionality Actigraph csv files speeded replacing read.csv data.table::fread Argument qwindow now able handle input vectors longer 2 derive part2 variables time window can defined values qwindow, e.g. value =c(0,8,24) analyse windows: 0-8, 8-24 0-24 hour. Argument L5M5window deprecated argument qwindow now defines window L5M5 analysis performed. Argument winhr now reflected g.analyse/g.part2 output variable names, previously variable name hardcoded L5M5, even winhr 5. Part2 output variable names updated consistent structure explicit timewindow calculated. variables calculated full recording (using diurnal normalization) now extension “fullRecording”, contrast variables calculated measurement days ‘enough’ valid data. Fixed calculation N valid WEdays Nvalid WKdays part2 wrong since version 1.5-21. counted days exclude days insufficient amount data. Fixed warning message test g.part5. output variable acc_timeinbed renamed acc_SptDuration avoid confusion terminology used supporting papers, SPT (sleep period time) detection time bed detection. output variable acc_dur_noc renamed acc_SleepDurationInSpt improve clarity variable name relative acc_SptDuration","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-24","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-24","title":"CHANGES IN GGIR VERSION 1.5-24","text":"CRAN release: 2018-07-09 Variable names ENMO accidentatly disappeared g.analyse output 1.5-23, now reversed. Fixed issue g.part5 handling last day measurement using ‘MM’ windows dayborder equal 0 (midnight) sometimes resulting last day longer 25 hours. Fixed error message g.part5 occurs calculating L5M5 day shorter L5M5 time window.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-23","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-23","title":"CHANGES IN GGIR VERSION 1.5-23","text":"CRAN release: 2018-07-04 Unit tests speeded using smaller test file.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-22","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-22","title":"CHANGES IN GGIR VERSION 1.5-22","text":"g.part4 bug fixed introduced version 1.5-21 regarding handling daysleepers (people wake noon) causing sleep estimates zero.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-21","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-21","title":"CHANGES IN GGIR VERSION 1.5-21","text":"CRAN release: 2018-04-22 g.part5 now able generate summary measurment days (thanks Jairo). MM results g.part5 now correctly stores onset waking single date per row. Various checks added g.part4 ensure measurements shapes size can processed. minor improvements documentation g.part5 size example data vignette images reduced reduce package size","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-18","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-18","title":"CHANGES IN GGIR VERSION 1.5-18","text":"CRAN release: 2018-03-18 Improved handling day saving time g.part3 g.part4 within two nights year clock changes (DST already correctly handled rest year) Algorithm HDCZA now default algorithm use, sleeplog used entry missing particular night. pdf generation part 3 now optional (argument .part3.pdf), may useful slightly speeding data processing takes second generate plot. test added g.getbout function. bug fixed timestamp recognition object timebb function g.part5","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-17","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-17","title":"CHANGES IN GGIR VERSION 1.5-17","text":"CRAN release: 2018-02-19 SPT-window detection now updated constrained threshold make robust accelerometer brand differences. approach used PSG https://www.biorxiv.org/content/10.1101/257972v1","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-16","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-16","title":"CHANGES IN GGIR VERSION 1.5-16","text":"CRAN release: 2018-01-17 cwaread issue #57 fixed SPT-window detection included (work progress) cpp code fixed compile anymore machine specific function test removed following feedback CRAN maintainers","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-12","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-12","title":"CHANGES IN GGIR VERSION 1.5-12","text":"CRAN release: 2017-08-08 Fixed bug introduced 1.5-1: large window size 3600 seconds accidentally hardcoded g.readaccfile function added GGIR version 1.5-1 Codecov testing added badge added README file Functions added create dummy accelerometer file (csv) dummy sleeplog (csv), needed testing Bug fixed g.wavread recognize .wav extension file header files alternative header size Default IVIS_epochsize_seconds parameter updated 30 3600 g.part1 messages consolo now condensed printing number blocks loaded separated spaces rather new lines Split g.part5 function multiple smaller functions Replace hard-coded “Europe/London” g.part5 desiredtz, make function work users outside UK Data frame output g.part5 now tidied removing empty rows columns generated Calculation mean amplitude deviation (MAD) now implemented g.part1 argument .mad Percentiles levels g.part2 now calculated acceleration metrics selected g.part3, g.part4 g.part5 now independent metric ENMO work, argument acc.metric allows user select metric use describe behavior Argument dayborder now included g.part5 consider whole measurement case protocol starts midnight Jairo Migueles added list contributors","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-10","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-10","title":"CHANGES IN GGIR VERSION 1.5-10","text":"CRAN release: 2017-07-12 Date format recognition improved Actigraph csv files","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-9","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-9","title":"CHANGES IN GGIR VERSION 1.5-9","text":"CRAN release: 2017-05-21 g.inspectfile now also functional cwa data option added enforce dynamic range argument dynrange vignette expanded","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-7","title":"CHANGES IN GGIR VERSION 1.5-7","text":"CRAN release: 2017-05-09 vignette expanded Bugs fixes relation new cwa-read functionality c++ routine registration Documentation added underlying functions","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-3","title":"CHANGES IN GGIR VERSION 1.5-3","text":"CRAN release: 2017-04-28 vignette added Bugs fixes relation new cwa-read functionality Bugs fixes correct number days recognition part5","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-15-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.5-1","title":"CHANGES IN GGIR VERSION 1.5-1","text":"CRAN release: 2017-04-23 Removed teLindert2013 metric, used verified Split g.getmeta function multiple smaller functions Added IV variables g.analyse (still explorative version) bug fixed related wav file read errors function g.cwaread added (credits E. Mirkes) reading Axivity .cwa-format data. g.shellGGIR automatically use function input data .cwa extension bug fixed related GENEactiv starttime recognition introduced version 1.2-11 g.part5 documentation added output","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-14","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.4","title":"CHANGES IN GGIR VERSION 1.4","text":"CRAN release: 2017-01-22 bug fixed functionlity process specific days measurement (credits J Heywood) bug fixed midnight recognition g.part5 improvement handling measurements start minutes midnight (credits E Mirkes) bug fixed related processing files shorter 1 day, introduced previous version documentationa added Axivity wav-format data start made implementing code testing functionality using testthat covr documentation improved argument def.noc.sleep function g.part4","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-13-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.3-2","title":"CHANGES IN GGIR VERSION 1.3-2","text":"CRAN release: 2016-11-28 g.part5 added. g.part5 merges output first four parts Functionality added read Axivity wav-format files acceleration first three channels. documentation added yet confirmation works well","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-11","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-11","title":"CHANGES IN GGIR VERSION 1.2-11","text":"CRAN release: 2016-08-31 Bug fixed related MVPA variable. bug result updates version 1.2-10","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-10","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-10","title":"CHANGES IN GGIR VERSION 1.2-10","text":"CRAN release: 2016-08-28 Changed function argument ‘mvpa.2014’ ‘bout.metric’ across package preparation central defintion bouts future GGIR version provide bout calculations MVPA also inactivity. , added function g.getbout improve transparency bout calculations Updated documentation function g.analyse clarify different bout metric definitions Improvements functionality process specific days long accelerometer file using argument selectdaysfile Timestamps now ISO 8601 format. updated code can still handle old timestamp format, newly processed files produce timestamps ISO 8601 format. practical difference include numeric timezone indicator. Bugs fixed data selection g.getmeta function. old code tended drop last 30-45 minutes file. Added optional features generated g.getmeta, including rolling medians acceleration signals.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-8","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-8","title":"CHANGES IN GGIR VERSION 1.2-8","text":"CRAN release: 2016-05-24 Updated documentation function g.analyse clarify different mvpa bout definitions mvpa.2014 = TRUE turned back (disable last version)","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-7","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-7","title":"CHANGES IN GGIR VERSION 1.2-7","text":"CRAN release: 2016-05-14 mvpa.2014 TRUE/FALSE swapped, FALSE now default mvpa.2014 = TRUE disabled","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-6","title":"CHANGES IN GGIR VERSION 1.2-6","text":"CRAN release: 2016-05-11 Modified warning message relation change MVPA bout defintion","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-5","title":"CHANGES IN GGIR VERSION 1.2-5","text":"CRAN release: 2016-05-09 Accelerometer non-wear time now also reported output part 4 Part 1 now able process specific days measurement via argument selectdaysfile. useful measurement lasts week participant instructed wear accelerometer one two specific days. Argument mvpa.2014 closedbout added function g.analyse. calculation MVPA (moderate vigorous physical activity) available since 2014. calculation improved, user option continue using old calculation.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-2","title":"CHANGES IN GGIR VERSION 1.2-2","text":"CRAN release: 2016-01-08 Bug fixed loading data files () large amounts data Bug fixed starttime allocation measurements starting 15 minutes midnight","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-1","title":"CHANGES IN GGIR VERSION 1.2-1","text":"CRAN release: 2015-12-09 Literature reference sleep detection updated Argument backup.cal.coef now improved feedback something goes wrong Report generation part 4 much faster now Bug fixed part 4 assignment dayname person sleeps day g.shell.GGIR now capable handling minimal input argument specifications Console output part 3 4 compact now","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-12-0","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.2-0","title":"CHANGES IN GGIR VERSION 1.2-0","text":"CRAN release: 2015-10-27 Package expanded functions detecting sleep (g.part3 g.part4)","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-11-5","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.1-5","title":"CHANGES IN GGIR VERSION 1.1-5","text":"CRAN release: 2015-05-11 Additional bugs fixs related dealing csv-format data Actigraph accelerometer brand g.part2 now also stores output milestone data just like g.part1. facilitate parallel processing large amounts data files clusters. orginal report generation functionality g.part2 now moved shell function g.shell.GGIR part3, 4 5 scheduled later year combine milestone data multiple analysis parts. therefore, logical control report generation top level function hierarchy (g.shell.GGIR). g.part1 now comes option provide backup calibration coefficients case auto-calibration unsuccessful. function primarily designed studies short lasting experiments. g.part2 now option export epoch values csv-file. Note epoch values also stored .RData milestone file part2. export option mainly ease access epoch level data outside R environment. g.shell.GGIR now offers option overwrite previously generated milestone data variable ‘overwrite’. default setting (FALSE) still skip previously analysed files, intended avoid analyses twice interruption. However, overwriting previously generated milestone data useful modifications made input arguments. g.shell.GGIR now offers option record folderstructure accelerometer file located, especially useful studies accelerometer files stored hierarchally line study design.","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-11-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.1-4","title":"CHANGES IN GGIR VERSION 1.1-4","text":"CRAN release: 2014-11-06 Additional bugs fixs related recognising data format Actigraph data Angle variables now extracted based 5 second rolling median opposed 501 sample rolling median","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-11-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.1-3","title":"CHANGES IN GGIR VERSION 1.1-3","text":"CRAN release: 2014-10-21 Package expanded functions: g.part1, g.part2, g.shell.GGIR. shell functions help movement scientists utilize package without much prior knowledge R Additional bugs fixs related recognising data format Actigraph data Package expanded axis angle metrics Package expanded metric replicating teLindert2013 counts, see g.getmeta Package expanded metric ENMOa, see function tutorial g.getmeta","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-6","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-6","title":"CHANGES IN GGIR VERSION 1.0-6","text":"CRAN release: 2014-09-01 Bug fixed related recognising date format csv-file header Actigraph accelerometer brand Literature reference added function g.calibrate function g.getmeta expanded argument ‘chunksize’","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-4","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-4","title":"CHANGES IN GGIR VERSION 1.0-4","text":"CRAN release: 2014-04-29 Implemented functionality csv-fromat data GENEActiv Actigraph. seems work test files , testing may necessary Cleaned NaN NA output aim consistent annotation missing data","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-3","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-3","title":"CHANGES IN GGIR VERSION 1.0-3","text":"CRAN release: 2014-03-27 Fixed bug modified g.analyse version 1.0-2","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-2","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-2","title":"CHANGES IN GGIR VERSION 1.0-2","text":"CRAN release: 2014-03-14 Expanded g.analyse estimates time spent moderate vigorous activity (construct popular among physical activity researchers) Re-named number variables output g.analyse friendly re-use stata sas. majority variable names now shorter include spaces, dots commas","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-1","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-1","title":"CHANGES IN GGIR VERSION 1.0-1","text":"CRAN release: 2014-01-29 Fixed Linux-Windows sensitivty g.getmeta. Certain damaged files can read mmap.load set FALSE package GENEAread. Function g.getmeta GGIR catches problem turns mmap.load FALSE necessary. catch worked well Linux, R Windows. now fixed ","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-10-00","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 1.0-00","title":"CHANGES IN GGIR VERSION 1.0-00","text":"CRAN release: 2013-12-21 Added examples Expanded documentation function g.analyse Fixed bug extraction starttime caused starttime truncated 00:00:00 fraction measurements. Fixed bug extract temperature function g.calibrate Deleted three explorative variables extracted g.analyse argument doangle set TRUE function g.getmeta. number bugs lack referable journal publications made decide remove variables working . intend re-releasing variables course 2014. Please contact causes problems","code":""},{"path":"/news/index.html","id":"changes-in-ggir-version-06-17","dir":"Changelog","previous_headings":"","what":"CHANGES IN GGIR VERSION 0.6-17","title":"CHANGES IN GGIR VERSION 0.6-17","text":"CRAN release: 2013-08-08 first version","code":""}]
